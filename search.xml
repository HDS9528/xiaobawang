<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Gitee+PicGo图床搭建笔记</title>
    <url>/xiaobawang/post/b8b81b15.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr>
<p>图床是干什么的？图床一般是指储存图片的服务器。<br>设置图床之后，在博客中插入的图片链接就可以随时在线预览。</p>
<p>神奇的PicGo就是为了解决这个问题诞生的，它可以将图片上传到指定的图床上，然后返回markdown链接，直接粘贴到你的文档中。</p>
<p>目前国内环境，使用PicGo + <a href="https://links.jianshu.com/go?to=https://gitee/com">码云</a>来实现markdown图床，既可以白嫖，又方便快捷，可以说得上是最优解。</p>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul>
<li><p>图库上传管理软件：<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p>
<p>包括<code>picgo-plugin-gitee-uploader</code>插件</p>
</li>
<li><p>MarkDown编辑软件：<a href="https://www.typora.io/">Typora</a></p>
</li>
</ul>
<h3 id="PicGo安装"><a href="#PicGo安装" class="headerlink" title="PicGo安装"></a>PicGo安装</h3><p><strong>安装后界面如下：</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404174256499.png"></p>
<h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><p>选择最底下的<code>插件设置</code>，搜索<strong>gitee</strong>，安装第二个插件<code>gitee-uploader1.xxx</code>。<img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/82708.png"></p>
<hr>
<p>这里注意一下，必须要先安装<a href="https://nodejs.org/zh-cn/">node.js</a>才能安装插件。</p>
<hr>
<h2 id="建立码云仓库"><a href="#建立码云仓库" class="headerlink" title="建立码云仓库"></a>建立<a href="https://gitee.com/">码云</a>仓库</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>点击右上角的<code>+</code>号，<code>新建仓库</code>。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/82706.png"></p>
<p><strong>新建仓库的要点如下：</strong></p>
<ol>
<li><p>输入一个仓库名称；</p>
</li>
<li><p>其次将仓库设为公开；</p>
</li>
<li><p>勾选使用Readme文件初始化这个仓库。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/82701.png"></p>
</li>
</ol>
<p>点击创建即完成仓库创建。</p>
<h3 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h3><p>登录码云账号，点击头像进入<code>设置</code>，找到<code>私人令牌</code>，点击<code>生成新令牌</code>，把<code>projects</code>这一项勾上，其他的不用勾，然后<code>提交</code>。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404174750665.png"></p>
<p>验证密码之后会出来一串数字，这一串数字就是你的<code>token</code><strong>（不能泄露，否者别人也可以操作你的数据）</strong>，后面设置会用到。</p>
<p>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，直接复制进去，搞丢了又要重新生成一个。</p>
<h2 id="PicGo调教"><a href="#PicGo调教" class="headerlink" title="PicGo调教"></a>PicGo调教</h2><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><p>选择<code>图库设置</code>里的<code>gitee</code>选项<strong>（没有安装插件前，没有此选项）</strong>。</p>
<p><strong>配置要点：</strong></p>
<ul>
<li><p><strong>repo</strong>：用户名/仓库名称<em>（仓库地址后面那一段）；</em></p>
</li>
<li><p><strong>branch</strong>：分支，填写master；</p>
</li>
<li><p><strong>token</strong>：填入前面获取的<code>私人令牌</code>；</p>
</li>
<li><p><strong>path</strong>：路径，一般填写img；</p>
</li>
<li><p><strong>customPath</strong>：提交消息，可不填；</p>
</li>
<li><p><strong>customURL</strong>：自定义地址，可不填。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404174830061.png"></p>
</li>
</ul>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h3><p>随便选一张图片上传，上传之后默认复制链接到粘贴板。</p>
<h2 id="PicGo-Typora"><a href="#PicGo-Typora" class="headerlink" title="PicGo+Typora"></a>PicGo+Typora</h2><p>MarkDown写作软件很多，但是Typora是兼具功能与颜值的软件之一（也可能是唯一），而且支持实时预览。</p>
<p><strong>PicGo+Typora</strong>支持图片<code>拖曳/粘贴</code>上传到服务器，解决了MarkDown写作图片插入的难题，非常实用。</p>
<p>配置上，打开Typora<code>设置</code>，在<code>图像</code>便签，按照下面设置即可：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404174910571.png"></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo下Markdown的使用</title>
    <url>/xiaobawang/post/ad9ef827.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a><strong>一、创建文章</strong></h2><p>在站点文件夹中打开 git bash，输入如下命令创建文章，其中 <code>title</code> 为文章的标题</p>
<p><em>$ hexo new “title”</em></p>
<p>当输入命令后，就会在 <code>source/_post</code> 文件夹下创建一个文件，命名为：<code>title.md</code></p>
<p>这个文件就是将要发布到网站上的原始文件，用于记录文章内容。</p>
<h2 id="二、编写文章"><a href="#二、编写文章" class="headerlink" title="二、编写文章"></a><strong>二、编写文章</strong></h2><h3 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h3><p>*Markdown 是一种可以使用普通文本编辑器编写的 <strong>标记语言</strong>，通过简单的 <strong>标记语法</strong>，它可以使普通文本内容具有一定的格式*</p>
<h3 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h3><h4 id="Typora-快捷键："><a href="#Typora-快捷键：" class="headerlink" title="Typora 快捷键："></a>Typora 快捷键：</h4><p><em>Ctrl+1：一级标题</em></p>
<p><em>Ctrl+2：二级标题</em></p>
<p><em>Ctrl+3：三级标题</em></p>
<p>Ctrl+4：四级标题</p>
<p>Ctrl+5：五级标题</p>
<p>Ctrl+6 ：六级标题</p>
<p><em>Ctrl+0：段落</em></p>
<h4 id="Markdown-语法："><a href="#Markdown-语法：" class="headerlink" title="Markdown 语法："></a>Markdown 语法：</h4><hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br><span class="line">1234</span><br></pre></td></tr></table></figure>

<p><strong>Typora 快捷键：</strong></p>
<p>Ctrl+I：斜体</p>
<p>Ctrl+B：粗体</p>
<p>Ctrl+U：下划线</p>
<p>Alt+Shift+5：删除线</p>
<h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><h4 id="文字引用"><a href="#文字引用" class="headerlink" title="文字引用"></a>文字引用</h4><blockquote>
<p><strong>Markdown 语法：</strong></p>
<p>在Typora中输入””” + 回车，并在后面选择一个语言名称即可语法高亮。</p>
<blockquote>
<p>语法高亮:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; &gt; &gt; def helloWorld():</span><br><span class="line">&gt; &gt; &gt;     print &#39;hello, world&#39;</span><br><span class="line">&gt; &gt; &gt; </span><br><span class="line">&gt; &gt;</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<h4 id="表"><a href="#表" class="headerlink" title="表"></a>表</h4><blockquote>
<p>输入<code>| 表头1 | 表头2 |</code>并回车。即可将创建一个包含两列的表，然后就像操作Word文档一样设置表格即可，没必要知道Markdown的复杂语法，因为这些语法会由Typora自动生成。效果如下：</p>
<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
</blockquote>
<h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><blockquote>
<p>输入<code>***</code>或<code>---</code> 再按回车即可绘制一条水平线，如下：</p>
<hr>
<p>链接</p>
<p>内部链接</p>
<blockquote>
<p>这是一个带有标题属性的<a href="http://naka.club/">链接</a>.<br>这是一个没有标题属性的<a href="https://www.dazhuanlan.com/2019/12/14/5df3b9db55a34/naka.club/">链接</a></p>
</blockquote>
<p>效果如下：</p>
<p>这是一个带有标题属性的<a href="http://example.com/">链接</a>.<br>这是一个没有标题属性的<a href="http://example.net/">链接</a></p>
<p>Typora 快捷键：**</p>
<p>行内代码：Ctrl+Shift+`</p>
<p>多行代码：Ctrl+Shift+K</p>
</blockquote>
<h4 id="代码标记"><a href="#代码标记" class="headerlink" title="代码标记"></a>代码标记</h4><blockquote>
<p>标记代码使用反引号，即在英文输入法下，ESC键下面和1键左边的符号——`</p>
<p>使用该<code>printf()</code>功能。<br>效果如下：<br>使用该<code>printf()</code>功能。</p>
</blockquote>
<h4 id="删除线-中间没有空格"><a href="#删除线-中间没有空格" class="headerlink" title="删除线(中间没有空格)"></a>删除线(中间没有空格)</h4><blockquote>
<p>~ <del>删除线</del> ~</p>
</blockquote>
<blockquote>
<p>效果如下：</p>
<p><del>删除线</del></p>
</blockquote>
<h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><blockquote>
<p>下划线</p>
<p>效果如下：</p>
<p>下划线</p>
</blockquote>
<h3 id="内置样式"><a href="#内置样式" class="headerlink" title="内置样式"></a>内置样式</h3><h4 id="分割线和空行"><a href="#分割线和空行" class="headerlink" title="分割线和空行"></a>分割线和空行</h4><blockquote>
<p>这是文字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; &lt;hr &#x2F;&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>上面是分隔线</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; &lt;br &#x2F;&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>上面是空行</p>
</blockquote>
<h3 id="文本居中的引用"><a href="#文本居中的引用" class="headerlink" title="文本居中的引用"></a>文本居中的引用</h3><p>此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用。</p>
<h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><ul>
<li>HTML方式：使用这种方式时，给 <code>img</code> 添加属性 <code>class=&quot;blockquote-center&quot;</code> 即可。</li>
<li>标签方式：使用 <code>centerquote</code> 或者 简写 <code>cq</code>。</li>
</ul>
<p>此标签要求 NexT 的版本在 <strong>0.4.5</strong> 或以上。 若你正在使用的版本比较低，可以选择使用 <code>HTML</code> 方式。</p>
<p><strong>标签调用方法</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span><br><span class="line">&lt;!-- 其中 class&#x3D;&quot;blockquote-center&quot; 是必须的 --&gt;</span><br><span class="line">&lt;blockquote class&#x3D;&quot;blockquote-center&quot;&gt;blah blah blah&lt;&#x2F;blockquote&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 标签别名 --&gt;</span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="效果示例"><a href="#效果示例" class="headerlink" title="效果示例"></a>效果示例</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/blockquote-center.png"></p>
<h3 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h3><p>当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：</p>
<h4 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h4><ul>
<li>HTML方式：使用这种方式时，为 <code>img</code> 添加属性 <code>class=&quot;full-image&quot;</code>即可。</li>
<li>标签方式：使用 <code>fullimage</code> 或者 简写 <code>fi</code>， 并传递图片地址、 <code>alt</code> 和 <code>title</code> 属性即可。 属性之间以逗号分隔。</li>
</ul>
<p>此标签要求 NexT 的版本在 <strong>0.4.5</strong> 或以上。 若你正在使用的版本比较低，可以选择使用 <code>HTML</code> 方式。<br>如果要在图片下显示图片的标题，请使用 标签方式 并给定 <code>title</code> 属性。</p>
<p><strong>标签调用方法</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span><br><span class="line">&lt;!-- 其中 class&#x3D;&quot;full-image&quot; 是必须的 --&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;image-url&quot; class&#x3D;&quot;full-image&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span><br><span class="line">&#123;% fullimage &#x2F;image-url, alt, title %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 别名 --&gt;</span><br><span class="line">&#123;% fi &#x2F;image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="效果示例-1"><a href="#效果示例-1" class="headerlink" title="效果示例"></a>效果示例</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/blockquote-center.png"></p>
<h3 id="Bootstrap-Callout-由-ivan-nginx-贡献"><a href="#Bootstrap-Callout-由-ivan-nginx-贡献" class="headerlink" title="Bootstrap Callout 由 ivan-nginx 贡献"></a>Bootstrap Callout 由 <a href="https://github.com/iissnan/hexo-theme-next/pull/1160">ivan-nginx</a> 贡献</h3><p>这些样式出现在 <a href="http://getbootstrap.com/">Bootstrap 的官方文档</a>中。</p>
<h4 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，<code>class_name</code> 可以是以下列表中的一个值：</p>
<ul>
<li><code>default</code></li>
<li><code>primary</code></li>
<li><code>success</code></li>
<li><code>info</code></li>
<li><code>warning</code></li>
<li><code>danger</code></li>
</ul>
<h4 id="效果示例-2"><a href="#效果示例-2" class="headerlink" title="效果示例"></a>效果示例</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/blockquote-center.png"></p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol>
<li><a href="https://abchds.gitee.io/drawing-bed/">黑老大 (gitee.io)</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Hexo博客butterfly主题图库的创建</title>
    <url>/xiaobawang/post/1a4ea2bd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="图库页面只是普通的页面"><a href="#图库页面只是普通的页面" class="headerlink" title="图库页面只是普通的页面"></a>图库页面只是普通的页面</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n page photo     #创建你的页面     </span><br></pre></td></tr></table></figure>

<p>使用标签外挂 galleryGroup</p>
<p>一个图库集合。</p>
<p>写法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>name：图库名字</li>
<li>description：图库描述</li>
<li>link：连接到对应相册的地址    /xxx/abc.png     你创建页面的路径下</li>
<li>img-url：图库封面的地址</li>
</ul>
<p>例如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;gallery-group-main&quot;&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;壁纸&#x27;</span> <span class="string">&#x27;收藏的一些壁纸&#x27;</span> <span class="string">&#x27;/photo/wallpaper&#x27;</span> <span class="string">https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;漫威&#x27;</span> <span class="string">&#x27;关于漫威的图片&#x27;</span> <span class="string">&#x27;/photo/marvel&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;OH MY GIRL&#x27;</span> <span class="string">&#x27;关于OH MY GIRL的图片&#x27;</span> <span class="string">&#x27;/photo/ohmygirl&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="子页面"><a href="#子页面" class="headerlink" title="子页面"></a>子页面</h2><p>子页面也是普通的页面，你只需要hexo n page xxxxx 创建你的页面就行</p>
<p>然后使用标签外挂 gallery，具体用法请查看对应的内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">gallery</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endgallery</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure>

<p>如果你想要使用 /photo/ohmygirl 这样的链接显示你的图片内容</p>
<p>你可以把创建好的 ohmygirl整个文件夹移到 photo文件夹里去</p>
<h2 id="Gallery相册"><a href="#Gallery相册" class="headerlink" title="Gallery相册"></a>Gallery相册</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo博客butterfly主题美化</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客添加helper-live2d动态模型插件</title>
    <url>/xiaobawang/post/bcb1dd8f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>昨天看到别人的博客，看到他们在搞这个，还挺好看的，所以现在刚好有时间也折腾了一下</p>
<h1 id="Tips-前导必备"><a href="#Tips-前导必备" class="headerlink" title="Tips:前导必备"></a>Tips:前导必备</h1><ul>
<li>插件的github地址<a href="https://links.jianshu.com/go?to=https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a></li>
<li><a href="https://links.jianshu.com/go?to=https://github.com/xiazeyu/live2d-widget-models">live2d模型仓库</a></li>
<li>现在假设你已经又一个使用<code>hexo</code>搭建的博客，然后我们安装模块</li>
</ul>
<h1 id="1、安装模块"><a href="#1、安装模块" class="headerlink" title="1、安装模块"></a>1、安装模块</h1><h4 id="在hexo根目录执行命令"><a href="#在hexo根目录执行命令" class="headerlink" title="在hexo根目录执行命令"></a><strong>在hexo根目录执行命令</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm install --save hexo-helper-live2d</span></span><br></pre></td></tr></table></figure>

<h1 id="2、下载模型"><a href="#2、下载模型" class="headerlink" title="2、下载模型"></a>2、下载模型</h1><p>  作者各种模型包展示 ➡️ <a href="https://huaji8.top/post/live2d-plugin-2.0/">hexo live2d插件 2.0 !</a></p>
<blockquote>
<p><a href="https://github.com/xiazeyu/live2d-widget-models">live2d模型仓库</a></p>
</blockquote>
<ul>
<li><p><code>live2d-widget-model-chitose</code></p>
</li>
<li><p><code>live2d-widget-model-epsilon2_1</code></p>
</li>
<li><p><code>live2d-widget-model-gf</code></p>
</li>
<li><p><code>live2d-widget-model-haru/01</code>（使用<code>npm install --save live2d-widget-model-haru</code>)</p>
</li>
<li><p><code>live2d-widget-model-haru/02</code>（使用<code>npm install --save live2d-widget-model-haru</code>)</p>
</li>
<li><p><code>live2d-widget-model-haruto</code></p>
</li>
<li><p><code>live2d-widget-model-hibiki</code></p>
</li>
<li><p><code>live2d-widget-model-hijiki</code></p>
</li>
<li><p><code>live2d-widget-model-izumi</code></p>
</li>
<li><p><code>live2d-widget-model-koharu</code></p>
</li>
<li><p><code>live2d-widget-model-miku</code></p>
</li>
<li><p><code>live2d-widget-model-ni-j</code></p>
</li>
<li><p><code>live2d-widget-model-nico</code></p>
</li>
<li><p><code>live2d-widget-model-nietzsche</code></p>
</li>
<li><p><code>live2d-widget-model-nipsilon</code></p>
</li>
<li><p><code>live2d-widget-model-nito</code></p>
</li>
<li><p><code>live2d-widget-model-shizuku</code></p>
</li>
<li><p><code>live2d-widget-model-tororo</code></p>
</li>
<li><p><code>live2d-widget-model-tsumiki</code></p>
</li>
<li><p><code>live2d-widget-model-unitychan</code></p>
</li>
<li><p><code>live2d-widget-model-wanko</code></p>
</li>
<li><p><code>live2d-widget-model-z16</code></p>
<h4 id="使用安装模型"><a href="#使用安装模型" class="headerlink" title="使用安装模型"></a>使用安装模型</h4></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---小编使用的模型</span><br><span class="line"><span class="comment"># npm install live2d-widget-model-koharu</span></span><br></pre></td></tr></table></figure>

<p>安装后我们在<code>node_modules</code>目录下面找到<code>live2d-widget-model-koharu</code>这个文件夹，把这个文件夹复制下来 找到我们的<code>hexo</code>博客的根目录(因为我们是在根目录的<code>_config.yml</code>里添加配置)新建一个文件夹叫做<code>live2d_models</code>，把刚刚我们复制的文件粘贴过来，这样我们就完成了<code>99%</code>，最后我们打开添加的配置文件（第三步），找到这一行</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">    use: live2d-widget  ## 模型文件</span><br></pre></td></tr></table></figure>

<p>把<code>use</code>后面改成我们复制在<code>live2d_models</code>文件夹里面的模型目录名称，这样我们就完成了修改使用<code>hexo d || hexo deploy</code>来部署，然后清除一下浏览器缓存，打开后就可以发现我们添加的小人已经在屏幕右下角看着你了。</p>
<h1 id="3、详细配置"><a href="#3、详细配置" class="headerlink" title="3、详细配置"></a>3、详细配置</h1><p>在Hexo的 <code>_config.yml</code> 文件中添加配置.</p>
<p>参阅 <a href="https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init">live2d-widget.js API</a></p>
<ul>
<li>小编配置文件示例</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="comment">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#enable: false</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hibiki</span></span><br><span class="line">    <span class="comment"># use: live2d-widget-model-wanko # npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">145</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">315</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 是否在移动设备上显示</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span> <span class="comment"># 移动设备上的缩放</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.8</span></span><br></pre></td></tr></table></figure>

<ul>
<li>如果你觉上边比较复杂可以看下面都是一样的</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否启动</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span>  <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span>  <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span>  <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span>  <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span>  <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget</span>  <span class="comment">## 模型文件</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># 定位方向 left right top bottom</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span>  <span class="comment"># 小人宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#  小人高度</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">-15</span>  <span class="comment"># 向 偏移</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-15</span>  <span class="comment"># 像 偏移</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span>  <span class="comment"># 手机端是否显示</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span>  <span class="comment"># 模型透明度</span></span><br></pre></td></tr></table></figure>

<h1 id="截图预览"><a href="#截图预览" class="headerlink" title="截图预览"></a>截图预览</h1><h2 id="haru"><a href="#haru" class="headerlink" title="haru"></a>haru</h2><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210419083837180.png" style="zoom:67%;" />

<h2 id="shizuku"><a href="#shizuku" class="headerlink" title="shizuku"></a>shizuku</h2><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210419084429663.png" style="zoom: 67%;" />

<h2 id="koharu"><a href="#koharu" class="headerlink" title="koharu"></a>koharu</h2><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210419084611591.png" style="zoom:67%;" />

<h2 id="hijiki"><a href="#hijiki" class="headerlink" title="hijiki"></a>hijiki</h2><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210419084715017.png" style="zoom:67%;" />

<h1 id="4、卸载"><a href="#4、卸载" class="headerlink" title="4、卸载"></a>4、卸载</h1><p>卸载插件和卸载模型的指令都是通过 npm 进行操作的。在博客根目录下打开终端，输入：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-helper-live2d #卸载模型插件</span><br><span class="line">npm uninstall live2d-widget-model-modelname #卸载模型。记得替换modelname为模型名称</span><br></pre></td></tr></table></figure>

<p>卸载后为了保证配置项不出错，记得把 根目录下的配置文件<code>[Blog]\_config.yml</code> 里的配置项给注释或者删除掉。</p>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Git常用命令</title>
    <url>/xiaobawang/post/caff8000.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>一、常用命令行<br>cd 文件夹路径    #进入到某个文件夹<br>cd ..           #返回上一层文件夹</p>
<p>二、Git常用命令</p>
<p>1.进入项目目录<br>cd 项目目录的路径      #进入项目目录</p>
<p>2.初始化本地git仓库<br>git init    #初始化一个git仓库(repository)，初始化完成之后会在<br>            项目目录中自动创建一个.git隐藏文件夹，此文件夹是<br>            git的版本记录，用来跟踪或者管理git仓库</p>
<p>3.查看版本库的状态<br>git status      #查看当前git仓库的状态<br>git status -s   #简单方式查看git仓库的状态</p>
<p>4.把工作区的文件添加到暂存区<br>git add 文件名   #把没有添加到暂存区的文件添加到暂存区(文件名可写多个)<br>git add .       #把工作区没有添加到暂存区文件全部添加到暂存区(一次添加多个)</p>
<p>5.把缓存区的文件提交到本地仓库<br>git commit -m 提交的备注信息  #把加入暂存区的文件提交到本地仓库<br>        commit 提交，-m表示给提交的内容添加描述信息，用来备注本次<br>        提交的信息。<br>        注意：提交的备注信息不能省略，写的要有意义<br>            （有的公司会作为工作内容的考核）</p>
<p>6.查看版本库的历史操作记录<br>git log     #查看git操作的详细历史记录<br>    比如：<br>    commit b979bc1782e8f56750554323474da72ebca03553 #本次操作的版本号(commit id 版本号是唯一的)<br>    Author: jinxizhen <a href="mailto:&#56;&#x34;&#x32;&#49;&#x36;&#54;&#x32;&#57;&#x39;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;">&#56;&#x34;&#x32;&#49;&#x36;&#54;&#x32;&#57;&#x39;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;</a>                  #用户信息<br>    Date:   Thu Jan 19 11:40:55 2017 +0800          #提交的日期</p>
<pre><code>    初始化了git仓库并创建index.txt                #提交的备注信息
</code></pre>
<p>git log –oneline   #把git操作日志简化为一行显示<br>git reflog          #查看操作命令及日志</p>
<p>二、版本回退</p>
<p>1.修改的内容还没有添加到暂存区<br>git checkout – 文件名     #撤销工作区最后一次修改的内容，<br>                           前提是修改的内容还没有添加到暂存区</p>
<p>2.修改的内容已经添加到暂存区，但是还没有提交到本地仓库<br>先使用 git reset HEAD 文件名      #撤销添加到暂存区的内容<br>再使用 git checkout – 文件名     #回退到上一个状态</p>
<p>3.修改的内容已经提交到了本地仓库<br>git reset –hard 版本号    #回退到指定的版本号的状态</p>
<p>三、本地仓库和远程仓库的连接<br>1.从远程仓库克隆到本地<br>git clone <a href="https://git.oschina.net/jinxizhen/H21weather.git">https://git.oschina.net/jinxizhen/H21weather.git</a>  #克隆项目，把远程库创建的好的(已经有的项目)项目同步到本地</p>
<p>git pull    #同步远程库的文件到本地<br>git push    #同步本地的文件到远程库</p>
<p>2.从工作目录连接远程库<br>git remote add origin <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#x69;&#116;&#x2e;&#111;&#115;&#99;&#104;&#105;&#110;&#97;&#46;&#110;&#x65;&#116;">&#103;&#105;&#116;&#64;&#103;&#x69;&#116;&#x2e;&#111;&#115;&#99;&#104;&#105;&#110;&#97;&#46;&#110;&#x65;&#116;</a>:jinxizhen/H21rili.git #连接远程库</p>
<p>先使用<br>git pull –rebase origin master #从远程库同步到本地<br>git push -u origin master       #把本地仓库的内容推送到远程库</p>
<p>之后就是 git pull / git push  …</p>
<p>四、添加公钥 sshkey </p>
<p>1.ssh-keygen -t rsa -C “<a href="mailto:&#56;&#52;&#50;&#49;&#54;&#54;&#50;&#57;&#57;&#64;&#x71;&#113;&#46;&#99;&#111;&#109;">&#56;&#52;&#50;&#49;&#54;&#54;&#50;&#57;&#57;&#64;&#x71;&#113;&#46;&#99;&#111;&#109;</a>“   #生成公钥（邮箱：注册码云的邮箱）<br>    生成公钥的步骤<br>    a.生成公钥时，会提示我们选择保存的路径，<br>    Generating public/private rsa key pair.<br>    Enter file in which to save the key (/c/Users/Jinxizhen/.ssh/id_rsa):<br>            路径使用默认的，直接回车</p>
<pre><code>b.如果提示已经存在，可以直接覆盖掉
/c/Users/Jinxizhen/.ssh/id_rsa already exists.
Overwrite (y/n)?
输入:y 然后回车 

c.最后会提示输入密码
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
密码可以不用输入，直接回车，就可以生成公钥

d.成功的提示
Your identification has been saved in /c/Users/Jinxizhen/.ssh/id_rsa
Your public key has been saved in /c/Users/Jinxizhen/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:g1VOz7OAJMSq49Vc1pSzvlDLsItX+JtiMGqRqJSaakQ 842166299@qq.com
The key&#39;s randomart image is:
+---[RSA 3072]----+
|     oo . o.     |
|      .o =+o     |
|     .  oooo+    |
| E  .  o+ +. o   |
|. .o +.oSB ..    |
| ++ + = +.=      |
|++ o o + = .     |
|+.. o . = o.     |
|+  .   o .o.     |
+----[SHA256]-----+
</code></pre>
<p>2.cat ~/.ssh/id_rsa.pub     #查看公钥<br>    比如输出：<br>    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC53lok+oPntpwg0E0p6z2Klxb7275YyWcWyxiQZk7sKL0J90xi1btvqd7MVEHH2UvuPluSKwyLVTQCmA1iWlqyRjuO4LBeY85feqkhKWi+haq5u9NEAcALS00vNH6URWS7Uz5gU1RIs3F9Ssd9V/VsWNJ28DVIGKYM2s8Vs0K1CQ3l0Ed0onlOsOb2vUa/5k8R64P8vS+EpV/1XsxH99cQK2tq8A6tyRBAGe406s/sNufV/EYvGcM9nQyz+QI/lxcoHCw0xc9kkezxk4X8uTxgwMBx5EkTmMzYxcr34jT+ltsMHULmaJPWoN4J55EdINY+9YzfpwqYABoQATjK0p8z <a href="mailto:&#56;&#x34;&#x32;&#49;&#54;&#54;&#x32;&#x39;&#x39;&#64;&#113;&#x71;&#x2e;&#x63;&#111;&#109;">&#56;&#x34;&#x32;&#49;&#54;&#54;&#x32;&#x39;&#x39;&#64;&#113;&#x71;&#x2e;&#x63;&#111;&#109;</a></p>
<p>3.ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#x69;&#116;&#101;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#105;&#116;&#x40;&#103;&#x69;&#116;&#101;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a>    #验证公钥是否添加成功，出现以下提示“successfully” 表示成功<br>    Hi 金西振 (DeployKey)! You’ve successfully authenticated, but GITEE.COM does not provide shell access.<br>    Note: Perhaps the current use is DeployKey.<br>    Note: DeployKey only supports pull/fetch operations</p>
<p>五、分支操作</p>
<p>git branch            #查看所有分支，当前的分之前会有一个*符号<br>git branch 分支名      #创建一个分支<br>git checkout 分支名    #切换到指定的分支</p>
<p>git checkout -b 分支名 #创建一个分支，并切换到分支(相当于创建+切换)</p>
<p>git merge 分支名       #合并指定分支的内容到当前分支<br>git log –graph       #查看分支合并信息<br>git branch -d 分支名   #删除分支</p>
<p>六、.gitignore文件<br>.gitignore 用来添加不需要上传到远程库的文件<br>把文件名写在.gitignore文件内即可，以/结尾表示目录，否则表示单个文件</p>
]]></content>
      <categories>
        <category>知识</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>UEFI模式启动windows操作系统</title>
    <url>/xiaobawang/post/e8a72c33.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="UEFI模式启动windows操作系统"><a href="#UEFI模式启动windows操作系统" class="headerlink" title="UEFI模式启动windows操作系统"></a>UEFI模式启动windows操作系统</h1><h2 id="UEFI介绍"><a href="#UEFI介绍" class="headerlink" title="UEFI介绍"></a>UEFI介绍</h2><p>统一可扩展固件接口（英语：Unified Extensible Firmware Interface，缩写UEFI）是一种个人电脑系统规格，用来定义操作系统与系统固件之间的软件界面，作为BIOS的替代方案。可扩展固件接口负责加电自检（POST）、联系操作系统以及提供连接操作系统与硬件的接口。</p>
<h2 id="UEFI模式启动顺序"><a href="#UEFI模式启动顺序" class="headerlink" title="UEFI模式启动顺序"></a>UEFI模式启动顺序</h2><ol>
<li>电脑开机，UEFI程序初始化，找到BIOS存储芯片设置的第一启动项硬件设备（固态硬盘，机械硬盘，u盘）</li>
<li>找到该硬件设备下的EFI 系统分区（EFI system partition 简写ESP）下的efi文件<br>64位操作系统EFI\BOOT\bootx64.efi文件，32位操作系统是EFI\BOOT\bootia32.efi文件<br>这里对==分区，磁盘，驱动器，卷==这四个概念进行讲解一下，==分区，磁盘，驱动器，卷== 四个名词是同一个意思，都表示我的电脑中的一个磁盘<br><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827163843.png" alt="image-20200805204451432"></li>
</ol>
<p>但人们往往会把上面这个图标错误的理解为这是一个物理上面的硬盘，其实这是一个错误的概念，一个物理硬盘可以把总的存储空间划分成很多个分区进行这样的显示，某些特定的分区起到特定的功能，我们在一个硬盘中安装系统并且要让电脑能使用UEFI启动方式启动这个系统，只需要两个分区，一个是ESP分区（进行系统的引导），另外一个是主分区（操作系统存放的地方）</p>
<p>总结：把物理硬盘总的全部存储空间进行分区，每个分区有不同的文件系统类型</p>
<p>下图便是一个物理硬盘划分的多个分区（有些分区即磁盘是可见的（可以这我的电脑中显示），有的分区被系统保护了起来没有分配盘符，需要特定的工具进行设置后我们才能看到）</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827163849.png" alt="image-20200805204940045"></p>
<h2 id="下图便是ESP系统分区下bootx64-efi"><a href="#下图便是ESP系统分区下bootx64-efi" class="headerlink" title="下图便是ESP系统分区下bootx64.efi"></a>下图便是ESP系统分区下bootx64.efi</h2><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827163858.png" alt="image-20200805203831740"></p>
<p>3.bootx64.efi优先寻找相同目录下的BCD文件，如果没有再去寻找efi/microsoft/boot/BCD文件<br>BCD文件中存放着启动项（即操作系统在哪个硬盘，在硬盘的哪个分区），可以在BCD文件中设置多个启动项这样就可以引导多个操作系统</p>
]]></content>
      <categories>
        <category>WIN10</category>
      </categories>
      <tags>
        <tag>WIN10</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora+github-云笔记1.0版本</title>
    <url>/xiaobawang/post/fd160a07.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Typora-github-云笔记1-0版本"><a href="#Typora-github-云笔记1-0版本" class="headerlink" title="Typora+github-云笔记1.0版本"></a>Typora+github-云笔记1.0版本</h1><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200904222145.png" alt="image-20200904222145109"></p>
<h2 id="1-Typora介绍"><a href="#1-Typora介绍" class="headerlink" title="1. Typora介绍"></a>1. Typora介绍</h2><p>Typora 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是<strong>完全免费</strong>的。下载地址：<a href="https://www.typora.io/">https://www.typora.io/</a></p>
<h3 id="关于-Markdown"><a href="#关于-Markdown" class="headerlink" title="关于 Markdown"></a>关于 Markdown</h3><p>Markdown 是用来编写结构化文档的一种纯文本格式，它使我们在双手不离开键盘的情况下，可以对文本进行一定程度的格式排版。</p>
<p>由于目前还没有一个权威机构对 Markdown 的语法进行规范，各应用厂商制作时遵循的 Markdown 语法也是不尽相同的。其中比较受到认可的是 <a href="https://github.github.com/gfm/">GFM 标准</a>，它是由著名代码托管网站 <a href="https://github.com/">GitHub</a> 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 <code>文件 - 偏好设置 - Markdown 语法偏好 - 严格模式</code> 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 <a href="http://support.typora.io/Strict-Mode/">这篇文档</a> 中查看。</p>
<h2 id="2-Typora安装和设置"><a href="#2-Typora安装和设置" class="headerlink" title="2.Typora安装和设置"></a>2.Typora安装和设置</h2><p>下载地址：<a href="https://www.typora.io/#windows">https://www.typora.io/#windows</a></p>
<h3 id="2-1-图像设置，在这里设置插入图片的保存规则，选相对路径，在你的笔记目录下建一个文件夹专门存放图片，然后把放图片那个目录设置隐藏，这样在下面菜单中就不会显示了，都是我们的笔记看着很清爽"><a href="#2-1-图像设置，在这里设置插入图片的保存规则，选相对路径，在你的笔记目录下建一个文件夹专门存放图片，然后把放图片那个目录设置隐藏，这样在下面菜单中就不会显示了，都是我们的笔记看着很清爽" class="headerlink" title="2.1 图像设置，在这里设置插入图片的保存规则，选相对路径，在你的笔记目录下建一个文件夹专门存放图片，然后把放图片那个目录设置隐藏，这样在下面菜单中就不会显示了，都是我们的笔记看着很清爽"></a>2.1 图像设置，在这里设置插入图片的保存规则，选相对路径，在你的笔记目录下建一个文件夹专门存放图片，然后把放图片那个目录设置隐藏，这样在下面菜单中就不会显示了，都是我们的笔记看着很清爽</h3><p>图像设置这样做的目的是：为了让我们这托管的网站查看我们的笔记的时候也能看到笔记中的图片</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135434.png" alt="image-20200815115209812"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135449.png" alt="image-20200815115251679"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135505.png" alt="image-20200815204132133"></p>
<h3 id="2-2-Markdown语法设置，就按照我图片这里设置就行，把大部分功能打开"><a href="#2-2-Markdown语法设置，就按照我图片这里设置就行，把大部分功能打开" class="headerlink" title="2.2 Markdown语法设置，就按照我图片这里设置就行，把大部分功能打开"></a>2.2 Markdown语法设置，就按照我图片这里设置就行，把大部分功能打开</h3><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135456.png" alt="image-20200815114737291"></p>
<h2 id="3-Git安装-用github托管我们的笔记"><a href="#3-Git安装-用github托管我们的笔记" class="headerlink" title="3. Git安装 用github托管我们的笔记"></a>3. Git安装 用github托管我们的笔记</h2><h3 id="3-1-git安装和设置环境变量"><a href="#3-1-git安装和设置环境变量" class="headerlink" title="3.1 git安装和设置环境变量"></a>3.1 git安装和设置环境变量</h3><p><a href="http://127.0.0.1:6807/webdav/8upjd1m/siyuan%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/git%E4%BD%BF%E7%94%A8/git%E5%AE%89%E8%A3%85.md">Git安装</a></p>
<p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p>
<p>如果我们单纯用来做笔记本，我们就下载便携版本的git,下载完解压就能用</p>
<p>把git解压目录下的cmd文件夹路径添加到系统变量中</p>
<h3 id="3-2-生成ssh公钥-使用ssh公钥不需要每次向github提交都输入密码"><a href="#3-2-生成ssh公钥-使用ssh公钥不需要每次向github提交都输入密码" class="headerlink" title="3.2 生成ssh公钥,使用ssh公钥不需要每次向github提交都输入密码"></a>3.2 生成ssh公钥,使用ssh公钥不需要每次向github提交都输入密码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">打开git bash 输入下列代码</span><br><span class="line">设置全局的用户名和邮箱，每次提交的时候的信息</span><br><span class="line">git config --global user.email &quot;2597400284@qq.com&quot;</span><br><span class="line">git config --global user.name &quot;sensen&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">生成ssh登录公钥和私钥</span><br><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C &quot;2597400284@qq.com&quot;</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -f  E:\test   -C &quot;test key&quot;</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -f  ~&#x2F;.ssh&#x2F;test   -C &quot;test key&quot;</span><br><span class="line">代码参数含义：</span><br><span class="line">-t 指定密钥类型，默认是 rsa ，可以省略。</span><br><span class="line">-C 设置注释文字，比如邮箱。</span><br><span class="line">-f 指定密钥文件存储文件名。</span><br><span class="line"></span><br><span class="line">执行命令后需要进行3次或4次确认：</span><br><span class="line"></span><br><span class="line">1.确认秘钥的保存路径（如果不需要改路径则直接回车）；</span><br><span class="line">2. 如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖（如果之前的秘钥不再需要则直接回车覆盖，如需要则手动拷贝到其他目录后再覆盖）；</span><br><span class="line">3.创建密码（如果不需要密码则直接回车）；（该密码是你push文件的时候要输入的密码，而不是github管理者的密码）</span><br><span class="line">当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了</span><br><span class="line">这里我们选择按回车不输出密码</span><br><span class="line">4. 确认密码；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">执行完这个代码后在我们的用户目录下会生成一个.ssh的隐藏文件夹，文件夹里面有两个文件id_rsa和id_rsa.pub，前者是私钥，后者是公钥，复制id_rsa.pub的内容添加到github的ssh公钥处</span><br><span class="line">目录.ssh下的文件说明</span><br><span class="line"></span><br><span class="line">id_rsa ：存放私钥的文件</span><br><span class="line">id_rsa.pub ：存放公钥的文件</span><br><span class="line">known_hsots ：可以保存多个公钥文件，每个访问过计算机的公钥(public key)都记录在~&#x2F;.ssh&#x2F;known_hosts文件中</span><br><span class="line">authorized_keys ：A机器生成的公钥--&gt;放B的机器.ssh下authorized_keys文件里，A就能免密访问B，但是B不能访问A。如果需要两台电脑互相访问均免密码。则需要重复上面的步骤（机器的配置刚好相反）。</span><br><span class="line"></span><br><span class="line">ssh在建立连接的时候不指定-i参数会默认寻找 ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">若是省略 -i 参数，则 ssh-copy-id 会将默认的密钥 ~&#x2F;.ssh&#x2F;id_rsa 对应的公钥交付给远程主机。</span><br></pre></td></tr></table></figure>

<h2 id="quicker脚本：一键获得ssh的公钥"><a href="#quicker脚本：一键获得ssh的公钥" class="headerlink" title="quicker脚本：一键获得ssh的公钥"></a>quicker脚本：一键获得ssh的公钥</h2><p><a href="https://getquicker.net/Sharedaction?code=d49471e9-8176-4f5a-d1c3-08d8423ccd55&fromMyShare=true">一键获取ssh公钥脚本</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">脚本为下列代码</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;youxiang&quot;</span><br><span class="line">git config --global user.name &quot;user&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;sshkey&quot;</span><br><span class="line">$sshtext&#x3D;(cat ~&#x2F;.ssh&#x2F;id_rsa.pub)</span><br><span class="line">echo $sshtext</span><br><span class="line">pause</span><br><span class="line">一些其他杂项知识记录</span><br><span class="line"></span><br><span class="line">echo %path%</span><br><span class="line">set PATH&#x3D;&quot;%PATH%E:\git\cmd&quot; </span><br><span class="line"></span><br><span class="line">setx PATH &quot;%PATH%;E:\git\cmd&quot; &#x2F;m</span><br><span class="line">&#x2F;m 表示添加到系统环境变量</span><br><span class="line">set 设置用户变量</span><br><span class="line">setx 设置系统环境变量</span><br><span class="line">$Env:path&#x3D;$Env:Path+&quot;;E:\git\cmd&quot;  </span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135726.png" alt="image-20200815203025258"></p>
<h3 id="3-3-将ssh公钥添加到github的sshkeys中"><a href="#3-3-将ssh公钥添加到github的sshkeys中" class="headerlink" title="3.3 将ssh公钥添加到github的sshkeys中"></a>3.3 将ssh公钥添加到github的sshkeys中</h3><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135521.png" alt="image-20200815203507450"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135752.png" alt="image-20200815203153944"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135529.png" alt="image-20200815203229265"></p>
<h3 id="3-4-在github中新建仓库，获取仓库的ssh链接"><a href="#3-4-在github中新建仓库，获取仓库的ssh链接" class="headerlink" title="3.4 在github中新建仓库，获取仓库的ssh链接"></a>3.4 在github中新建仓库，获取仓库的ssh链接</h3><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135541.png" alt="image-20200815203907551"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135808.png" alt="image-20200815203948987"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135549.png" alt="image-20200815204033936"></p>
<h2 id="4-使用quicker-编写脚本进行一键初始化和远程同步，脚本基于以下命令"><a href="#4-使用quicker-编写脚本进行一键初始化和远程同步，脚本基于以下命令" class="headerlink" title="4. 使用quicker 编写脚本进行一键初始化和远程同步，脚本基于以下命令"></a>4. 使用quicker 编写脚本进行一键初始化和远程同步，脚本基于以下命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在笔记文件夹目录下 打开git bash 输入下列命令初始化本地仓库</span><br><span class="line">git init </span><br><span class="line">将笔记本文件夹下所有文件进行跟踪，提交所有变化</span><br><span class="line"></span><br><span class="line">git add -A  提交所有变化</span><br><span class="line"></span><br><span class="line">其他命令：</span><br><span class="line">git add -u  提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)</span><br><span class="line"></span><br><span class="line">git add .  提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件</span><br><span class="line">生成一个本地库版本</span><br><span class="line"></span><br><span class="line">git commit -m &quot;提交注释2113&quot;</span><br><span class="line">将本地库版本推送到github中</span><br><span class="line">git push   git@github.com:yusenyi123&#x2F;notebook.git  master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git push  git@gitee.com:yusenyi&#x2F;notebook.git master</span><br></pre></td></tr></table></figure>

<h3 id="4-1-quicker一键脚本链接"><a href="#4-1-quicker一键脚本链接" class="headerlink" title="4.1 quicker一键脚本链接:"></a>4.1 quicker一键脚本链接:</h3><p><a href="https://getquicker.net/Sharedaction?code=bf3da905-e641-4bc8-668d-08d841787f87&fromMyShare=true">一键同步github/码云脚本</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135556.png" alt="image-20200816114349589"></p>
<h3 id="4-2-一键同步脚本使用"><a href="#4-2-一键同步脚本使用" class="headerlink" title="4.2 一键同步脚本使用"></a>4.2 一键同步脚本使用</h3><p>第一次启动脚本会让你输入远程仓库的ssh链接和选择需要上传的笔记文件夹，第一次运行完之后脚本会记录你输入的远程仓库的ssh链接和你选择的文件夹，下次再运行就不需要设置。</p>
<p>如果要进行重新设置,按住ctrl再运行该活动，就会进入初始化设置状态重新设置ssh链接和选择要上传的文件夹</p>
<p>如果笔记文件夹没有本地初始化脚本第一次运行会进行初始化（不会上传内容到远程）</p>
<p>如果文件夹已经进行了本地仓库初始化，再次运行脚本就会直接把本地版本上传到远程仓库</p>
<h2 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5. 注意事项"></a>5. 注意事项</h2><h3 id="5-1-笔记文件名不要包含空格，如果有空格那么上传到github中预览的时候将无法看到图片"><a href="#5-1-笔记文件名不要包含空格，如果有空格那么上传到github中预览的时候将无法看到图片" class="headerlink" title="5.1 笔记文件名不要包含空格，如果有空格那么上传到github中预览的时候将无法看到图片"></a>5.1 笔记文件名不要包含空格，如果有空格那么上传到github中预览的时候将无法看到图片</h3><h3 id="5-2-笔记文件名不要太长，太长也会出现上述问题"><a href="#5-2-笔记文件名不要太长，太长也会出现上述问题" class="headerlink" title="5.2 笔记文件名不要太长，太长也会出现上述问题"></a>5.2 笔记文件名不要太长，太长也会出现上述问题</h3><h2 id="6-额外说明-把图片和笔记分开存放"><a href="#6-额外说明-把图片和笔记分开存放" class="headerlink" title="6.额外说明-把图片和笔记分开存放"></a>6.额外说明-把图片和笔记分开存放</h2><p>上面的笔记搭建是图片和笔记都存放在本地，然后一起推送到远程仓库，但这样做有个问题，当我们写了比较多的笔记，这时候图片就会占据大量的空间，github一个仓库1G（超过1G会收到邮件），gitee一个仓库500M（gitee免费用户总容量5G）</p>
<h3 id="Gitee个人用户仓库容量说明"><a href="#Gitee个人用户仓库容量说明" class="headerlink" title="Gitee个人用户仓库容量说明"></a>Gitee个人用户仓库容量说明</h3><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135606.png" alt="image-20200827114325657"></p>
<h3 id="github个人用户仓库容量说明"><a href="#github个人用户仓库容量说明" class="headerlink" title="github个人用户仓库容量说明"></a>github个人用户仓库容量说明</h3><p><a href="https://docs.github.com/en/github/managing-large-files/what-is-my-disk-quota">https://docs.github.com/en/github/managing-large-files/what-is-my-disk-quota</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827135616.png" alt="image-20200827120912612"></p>
<p>所以这里我们可以把图片和笔记分开存放，图片存放在多个图片仓库中，笔记就用单独的笔记仓库，这样1G的笔记仓库能够容纳非常多的文本了基本用不完</p>
<p>但上述方式就需要在写笔记的时候先进行图片的上传，使用picgo工具配合typora把图片上传到github仓库</p>
<p>配置文字版说明：<a href="https://www.flighty.cn/html/tutorial/20200217_576.html">https://www.flighty.cn/html/tutorial/20200217_576.html</a></p>
<p>视频说明：</p>
]]></content>
      <categories>
        <category>知识</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/xiaobawang/post/4a17b156.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo增加本地搜索功能</title>
    <url>/xiaobawang/post/95c7b2c6.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>之前博客里面用的是algolia第三方搜索功能，后来发现有几个问题：一是js加载时间特别慢；二是每次增加文章都要重新提交一下如下代码：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=your apiKey</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>

<p>这个就是最不能忍的原因。于是准备换上local search（本地搜索服务）。</p>
<h1 id="关闭Algolia搜索服务"><a href="#关闭Algolia搜索服务" class="headerlink" title="关闭Algolia搜索服务"></a>关闭Algolia搜索服务</h1><ul>
<li>在站点配置文件中，注释掉原有的algolia：</li>
</ul>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210420193555348.png"></p>
<ul>
<li>在主题配置文件中，关闭algolia服务：</li>
</ul>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210420193718792.png"></p>
<ul>
<li>卸载algolia插件：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-algolia</span><br></pre></td></tr></table></figure>

<h1 id="增加Local-Search本地搜索服务"><a href="#增加Local-Search本地搜索服务" class="headerlink" title="增加Local Search本地搜索服务"></a>增加Local Search本地搜索服务</h1><ul>
<li>安装插件：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<ul>
<li>在站点配置文件_config.yml`中添加:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<ul>
<li>在主题配置文件<code>_config.yml</code>中启用：</li>
</ul>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210420194035424.png"></p>
<ul>
<li>最后记得hexo三连，如果直接hexo g -d的话，搜索关键字不会变红</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>linux文件目录详解</title>
    <url>/xiaobawang/post/2e8e30f4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="linux文件目录详解"><a href="#linux文件目录详解" class="headerlink" title="linux文件目录详解"></a>linux文件目录详解</h1><p>/ 根目录，第一层目录，所有其他目录的根，一般根目录下只存放目录。包括：/bin,</p>
<p>/boot, /dev, /etc, /home, /lib, /mnt, /opt, /proc, /root, /sbin, /sys, /tmp, /usr, /var</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/image-20210518191000224.png"></p>
<h2 id="bin-Binary-二进制）"><a href="#bin-Binary-二进制）" class="headerlink" title="/bin (Binary 二进制）"></a>/bin (Binary 二进制）</h2><p>commandsin this dir are all system installed user commands 系统指令</p>
<p>/bin是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等</p>
<h2 id="sbin（System-Binary-系统二进制）"><a href="#sbin（System-Binary-系统二进制）" class="headerlink" title="/sbin（System Binary 系统二进制）"></a>/sbin（System Binary 系统二进制）</h2><p>/sbin一般是指超级用户指令。主 要放置一些系统管理的必备程式例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、 ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、 rmmod、 runlevel、shutdown等</p>
<h2 id="usr-（Unix-System-Resource-Unix系统资源）"><a href="#usr-（Unix-System-Resource-Unix系统资源）" class="headerlink" title="/usr （Unix System Resource Unix系统资源）"></a>/usr （Unix System Resource Unix系统资源）</h2><p>==首先注意usr 指 Unix System Resource（Unix系统资源），而不是user==</p>
<p>==以前的usr是user的缩写，是曾经的HOME目录，然而现在已经被/home取代了，现在usr被称为是Unix System Resource，即Unix系统资源的缩写。==</p>
<h3 id="1-usr-bin"><a href="#1-usr-bin" class="headerlink" title="1./usr/bin"></a>1./usr/bin</h3><p> 是你在后期安装的一些软件的运行脚本。主要放置一些应用软体工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、 eject、elm、free、gnome<em>、 gzip、htpasswd、kfm、ktop、last、less、locale、m4、make、 man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb</em>、wget等。</p>
<h3 id="2-usr-sbin"><a href="#2-usr-sbin" class="headerlink" title="2./usr/sbin"></a>2./usr/sbin</h3><p>放置一些用户安装的系统管理的必备程式例如:dhcpd、httpd、imap、in.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等</p>
<p>然后通常：<br> /usr/bin下面的都是系统预装的可执行程序，会随着系统升级而改变。<br> /usr/local/bin目录是给用户放置自己的可执行程序的地方，推荐放在这里，不会被系统升级而覆盖同名文件。</p>
<h2 id="boot-（boot-启动）"><a href="#boot-（boot-启动）" class="headerlink" title="/boot （boot 启动）"></a>/boot （boot 启动）</h2><p><strong>这里存放系统启动需要的文件</strong>，你可以看到grub文件夹，它是常见的开机引导程序。我们不应该乱动这里的文件。</p>
<h2 id="dev-（device-设备）"><a href="#dev-（device-设备）" class="headerlink" title="/dev （device 设备）"></a>/dev （device 设备）</h2><p>dev是device的缩写，这里存放着所有的<strong>设备文件</strong>。在 Linux 中，所有东西都是以文件的形式存在的，包括硬件设备。</p>
<p>比如说，sda,sdb就是我电脑上的两块硬盘，后面的数字是硬盘分区：</p>
<p>鼠标、键盘等等设备也都可以在这里找到。</p>
<h2 id="etc-（etcetera-额外的）"><a href="#etc-（etcetera-额外的）" class="headerlink" title="/etc  （etcetera 额外的）"></a>/etc  （etcetera 额外的）</h2><p>这个目录经常使用，存放很多程序的<strong>配置信息</strong>，比如包管理工具 apt：</p>
<p>在/etc/apt中就存放着对应的配置，比如说镜像列表（我配置的阿里云镜像）：</p>
<p>如果你要修改一些系统程序的配置，十有八九要到etc目录下寻找</p>
<h2 id="lib（library-库）"><a href="#lib（library-库）" class="headerlink" title="/lib（library  库）"></a>/lib（library  库）</h2><p>lib是 Library 的缩写，包含 bin 和 sbin 中可执行文件的依赖，类似于 Windows 系统中存放dll文件的库。</p>
<p>也可能出现lib32或lib64这样的目录，和lib差不多，只是操作系统位数不同而已。</p>
<h2 id="media-（media-媒体）"><a href="#media-（media-媒体）" class="headerlink" title="/media （media 媒体）"></a>/media （media 媒体）</h2><p>这里会有一个以你用户名命名的文件夹，<strong>里面是自动挂载的设备</strong>，比如 U 盘，移动硬盘，网络设备等。</p>
<p>比如说我在电脑上插入一个 U 盘，系统会把 U 盘自动给我挂载到/media/fdl这个文件夹里（我的用户名是 fdl），如果我要访问 U 盘的内容，就可以在那里找到。</p>
<h2 id="mnt-（mount-挂载）"><a href="#mnt-（mount-挂载）" class="headerlink" title="/mnt （mount 挂载）"></a>/mnt （mount 挂载）</h2><p>这也是和设备挂载相关的一个文件夹，一般是空文件夹。media文件夹是系统自动挂载设备的地方，这里是你<strong>手动挂载设备</strong>的地方。</p>
<p>比如说，刚才我们在dev中看到了一大堆设备，你想打开某些设备看看里面的内容，就可以通过命令把设备挂载到mnt目录进行操作。</p>
<p>不过一般来说，现在的操作系统已经很聪明了，像挂载设备的操作几乎都不用你手动做，系统应该帮你自动挂载到media目录了</p>
<h2 id="opt-（option-选项）"><a href="#opt-（option-选项）" class="headerlink" title="/opt （option  选项）"></a>/opt （option  选项）</h2><p>opt是 Option 的缩写，这个文件夹的使用比较随意，一般来说我们自己在浏览器上下载的软件，安装在这里比较好。当然，包管理工具下载的软件也可能被存放在这里。</p>
<h2 id="proc-（process-运行）"><a href="#proc-（process-运行）" class="headerlink" title="/proc （process 运行）"></a>/proc （process 运行）</h2><p>proc是process的缩写，这里存放的是全部<strong>正在运行程序的状态信息</strong>。</p>
<p>你会发现/proc里面有一大堆数字命名的文件夹，这个数字其实是 Process ID（PID），文件夹里又有很多文件。</p>
<p>前面说过，Linux 中一切都以文件形式储存，类似/dev，这里的文件也<strong>不是真正的文件</strong>，而是程序和内核交流的一些信息。比如说我们可以查看当前操作系统的版本，或者查看 CPU 的状态：</p>
<p>如果你需要调试应用程序，proc目录中的信息也许会帮上忙</p>
<h2 id="root-（root-根）"><a href="#root-（root-根）" class="headerlink" title="/root （root 根）"></a>/root （root 根）</h2><p>这是超级用户的家目录，普通用户需要授权才能访问。</p>
<p>区别一下 root 用户和根目录的区别哈，root 用户就是 Linux 系统的超级用户（Super User），而根目录是指 / 目录，整个文件系统的「根部」</p>
<h2 id="srv-（service-服务）"><a href="#srv-（service-服务）" class="headerlink" title="/srv （service  服务）"></a>/srv （service  服务）</h2><p>srv是service的缩写，主要用来<strong>存放服务数据。</strong></p>
<p>对于桌面版 Linux 系统，这个文件夹一般是空的，但是对于 Linux 服务器，Web 服务或者 FTP 文件服务的资源可以存放在这里。</p>
<h2 id="tmp-（temporary-临时文件）"><a href="#tmp-（temporary-临时文件）" class="headerlink" title="/tmp （temporary  临时文件）"></a>/tmp （temporary  临时文件）</h2><p>tmp是temporary的缩写，存储一些程序的<strong>临时文件</strong>。</p>
<p>临时文件可能起到很重要的作用。比如经常听说某同学的 Word 文档崩溃了，好不容易写的东西全没了，Linux 的很多文本编辑器都会在/tmp放一份当前文本的 copy 作为临时文件，如果你的编辑器意外崩溃，还有机会在/tmp找一找临时文件抢救一下。</p>
<p>比如上图的VSCode Crashes应该就是 VScode 编辑器存放临时文件的地方。</p>
<p>当然，tmp文件夹在系统重启之后会自动被清空，如果没有被清空，说明系统删除某些文件失败，也许需要你手动删除一下。</p>
<h2 id="var-（variable-变量）"><a href="#var-（variable-变量）" class="headerlink" title="/var （variable 变量）"></a>/var （variable 变量）</h2><p>var是variable的缩写，这个名字是历史遗留的，现在该目录最主要的作用是<strong>存储日志（log）信息</strong>，比如说程序崩溃，防火墙检测到异常等等信息都会记录在这里。</p>
<p>日志文件不会自动删除，也就是说随着系统使用时间的增长，你的var目录占用的磁盘空间会越来越大，也许需要适时清理一下。</p>
<h2 id="home（home-家）"><a href="#home（home-家）" class="headerlink" title="/home（home 家）"></a>/home（home 家）</h2><p>最后说home目录，这是普通用户的家目录。在桌面版的 Linux 系统中，用户的家目录会有下载、视频、音乐、桌面等文件夹，这些没啥可说的，我们说一些比较重要的隐藏文件夹（Linux 中名称以.开头就是隐藏文件）。</p>
<p>其中.cache文件夹存储应用缓存数据，.config文件夹存储了一部分应用程序的配置，比如说我的 Chrome 浏览器配置就是那里面。但是还有一部分应用程序并不把配置储存在.config文件夹，而是自己创建一个隐藏文件夹，存放自己的配置文件等等信息，比如你可以看到 Intellij 的配置文件就不在.config中。</p>
<p>最后说.local文件夹，有点像/usr/local，里面也有bin文件夹，也是存放可执行文件的。比如说我的 python pip 以及 pip 安装的一些工具，都存放在~/.local/bin目录中。<strong>但是，存在这里的文件，只有该用户才能使用。</strong></p>
<p>这就是为什么，有时候普通用户可以使用的命令，用 sudo 或者超级用户却被告知找不到该命令。因为有的命令是特定用户家目录里的，仅被添加到了该用户的PATH环境变量里，只有他可以直接用。你超级用户想用当然可以，但是得写全绝对路径才行。</p>
<h1 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h1><p>如果修改系统配置，就去/etc找，</p>
<p>如果修改用户的应用程序配置，就在/home的隐藏文件里找</p>
<p>如果某个程序崩溃了，可以到/val/log中尝试寻找出错信息，到/tmp中寻找残留的临时文件。</p>
<h3 id="系统可运行命令目录"><a href="#系统可运行命令目录" class="headerlink" title="系统可运行命令目录"></a>系统可运行命令目录</h3><p>你在命令行里可以直接输入使用的命令，其可执行文件一般就在以下几个位置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;bin    </span><br><span class="line">&#x2F;sbin</span><br><span class="line">&#x2F;usr&#x2F;bin</span><br><span class="line">&#x2F;usr&#x2F;sbin</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;sbin</span><br><span class="line">&#x2F;home&#x2F;USER&#x2F;.local&#x2F;bin</span><br><span class="line">&#x2F;home&#x2F;USER&#x2F;.local&#x2F;sbin</span><br></pre></td></tr></table></figure>

<p>如果你写了一个脚本/程序，想在任何时候都能直接调用，可以把这个脚本/程序添加到上述目录中的某一个。</p>
<h3 id="bin和-sbin区别"><a href="#bin和-sbin区别" class="headerlink" title="/bin和/sbin区别"></a>/bin和/sbin区别</h3><p>​    1）从命令功能来看，/sbin 下的命令属于基本的系统命令，如shutdown，reboot，用于启动系统，修复系统，/bin下存放一些普通的基本命令，如ls,chmod等，这些命令在Linux系统里的配置文件脚本里经常用到。</p>
<p>  2）从用户权限的角度看，/sbin目录下的命令通常只有管理员才可以运行，/bin下的命令管理员和一般的用户都可以使用。</p>
<p>  3）从可运行时间角度看，/sbin,/bin能够在挂载其他文件系统前就可以使用</p>
<p> /bin和/sbin目录是在系统启动后挂载到根文件系统中的，所以/sbin,/bin目录必须和根文件系统在同一分区；</p>
<h3 id="usr-bin-usr-sbin和-sbin-bin目录的区别"><a href="#usr-bin-usr-sbin和-sbin-bin目录的区别" class="headerlink" title="/usr/bin,/usr/sbin和/sbin,/bin目录的区别"></a>/usr/bin,/usr/sbin和/sbin,/bin目录的区别</h3><ol>
<li>/bin,/sbin目录是在系统启动后挂载到根文件系统中的，所以/sbin,/bin目录必须和根文件系统在同一分区；</li>
</ol>
<p>  2）/usr/sbin存放的一些非必需的系统命令，/usr/bin 存放一些用户命令</p>
<p>  3）usr/bin /usr/sbin 可以和根文件系统不在一个分区。</p>
<h3 id="usr-bin-usr-sbin和-usr-local-bin-usr-local-sbin的区别"><a href="#usr-bin-usr-sbin和-usr-local-bin-usr-local-sbin的区别" class="headerlink" title="/usr/bin,/usr/sbin和/usr/local/bin,/usr/local/sbin的区别"></a>/usr/bin,/usr/sbin和/usr/local/bin,/usr/local/sbin的区别</h3><p>通常/usr/bin下面的都是系统预装的可执行程序，会随着系统升级而改变。</p>
<p>/usr/local/bin目录是给用户放置自己的可执行程序的地方(后续安装的和系统无关的软件)</p>
<p>==两个目录下有相同的可执行程序，/usr/local/bin优先于/usr/bin。==</p>
<h3 id="上述命令目录下的程序"><a href="#上述命令目录下的程序" class="headerlink" title="上述命令目录下的程序"></a>上述命令目录下的程序</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;bin      是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。    </span><br><span class="line">&#x2F;sbin     一般是指超级用户指令。主要放置一些系统管理的必备程式例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、rmmod、 runlevel、shutdown等。   </span><br><span class="line">&#x2F;usr&#x2F;bin　是你在后期安装的一些软件的运行脚本。主要放置一些应用软体工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome*、 gzip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb*、wget等。</span><br><span class="line">&#x2F;usr&#x2F;sbin 放置一些用户安装的系统管理的必备程序例如:dhcpd、httpd、imap、in.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等。    </span><br><span class="line">如果新装的系统，运行一些很正常的诸如：shutdown，fdisk的命令时，悍然提示：bash:command not found。那么首先就要考虑root 的$PATH里是否已经包含了这些环境变量。    </span><br><span class="line">可以查看PATH，echo $PATH，如果是：PATH&#x3D;$PATH:$HOME&#x2F;bin则需要添加成如下：PATH&#x3D;$PATH:$HOME&#x2F;bin:&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;sbin</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>win10系统还原点</title>
    <url>/xiaobawang/post/3e5180fe.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="win10系统还原点"><a href="#win10系统还原点" class="headerlink" title="win10系统还原点"></a>win10系统还原点</h1><h2 id="win10还原和系统恢复有什么区别"><a href="#win10还原和系统恢复有什么区别" class="headerlink" title="win10还原和系统恢复有什么区别"></a>win10还原和系统恢复有什么区别</h2><p>一、还原点：</p>
<p>系统还原是Windows操作系统中最关键但被低估的功能之一。还原点可以帮助计算机立即恢复工作状态，并节省大量时间进行故障排除。系统还原点将常驻程序，它们的设置和Windows注册表捕获为映像，并备份一些必要的操作，以便您选择返回时将系统驱动器重建到该点。</p>
<p>==<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E8%BF%98%E5%8E%9F">系统还原</a>使用名为系统保护的功能定期创建和保存计算机上的还原点。这些还原点包含 有关注册表设置和 Windows 使用的其他<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF">系统信息</a>的信息。还可以手动创建还原点。==</p>
<p>1、打开还原点功能后，每次在安装软件或系统更新后，系统会自动生成一个还原点，也可自行设置还原点。还原点可以有多个。</p>
<p>2、用还原点对系统进行还原时，可以选择你想还原的时间点。</p>
<p>3、还原点的设置，只是对系统的注册表进行备份。还原时对注册表进行还原。</p>
<p>4、由于注册表备份所占的空间很小。因此，不会占用系统空间。</p>
<p>通常在系统出现一些小故障时，使用系统还原很方便。</p>
<p>经过我的测试，我在C盘安装了360，安装前进行了还原点的创建，安装完360之后，我进行了还原点恢复，恢复完成后桌面上的图标等就没有了，但是360的安装文件还是存在</p>
<p>二、系统恢复：</p>
<p>系统恢复需要在系统正常时，对系统进行备份。</p>
<p>1、系统恢复时，只能恢复到备份时的状态。也就是只一个恢复点。</p>
<p>2、由于系统备份是对整个系统进行备份。因此所需要的空间很大（通常要几十个 G ），因此占用空间很大或者将备份保存在 U 盘或移动硬盘中。</p>
<p>通常在系统出现严重错时使用恢复功能。</p>
]]></content>
      <categories>
        <category>WIN10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title>修改系统hosts文件解决GitHub访问速度慢</title>
    <url>/xiaobawang/post/53812541.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、原因分析"><a href="#一、原因分析" class="headerlink" title="一、原因分析"></a>一、原因分析</h2><p>GitHub的CDN域名遭到DNS污染，导致无法连接使用 GitHub 的加速分发服务器，才使得国内访问速度很慢。</p>
<h2 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h2><p>通过修改本地 hosts 文件，将域名解析直接指向 IP 地址来绕过 DNS 的解析，以此解决污染问题。.</p>
<h2 id="三、具体步骤"><a href="#三、具体步骤" class="headerlink" title="三、具体步骤"></a>三、具体步骤</h2><ol>
<li>通过<a href="https://www.ipaddress.com/%E6%9F%A5%E8%AF%A2github%E7%9A%84IP%E5%9C%B0%E5%9D%80">https://www.ipaddress.com/查询github的IP地址</a></li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421103831140.png"></p>
<ol start="2">
<li>修改hosts文件，路径C:\Windows\System32\drivers\etc\hosts</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421104114436.png"></p>
<ol start="3">
<li>更新本地DNS缓存，cmd中输入：ipconfig /flushdns   后回车</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421104401672.png"></p>
<ol start="4">
<li>修改hosts时可能会提示没有权限，把hosts保存到其他地方后，直接拖回<br>hosts的目录下，提示权限问题，点击继续即可。</li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>知识</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>利用jsdelivr搭建视频床</title>
    <url>/xiaobawang/post/25c2af4e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="利用jsdelivr搭建视频床"><a href="#利用jsdelivr搭建视频床" class="headerlink" title="利用jsdelivr搭建视频床"></a>利用jsdelivr搭建视频床</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>相信很多人都用过图床，大部分都是利用jsdelivr当图床，从而得到一个免费的图床，并且自带CDN加速<br>但是有很多人想存储视频这么办呢？有没有视频床呢？把视频上传仓库后，jsdelivr是能抓取的，而且也能用<br>不过只能存储20MB以内的资源，并且jsdelivr不能解析视频类资源，打开视频格式的链接会自动下载，无法播放<br>那怎么办呢？只要你想就没有你做不到的，那么就在此记录一下过程，就不多说废话了，看正文 &lt;(￣︶￣)↗[GO!]</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>首先你得了解jsdelivr，他只加载20MB以内的资源，如果你的视频正好控制这一范围的话，你就可以使用默认的内容了<br>但是由于jsdelivr对视频资源的解析不友好，所以我们就得对视频资源做一定的处理</p>
<p>用过QQ浏览器的都知道下载网页上的视频下来都是M3U8的视频格式，即使你不下载，只是看视频都会产生M3U8文件和TS文件</p>
<h2 id="什么是M3U8、TS文件？"><a href="#什么是M3U8、TS文件？" class="headerlink" title="什么是M3U8、TS文件？"></a>什么是M3U8、TS文件？</h2><p><strong>M3U8</strong><br>M3U8是指UTF-8编码格式的M3U文件(M3U使用Latin-1字符集编码)<br>M3U文件是一个记录索引的纯文本文件，打开它时播放软件并不会播放它<br>而是根据它的索引找到对应的音视频文件的网络地址进行在线播放</p>
<p><strong>TS</strong><br>ts是日本高清摄像机拍摄下进行的封装格式，全称为MPEG2-TS。ts即”Transport Stream”的缩写。<br>将一个视频文件(MP4)切片分为很多个TS文件，一个TS文件的视频时常可以自定义，比如切片为5秒<br>那么其他ts文件也是5秒，但是这个不是完全准确，也就是说会有误差，会产生4-7秒左右的ts视频文件</p>
<p>那他是这么工作的呢？(以下图片是本地运行过程)</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/m3u8-ts.png" alt="m3u8-ts"></p>
<h2 id="ffmpeg-工具"><a href="#ffmpeg-工具" class="headerlink" title="ffmpeg 工具"></a>ffmpeg 工具</h2><p>什么是ffmpeg在这里我就不再赘述了，感兴趣的可以自行搜索</p>
<p>了解了M3U8和TS，我该怎么把视频切片呢?<br>使用ffmpeg 工具进行切片</p>
<p>官网：<a href="https://ffmpeg.org/download.html">https://ffmpeg.org/download.html</a></p>
<p>下载解压后打开<code>bin</code>目录，在里面找到<code>ffmpeg.exe</code>复制到自己新建的一个文件夹里，再把想要切片的视频Copy进来</p>
<h2 id="视频切片"><a href="#视频切片" class="headerlink" title="视频切片"></a>视频切片</h2><blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo</span><br><span class="line"></span><br><span class="line">rem 开始转码…</span><br><span class="line"></span><br><span class="line">rem 正在转码…</span><br><span class="line"></span><br><span class="line">ffmpeg -i 每次当我沾染了黑暗的色调.mkv -c:v libx264 -c:a aac -strict -2 -f hls -hls_list_size 0 -hls_time 20 output&#x2F;playlist.m3u8</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210519132907045.png"></p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210519133218632.png"></p>
<p>现在访问是m3u8是不可以播放视频的(会自动下载对吧)<br><a href="https://cdn.jsdelivr.net/gh/HDS9528/Video/MOVIE/%E6%AF%8F%E6%AC%A1%E5%BD%93%E6%88%91%E6%B2%BE%E6%9F%93%E4%BA%86%E9%BB%91%E6%9A%97%E7%9A%84%E8%89%B2%E8%B0%83/playlist.m3u8">https://cdn.jsdelivr.net/gh/HDS9528/Video/MOVIE/每次当我沾染了黑暗的色调/playlist.m3u8</a></p>
<h2 id="HLS技术"><a href="#HLS技术" class="headerlink" title="HLS技术"></a>HLS技术</h2><p>什么是HLS技术？</p>
<p>HLS (HTTP Live Streaming)是Apple的动态码率自适应技术。主要用于PC和Apple终端的音视频服务。<br>包括一个m3u(8)的索引文件，TS媒体分片文件和key加密串文件。(摘抄自百度百科)</p>
<p>CDN：<a href="https://cdn.jsdelivr.net/npm/hls.js">https://cdn.jsdelivr.net/npm/hls.js</a></p>
<h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><p>使用video标签播放视频</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>autoplay</td>
<td>autoplay</td>
<td>如果出现该属性，则视频在就绪后马上播放。</td>
</tr>
<tr>
<td>controls</td>
<td>controls</td>
<td>如果出现该属性，则向用户显示控件，比如播放按钮。</td>
</tr>
<tr>
<td>height</td>
<td>pixels</td>
<td>设置视频播放器的高度。</td>
</tr>
<tr>
<td>loop</td>
<td>loop</td>
<td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td>
</tr>
<tr>
<td>muted</td>
<td>muted</td>
<td>规定视频的音频输出应该被静音。</td>
</tr>
<tr>
<td>poster</td>
<td>URL</td>
<td>规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。</td>
</tr>
<tr>
<td>preload</td>
<td>preload</td>
<td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。 如果使用 “autoplay”，则忽略该属性。</td>
</tr>
<tr>
<td>src</td>
<td>url</td>
<td>要播放的视频的 URL。</td>
</tr>
<tr>
<td>width</td>
<td>pixels</td>
<td>设置视频播放器的宽度。</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/hls.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;video&quot;</span> <span class="attr">preload</span> <span class="attr">muted</span> <span class="attr">loop</span> <span class="attr">autoplay</span> <span class="attr">style</span>=<span class="string">&quot;height: 100%;width: 100%;object-fit: cover;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> video = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;video&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> videoSrc = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/HDS9528/Video/MOVIE/每次当我沾染了黑暗的色调/playlist.m3u8&#x27;</span>;</span></span><br><span class="line">  if (Hls.isSupported()) &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> hls = <span class="keyword">new</span> Hls();</span></span><br><span class="line">    hls.loadSource(videoSrc);</span><br><span class="line">    hls.attachMedia(video);</span><br><span class="line"><span class="javascript">    hls.on(Hls.Events.MANIFEST_PARSED, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">      video.play();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><script src="https://cdn.jsdelivr.net/npm/hls.js"></script>
<video id="video" preload controls loop autoplay style="height: 100%;width: 100%;object-fit: cover;">
</video>
<script>
  var video = document.getElementById('video');
  var videoSrc = 'https://cdn.jsdelivr.net/gh/HDS9528/Video/MOVIE/每次当我沾染了黑暗的色调/playlist.m3u8';
  if (Hls.isSupported()) {
    var hls = new Hls();
    hls.loadSource(videoSrc);
    hls.attachMedia(video);
    hls.on(Hls.Events.MANIFEST_PARSED, function() {
      video.play();
    });
  }
</script>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo视频</tag>
      </tags>
  </entry>
  <entry>
    <title>各类efi文件介绍</title>
    <url>/xiaobawang/post/67649a66.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="各类efi文件介绍"><a href="#各类efi文件介绍" class="headerlink" title="各类efi文件介绍"></a>各类efi文件介绍</h1><h2 id="1-grubx64-efi"><a href="#1-grubx64-efi" class="headerlink" title="1. grubx64.efi"></a>1. grubx64.efi</h2><p>ubuntu下不开启安全模式的引导程序</p>
<h2 id="2-shimx64-efi"><a href="#2-shimx64-efi" class="headerlink" title="2. shimx64.efi"></a>2. shimx64.efi</h2><p>ubuntu下开启安全模式的引导程序，它提供了一种在激活安全启动的情况下在计算机上启动的方法。</p>
<h2 id="3-MokManager-efi"><a href="#3-MokManager-efi" class="headerlink" title="3.MokManager.efi"></a>3.MokManager.efi</h2><p>是一个用于管理机器所有者密钥（MOK）的工具，这些密钥是Shim使用的安全启动密钥，使您可以在安全启动处于活动状态时启动所选的OS。如果计算机上的安全启动处于活动状态，则可能应该已安装MokManager并可以从GRUB访问它，以便在需要时可以启动所需的应急工具。如果您的计算机上的安全启动处于非活动状态或不受支持，则MokManager的重量很重-但重量不是很多，因此我不必为此担心太多。（在任何现成的Linux发行版中，您都会发现更多无用的东西，而且很少有人去挖掘所有这些文件以进行清理。</p>
<ul>
<li><code>/boot/efi/EFI/ubuntu/grubx64.efi</code> -这是EFI GRUB 2二进制文件，如果更新了GRUB软件包，则必须将其替换。</li>
<li><code>/boot/efi/EFI/ubuntu/grub.cfg</code>-这是一个GRUB配置文件，只做很少的事；主要是加载<code>/boot/grub/grub.cfg</code>。进行此重定向是为了为安全启动系统启用“挂机”。如果没有安全启动，<code>grubx64.efi</code>二进制文件可以在本地构建并直接指向<code>/boot/grub/grub.cfg</code>; 但是随着<code>/boot/grub/grub.cfg</code>一个系统到另一个系统的位置变化（如ESP所见），<code>grub.cfg</code>为了安全启动，必须在ESP上放置一个文件，该文件不允许<code>grubx64.efi</code>在本地构建。恕我直言，将主<code>grub.cfg</code>文件和其他GRUB支持文件放在ESP上会更有意义，但是负责此工作的开发人员相对于基于BIOS的系统，选择了一种更为保守的方法。无论如何，<code>grub.cfg</code>在ESP上很少（如果有的话）进行更新；但是在某些时候这可能是必要的，特别是如果GRUB Debian软件包已更新。</li>
<li><code>/boot/efi/EFI/ubuntu/shimx64.efi</code>-这是Shim二进制文件，安全启动才能正常运行。像GRUB 2二进制文件一样，它可以通过Debian软件包更新（但对于软件包）进行更新<code>shim-signed</code>。</li>
<li><code>/boot/efi/EFI/ubuntu/MokManager.efi</code>-这是MokManager二进制文件，是Shim支持工具。与Shim一样，它可能会在软件包更新中进行更新。</li>
<li><code>/boot/efi/EFI/ubuntu/fwupx64.efi</code>-这是一个工具，可帮助在基于EFI的计算机上自动化固件更新。与前面的EFI二进制文件一样，它可以通过Debian软件包更新进行更新。</li>
<li>EFI固件文件-更新固件可能需要将固件文件复制到ESP。这可以是手动过程，也可以是使用Linux <code>fwupdate</code>二进制文件和匹配的<code>fwupx64.efi</code>EFI二进制文件至少部分自动化的程序。（不过，我不是100％肯定后者需要将文件写入ESP。这是很新的东西，目前文档很少。）</li>
<li>其他与EFI相关的工具- 可能需要将诸如<a href="http://www.rodsbooks.com/refind/">rEFInd引导管理器</a>和其他非标准EFI引导管理器之类的程序和工具安装到ESP。可能需要安装的工具数量巨大，但是其中大多数都是奇特的，因此受影响的系统数量很少。</li>
<li>手动配置文件调整-如果要重新配置引导加载程序，则可能需要在ESP上读取其配置文件，对其进行编辑，然后将编辑后的文件保存回去。因此，仅<em>检查</em>配置就需要安装ESP（尽管它可以是只读安装）。</li>
<li>系统信息工具-诸如<a href="https://sourceforge.net/projects/bootinfoscript/">引导信息脚本之</a>类的工具在ESP上读取配置文件，以生成有关系统配置方式的报告。即使未安装ESP来执行工作，Boot Info Script也可能会安装ESP，但我对此并不是100％积极的。可能还有其他工具假定已经安装了ESP，如果不满足此假设，其功能将降低。</li>
</ul>
<p>总而言之，OS本身或您可能想要或需要读取或写入ESP的原因有很多。也就是说，这些原因数量很少，因此暂时安装ESP然后在完成后卸载ESP的机制可能是有益的。可以肯定地说，例如Debian软件包安装脚本可以完成此任务，就像修改ESP上的配置文件的自动化工具一样。但是，AFAIK尚未改变ESP的安装状态。</p>
<p>请注意，默认情况下，ESP装载时具有相当严格的权限。最近（也许从15.10或16.04开始-我不确定确切的时间），安装权限已更改，因此只能<code>root</code>从读取<code>/boot/efi</code>。即使在此之前，也只能<code>root</code>写入ESP，尽管读取权限比较宽松。由于<code>root</code>可以挂载分区，因此此时卸载ESP具有最小的安全性好处，尽管这样做的好处是，由于错误，断电等原因，ESP损坏文件系统的风险较小。</p>
]]></content>
      <categories>
        <category>WIN10</category>
      </categories>
      <tags>
        <tag>efi</tag>
      </tags>
  </entry>
  <entry>
    <title>小站上线的第一天</title>
    <url>/xiaobawang/post/4ac06117.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>
    <div id="aplayer-VdCcsBzP" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="455938406" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"
    ></div>

<h3 id="话说"><a href="#话说" class="headerlink" title="话说"></a>话说</h3><p>由于毕业后找的是视频制作类的工作，尽管大学可能学过一丢丢建站的我，现在也已经是与小白无异了。</p>
<p>所以这是经过了五六天（流下菜鸡的泪水.jpg）的捣鼓，终于也算是做完了……emmm，初版。</p>
<blockquote>
<p>朋友圈都么得人看，还搞这些个花里胡哨的博客，给谁看？</p>
</blockquote>
<p>hhh，自己引用自己的话，诶，感觉有点道理啊……</p>
<p>其实捣鼓这个之前，早就想弄一个，也不知道为啥，可能我这个人就是喜欢这方面的折腾……瞎折腾吧。又或许是为了能装AC中间那个？闲的吧？</p>
<p>……说不定还是有点卵用呢？</p>
<p>不管怎样，上线的第一天也还是记录一下。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404175831867.png"></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo引入阿里矢量图标库</title>
    <url>/xiaobawang/post/d2ebecef.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>阿里图标库全名<a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a>。提供了丰富的免费图标资源。并且支持多种引入方式。</p>
<p>阿里图标库全名阿里巴巴矢量图标库。提供了丰富的免费图标资源。并且支持多种引入方式。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210420173629332.png" alt="[阿里图标库](https://www.iconfont.cn/)"></p>
<p>本帖讨论的引入方案虽然是基于 Butterfly 主题进行的，但是仅仅是特化了引入写法（Butterfly 的文件引入使用 inject 配置项), 整体内容是完全可以兼容其他主题的。读者可以在熟读教程后自行修改引入方案。</p>
<h1 id="新建图标项目"><a href="#新建图标项目" class="headerlink" title="新建图标项目"></a>新建图标项目</h1><ol>
<li>访问<a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a> , 注册登录。</li>
<li>搜索自己心仪的图标，然后选择<strong>添加入库</strong>，加到购物车。</li>
<li>选择完毕后点击右上角的购物车图标，打开侧栏，选择添加到项目，如果没有项目就新建一个。</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210420184406996.png"></p>
<ol start="4">
<li>可以通过上方顶栏菜单 -&gt; 资源管理 -&gt; 我的项目，找到之前添加的图标项目。</li>
</ol>
<h1 id="引入图标"><a href="#引入图标" class="headerlink" title="引入图标"></a>引入图标</h1><ol>
<li>找到之前新建的图标项目，选择Symbol-&gt;查看在线链接，获取 <code>Symbol.js</code> 的在线链接，并引入。</li>
</ol>
<p>以 <code>Butterfly</code> 主题为例，在 主题配置目录下<code>[Butterfly]\_config.yml</code> 的 <code>inject</code> 配置项中填入：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line">    <span class="attr">inject:</span></span><br><span class="line">      <span class="attr">head:</span></span><br><span class="line">      <span class="attr">bottom:</span></span><br><span class="line"><span class="string">+</span>       <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;//at.alicdn.com/t/font_2489793_gs3qjj5khut.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>此处 <code>async</code> 是异步加载属性，能够减少 HTML 阻塞。</p>
<ol start="2">
<li>打开 <code>[blog]\themes\butterfly\source\css\custom.css</code>, 输入以下内容(如果没有custom.css文件可以新建):</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">1em</span>; <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">   <span class="comment">/* width和height定义图标的默认宽度和高度*/</span></span><br><span class="line">   <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span><br><span class="line">   fill: currentColor;</span><br><span class="line">   <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>添加外挂标签，在 <code>[Blog]\themes\butterfly\scripts\tag\</code> 目录下新建 <code>iconfont.js</code>，打开 <code>[Blog]\themes\butterfly\scripts\tag\iconfont.js</code>, 输入：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iconFont</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">  args = args.join(<span class="string">&#x27; &#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> p0 = args[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> p1 = args[<span class="number">1</span>]?args[<span class="number">1</span>]:<span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;svg class=&quot;icon&quot; style=&quot;width:<span class="subst">$&#123;p1&#125;</span>em; height:<span class="subst">$&#123;p1&#125;</span>em&quot; aria-hidden=&quot;true&quot;&gt;&lt;use xlink:href=&quot;#<span class="subst">$&#123;p0&#125;</span>&quot;&gt;&lt;/use&gt;&lt;/svg&gt;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.tag.register(<span class="string">&#x27;icon&#x27;</span>,iconFont);</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><code>hexo cl &amp;&amp; hexo g</code> 以后即可使用外挂标签的形式来写入图标了。</li>
</ol>
<center> 语法示例</center>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure>

<h1 id="菜单栏多色图标配置教程"><a href="#菜单栏多色图标配置教程" class="headerlink" title="菜单栏多色图标配置教程"></a>菜单栏多色图标配置教程</h1><ol>
<li><p>本方案中，通过二重判断，可以同时兼容 <code>fontawesome</code> 写法和 <code>iconfont</code> 的 <code>symbol</code> 写法，但是因为判断基准是基于开头是 <code>fa</code> 还是 <code>icon</code>, 所以若要使用 <code>iconfont</code> 的 <code>fontclass</code> 写法，就需要写成 <code>fa icon-xxx</code> 了。</p>
</li>
<li><p>因为 <code>butterfly_v3.7.0改动了menu_item.pug</code> 的基本结构，所以本方案不兼容低于 <code>Butterfly_v3.7.0</code> 的主题版本。可以在熟读教程的情况下自主适配低版本，或者根据最新版主题的 <code>menu_item.pug</code> 进行局部升级。(事实上可以把 <code>menu_item.pug</code> 全部代码改成和本帖一样，同时配置项也沿用本帖的即可)</p>
</li>
</ol>
<h3 id="静态图标"><a href="#静态图标" class="headerlink" title="静态图标"></a>静态图标</h3><p>本方案前置教程为 <a href="https://akilar.top/posts/d2ebecef/">Hexo 引入阿里矢量图标库 - iconfont inject</a>, 请确保您已经完成了前置教程，并实现了在文章中使用 <code>symbol</code> 写法来引入 <code>iconfont</code> 图标。</p>
<p>修改 <code>[Blog]\themes\butterfly\layout\includes\header\menu_item.pug</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  if theme.menu</span><br><span class="line">    &#x2F;&#x2F;- for mobile sidebar</span><br><span class="line">    - let sidebarChildHide &#x3D; theme.hide_sidebar_menu_child ? &#39;hide&#39; : &#39;&#39;</span><br><span class="line"></span><br><span class="line">    .menus_items</span><br><span class="line">      each value, label in theme.menu</span><br><span class="line">        if typeof value !&#x3D;&#x3D; &#39;object&#39;</span><br><span class="line">          .menus_item</span><br><span class="line">            a.site-page(href&#x3D;url_for(trim(value.split(&#39;||&#39;)[0])))</span><br><span class="line">              if value.split(&#39;||&#39;)[1]</span><br><span class="line">-               i.fa-fw(class&#x3D;trim(value.split(&#39;||&#39;)[1]))</span><br><span class="line">+               - var icon_value &#x3D; trim(value.split(&#39;||&#39;)[1])</span><br><span class="line">+               if icon_value.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">+                 i.fa-fw(class&#x3D;icon_value)</span><br><span class="line">+               else if icon_value.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;          </span><br><span class="line">+                 svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">+                   use(xlink:href&#x3D;&#96;#&#96;+ icon_value)</span><br><span class="line">              span&#x3D;&#39; &#39;+label</span><br><span class="line">        else</span><br><span class="line">          .menus_item</span><br><span class="line">            a.site-page(href&#x3D;&#39;javascript:void(0);&#39;)</span><br><span class="line">              if label.split(&#39;||&#39;)[1]</span><br><span class="line">-               i.fa-fw(class&#x3D;trim(label.split(&#39;||&#39;)[1]))</span><br><span class="line">+               - var icon_label &#x3D; trim(label.split(&#39;||&#39;)[1])</span><br><span class="line">+               if icon_label.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">+                 i.fa-fw(class&#x3D;icon_label)</span><br><span class="line">+               else if icon_label.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;    </span><br><span class="line">+                 svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">+                   use(xlink:href&#x3D;&#96;#&#96;+ icon_label)</span><br><span class="line">              span&#x3D;&#39; &#39;+ trim(label.split(&#39;||&#39;)[0])</span><br><span class="line">              i.fas.fa-chevron-down.expand(class&#x3D;sidebarChildHide)</span><br><span class="line">            ul.menus_item_child</span><br><span class="line">              each val,lab in value</span><br><span class="line">                li</span><br><span class="line">                  a.faa-parent.animated-hover.site-page.child(href&#x3D;url_for(trim(val.split(&#39;||&#39;)[0])))</span><br><span class="line">                    if val.split(&#39;||&#39;)[1]</span><br><span class="line">-                     i.fa-fw(class&#x3D;trim(val.split(&#39;||&#39;)[1]))</span><br><span class="line">+                     - var icon_val &#x3D; trim(val.split(&#39;||&#39;)[1])</span><br><span class="line">+                     if icon_val.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">+                       i.fa-fw(class&#x3D;icon_val)</span><br><span class="line">+                     else if icon_val.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;</span><br><span class="line">+                       svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">+                         use(xlink:href&#x3D;&#96;#&#96;+ icon_val)</span><br><span class="line">                    span&#x3D;&#39; &#39;+ lab</span><br></pre></td></tr></table></figure>

<p>此处再提供修改好以后的完整代码便于低版本用户复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if theme.menu</span><br><span class="line">  &#x2F;&#x2F;- for mobile sidebar</span><br><span class="line">  - let sidebarChildHide &#x3D; theme.hide_sidebar_menu_child ? &#39;hide&#39; : &#39;&#39;</span><br><span class="line"></span><br><span class="line">  .menus_items</span><br><span class="line">    each value, label in theme.menu</span><br><span class="line">      if typeof value !&#x3D;&#x3D; &#39;object&#39;</span><br><span class="line">        .menus_item</span><br><span class="line">          a.site-page(href&#x3D;url_for(trim(value.split(&#39;||&#39;)[0])))</span><br><span class="line">            if value.split(&#39;||&#39;)[1]</span><br><span class="line">              - var icon_value &#x3D; trim(value.split(&#39;||&#39;)[1])</span><br><span class="line">              if icon_value.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">                i.fa-fw(class&#x3D;icon_value)</span><br><span class="line">              else if icon_value.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;          </span><br><span class="line">                svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">                  use(xlink:href&#x3D;&#96;#&#96;+ icon_value)</span><br><span class="line">            span&#x3D;&#39; &#39;+label</span><br><span class="line">      else</span><br><span class="line">        .menus_item</span><br><span class="line">          a.site-page(href&#x3D;&#39;javascript:void(0);&#39;)</span><br><span class="line">            if label.split(&#39;||&#39;)[1]</span><br><span class="line">              - var icon_label &#x3D; trim(label.split(&#39;||&#39;)[1])</span><br><span class="line">              if icon_label.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">                i.fa-fw(class&#x3D;icon_label)</span><br><span class="line">              else if icon_label.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;    </span><br><span class="line">                svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">                  use(xlink:href&#x3D;&#96;#&#96;+ icon_label)</span><br><span class="line">            span&#x3D;&#39; &#39;+ trim(label.split(&#39;||&#39;)[0])</span><br><span class="line">            i.fas.fa-chevron-down.expand(class&#x3D;sidebarChildHide)</span><br><span class="line">          ul.menus_item_child</span><br><span class="line">            each val,lab in value</span><br><span class="line">              li</span><br><span class="line">                a.site-page.child(href&#x3D;url_for(trim(val.split(&#39;||&#39;)[0])))</span><br><span class="line">                  if val.split(&#39;||&#39;)[1]</span><br><span class="line">                    - var icon_val &#x3D; trim(val.split(&#39;||&#39;)[1])</span><br><span class="line">                    if icon_val.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">                      i.fa-fw(class&#x3D;icon_val)</span><br><span class="line">                    else if icon_val.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;</span><br><span class="line">                      svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">                        use(xlink:href&#x3D;&#96;#&#96;+ icon_val)</span><br><span class="line">                  span&#x3D;&#39; &#39;+ lab</span><br></pre></td></tr></table></figure>

<p>以下是填写示例，在 <code>[Blog]\_config.butterfly.yml</code> 中修改。<code>icon-xxx</code> 字样的为 <code>iconfont</code> 的 <code>symbol</code> 引入方案的 <code>id</code> 值，可以在你的 <code>iconfont</code> 图标库内查询。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">https://blog.akilar.top/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tasks</span></span><br><span class="line">  <span class="string">博客:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">icon-rat</span></span><br><span class="line">  <span class="string">生活</span> <span class="string">||</span> <span class="attr">icon-tiger :</span></span><br><span class="line">    <span class="string">相册:</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-camera</span></span><br><span class="line">    <span class="string">追番:</span> <span class="string">/bangumis/</span> <span class="string">||</span> <span class="string">icon-snake</span></span><br></pre></td></tr></table></figure>

<h1 id="Social-卡片彩色图标引入"><a href="#Social-卡片彩色图标引入" class="headerlink" title="Social 卡片彩色图标引入"></a>Social 卡片彩色图标引入</h1><ol>
<li>重写 <code>[Blog]\themes\butterfly\layout\includes\header\social.pug</code>, 替换为以下代码：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">each value, title in theme.social</span><br><span class="line">  a.social-icon(href&#x3D;url_for(trim(value.split(&#39;||&#39;)[0])) target&#x3D;&quot;_blank&quot; title&#x3D;title &#x3D;&#x3D;&#x3D; undefined ? &#39;&#39; : trim(title))</span><br><span class="line">    if value.split(&#39;||&#39;)[1]</span><br><span class="line">      - var icon_value &#x3D; trim(value.split(&#39;||&#39;)[1])</span><br><span class="line">      if icon_value.substring(0,2)&#x3D;&#x3D;&quot;fa&quot;      </span><br><span class="line">        i.fa-fw(class&#x3D;icon_value)</span><br><span class="line">      else if icon_value.substring(0,4)&#x3D;&#x3D;&quot;icon&quot;          </span><br><span class="line">        svg.icon(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">          use(xlink:href&#x3D;&#96;#&#96;+ icon_value)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>以下为对应的 <code>social</code> 配置项。写法沿用 <code>menu_item</code> 的写法示例。</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="comment"># iconfont多彩图标</span></span><br><span class="line">  <span class="attr">Github:</span> <span class="string">https://github.com/Akilarlxh</span> <span class="string">||</span> <span class="string">icon-rat</span></span><br><span class="line">  <span class="comment"># fontawesome单色图标</span></span><br><span class="line">  <span class="attr">Email:</span> <span class="string">mailto:Akilarlxh@gmail.com</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment"># iconfont单色图标</span></span><br><span class="line">  <span class="attr">Bilibili:</span> <span class="string">https://space.bilibili.com/22976782</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">icon-ox</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>新手搭建博客教程</title>
    <url>/xiaobawang/post/6abebae1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>经过了这几天的折腾，作为小白的我，也终于搭好了一个自己的个人博客（基于码云（Gitee）与Hexo的结合）。也无所谓它有没有人看吧……</p>
<p>然后今天想着，趁着把之前的操作，或者纠结了许久的不确定，或者那些踩过的坑等等再整理一下，免得到时候忘了，又得去找教程。</p>
<h1 id="一、所需的软件和平台"><a href="#一、所需的软件和平台" class="headerlink" title="一、所需的软件和平台"></a>一、所需的软件和平台</h1><h5 id="各自的官网"><a href="#各自的官网" class="headerlink" title="各自的官网"></a>各自的官网</h5><p>必须的软件：</p>
<ul>
<li><strong><a href="http://nodejs.cn/download/">node.js</a></strong></li>
<li><strong><a href="https://git-scm.com/">Git</a></strong> 或者 <strong><a href="https://npm.taobao.org/mirrors/git-for-windows/">Git镜像站</a></strong></li>
</ul>
<p>可根据个人喜好替换的软件：</p>
<ul>
<li><p><strong><a href="https://code.visualstudio.com/Download">Visual Studio Code</a></strong></p>
</li>
<li><p><strong><a href="https://www.typora.io/">Typora</a></strong></p>
<p>要用到的框架或平台：</p>
<ul>
<li><strong><a href="https://hexo.io/zh-cn/">Hexo</a></strong></li>
<li><strong><a href="https://gitee.com/">码云（Gitee）</a></strong></li>
</ul>
</li>
</ul>
<h5 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h5><p>node.js和Typora就不说了，这个灰常简单。</p>
<p>至于Git，它安装的时候选项挺多的，而且还都是洋文，看不懂的话就全部 next 就行了。你要是非得搞明白它每个选项的意思，emmmm你们自己去搜吧，网上有很多。</p>
<p>VsCode安装好之后默认是英文界面，可以在插件市场里搜索chinese，然后安装之后重启软件，就是中文版了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404181103706.png"></p>
<h5 id="检验是否成功安装"><a href="#检验是否成功安装" class="headerlink" title="检验是否成功安装"></a>检验是否成功安装</h5><p>用 <strong>Win + R</strong> 打开运行，输入 <strong>cmd</strong> 并进入cmd</p>
<p><strong>node.js</strong> 的检查</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>

<p><strong>npm</strong> 的检查</p>
<blockquote>
<p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p><strong>Git</strong> 的检查</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p>以上有显示版本号，则说明安装成功</p>
<h1 id="二、hexo博客模板"><a href="#二、hexo博客模板" class="headerlink" title="二、hexo博客模板"></a>二、hexo博客模板</h1><blockquote>
<p>hexo中文官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p>
</blockquote>
<ol>
<li><p>新建一个<code>MyWeb</code>目录，这个目录很重要，将来会存储你所有博客的markdown文件以及生成的html文件，慎重选择。</p>
</li>
<li><p>选中<code>MyWeb</code>目录，右键点击<code>Git Bsah Here</code></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404181403246.png"></p>
</li>
<li><p>安装hexo</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404182529871.png"></p>
</li>
</ol>
<p>其中，目录<code>MyWeb\blog\source\_posts</code>下存放都为makedown（md）格式文件</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404182623782.png"></p>
<p>常用hexo三句话：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">hexo clean # 清空已有hexo网站文件</span><br><span class="line">hexo generate(or g) # 依据网页文本与新的CSS样式生成新网站文件</span><br><span class="line">hexo server(or s) # 启动本地服务器，可以在localhost:4000查看网站修改效果</span><br></pre></td></tr></table></figure>

<p>在浏览器输入<code>http://localhost:4000</code>就能查看演示样式helloworld页面：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404182856710.png"></p>
<p>一般默认的是一个landscape主题，后期当提交新文章或者新的样式修改时，往往都是先从本地查看结果无误后再部署到Gitee Page。</p>
<p>4.修改主题</p>
<p>官网主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p>
<p>Sakura 非常炫，缺点加载慢 <a href="https://github.com/honjun/hexo-theme-sakura">https://github.com/honjun/hexo-theme-sakura</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404183853426.png"></p>
<p>进入github点击下载zip：<a href="https://github.com/honjun/hexo-theme-sakura">https://github.com/honjun/hexo-theme-sakura</a><br>解压文件夹，将<code>hexo-theme-sakura-master\themes</code>中的主题样式复制<code>MyWeb\blog\themes</code>目录下（注意名字对应）：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404183607890.png"></p>
<p>在<code>MyWeb\blog</code>主目录找到：<code>_config.yml</code>，记事本打开并修改默认</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404192105095.png"></p>
<p>重新测试运行</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404183853426.png"></p>
<p>细节修改参考：<a href="https://www.jianshu.com/p/25f31fe6182a">sakura使用教程</a></p>
<h1 id="三、码云配置"><a href="#三、码云配置" class="headerlink" title="三、码云配置"></a>三、码云配置</h1><ol>
<li>申请码云账户，新建仓库<br>注意：<code>仓库名，公开访问权限，语言为JavaScript</code><br>第二步：这里仓库名cungudafa必须与你注册github或gitee的注册名cungudafa相同，不然css路径会读错</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404183808881.png"></p>
<p>2.获得仓库地址：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404183941202.png"></p>
<p>3.修改配置在<code>MyWeb\blog</code>主目录找到：<code>_config.yml</code>，记事本打开并修改默认</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184043431.png"></p>
<p>其中repo后面为你的仓库地址，每个：后都有一个空格。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你的项目地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>4.部署博客</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g --d  #一键部署</span><br></pre></td></tr></table></figure>

<p>此时会弹出一个对话框，提示输入码云的账号密码。部署成功后，登陆码云。此时本地文件夹中出现有一个public文件夹，代表部署成功。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184246441.png"></p>
<p>目前，查看码云中文件为：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184336007.png"></p>
<p>本地多个public文件夹：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184424029.png"></p>
<p>5.开启Page功能</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184505428.png"></p>
<p>建议勾选</p>
<p>部署成功后如图：网址为登录网址：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184630315.png"></p>
<p>6.访问博客    <a href="https://abchds.gitee.io/">https://abchds.gitee.io</a></p>
<h1 id="四、博客使用"><a href="#四、博客使用" class="headerlink" title="四、博客使用"></a>四、博客使用</h1><p>1.在博客目录的source文件中的<code>_post</code>文件夹中添加你要写的博客文件，文件命名为<code>file_name.md</code><br>file_name.md的文件开头如下:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: file_name</span><br><span class="line">tag: 标签名</span><br><span class="line">categories: 分类</span><br><span class="line">comment: 是否允许评论(true or false)</span><br><span class="line">description: 描述</span><br><span class="line">---</span><br><span class="line">文档正文编写，请参照markdown语法。</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404185153761.png"></p>
<p>2.按顺序运行以下代码</p>
<h4 id="Hexo常用代码"><a href="#Hexo常用代码" class="headerlink" title="Hexo常用代码"></a>Hexo常用代码</h4><p>1、清理缓存</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo cl 是 hexo clean 的简写</p>
</blockquote>
<p>2、生成静态页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo g 是 hexo generate 的简写</p>
</blockquote>
<p>3、在本地映射（预览）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo s 是 hexo server 的简写</p>
</blockquote>
<p>4、部署推送</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo d 是 hexo deploy 的简写</p>
</blockquote>
<p>5.手动更新Gitee端<br>其实运行了hexo deploy(or d)应该就已经将新的网站文件（主要是网站目录下的public目录）上传到了Gitee，然而事实上上步之后直接访问网站URL会发现页面没有改变，原因在于：你、没有、更新！<br><a href="https://gitee.com/ABCHDS/ABCHDS/pages">Pages · 2020/ABCHDS - Gitee.com</a>服务中选择更新：<br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404185740944.png"></p>
<p>是的，对于免费Gitee用户而言，你会需要手动更新一下Gitee Page，然后才可以将修改真的“部署”到可访问的网站上。</p>
<p>再访问：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210404184630315.png"></p>
<p>就此大功告成！</p>
]]></content>
  </entry>
  <entry>
    <title>注册表详解</title>
    <url>/xiaobawang/post/ad5de419.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="注册表详解"><a href="#注册表详解" class="headerlink" title="注册表详解"></a>注册表详解</h1><p><strong>注册表</strong>（英语：Registry，中国大陆译作<strong>注册表</strong>，台湾、港、澳译作<strong>登录档</strong>）是<a href="https://zh.wikipedia.org/wiki/Microsoft_Windows">Microsoft Windows</a>中的一个重要的<a href="https://zh.wikipedia.org/wiki/%E5%B1%82%E6%AC%A1%E6%A8%A1%E5%9E%8B">层次型数据库</a>，用于存储系统和应用程序的设置信息。早在<a href="https://zh.wikipedia.org/wiki/Windows">Windows</a> 3.0推出<a href="https://zh.wikipedia.org/wiki/OLE">OLE</a>技术的时候，注册表就已经出现。但是，从<a href="https://zh.wikipedia.org/wiki/Windows_95">Windows 95</a>开始，注册表才真正成为Windows用户经常接触的内容，并在其后的操作系统中继续沿用至今。随后推出的<a href="https://zh.wikipedia.org/wiki/Windows_NT">Windows NT</a>是第一个从系统级别广泛使用注册表的操作系统。</p>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>注册表由键（key，或称“项”）、子键（subkey，子项）和值项（value）构成。一个键就是树状数据结构中的一个节点，而子键就是这个节点的子节点，子键也是键。一个值项则是一个键的一条属性，由名称（name）、数据类型（datatype）以及数据（data）组成。</p>
<p>==一个键可以有一个或多个值，每个值的名称各不相同，如果一个值的名称为空（则会显示默认），则该值为该键的默认值。==</p>
<p>==这里要注意的是，每个键都会有一个默认值，并且这个默认值无法被删除==</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/90002003.png"></p>
<p>在注册表编辑器（Regedit.exe）中，数据结构显示如下，其中，<strong>command</strong>键是<strong>open</strong>键的子键，**(默认)<strong>表示该值是默认值，值名称为空，其数据类型为</strong>REG_SZ<strong>，数据值为</strong>%systemroot%\system32\NOTEPAD.EXE “%1**</p>
<p><a href="https://zh.wikipedia.org/wiki/File:Regedit-txtfile.png"><img src= "/img/loading.gif" data-lazy-src="https://upload.wikimedia.org/wikipedia/zh/1/1f/Regedit-txtfile.png" alt="Regedit-txtfile.png"></a></p>
<p>以上信息的意义是：txt类型的文件在右键菜单里的“打开”一项使用的程序是“NOTEPAD.EXE”，即用记事本打开文件。</p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>注册表的数据类型主要有以下五种：</p>
<table>
<thead>
<tr>
<th align="center">显示类型（在编辑器中）</th>
<th align="center">数据类型</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">REG_SZ</td>
<td align="center"><a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a></td>
<td align="center">文本字符串</td>
</tr>
<tr>
<td align="center">REG_BINARY</td>
<td align="center">二进制数</td>
<td align="center">不定长度的二进制值，以十六进制显示</td>
</tr>
<tr>
<td align="center">REG_DWORD</td>
<td align="center">双字</td>
<td align="center">一个 32 位的二进制值，显示为 8 位的十六进制值</td>
</tr>
<tr>
<td align="center">REG_MULTI_SZ</td>
<td align="center">多字符串</td>
<td align="center">含有多个文本值的字符串，此名来源于字符串间用 nul 分隔、结尾两个 nul</td>
</tr>
<tr>
<td align="center">REG_EXPAND_SZ</td>
<td align="center">可扩展字符串</td>
<td align="center">含有环境变量的字符串</td>
</tr>
</tbody></table>
<p>此外，注册表还有其他的数据类型，但是均不常用：</p>
<ul>
<li>REG_DWORD_BIG_ENDIAN - DWORD 的<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F">大头</a>版本，下面同理</li>
<li>REG_DWORD_LITTLE_ENDIAN</li>
<li>REG_FULL_RESOURCE_DESCRIPTOR</li>
<li>REG_QWORD - DWORD 的四字（64 位）版本</li>
<li>REG_FILE_NAME</li>
</ul>
<h2 id="注册表的分支结构"><a href="#注册表的分支结构" class="headerlink" title="注册表的分支结构"></a>注册表的分支结构</h2><p>注册表有五个一级分支，下面是这五个分支的名称及作用：</p>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">HKEY_CLASSES_ROOT</td>
<td align="center">存储Windows可识别的文件类型的详细列表，以及相关联的程序。</td>
</tr>
<tr>
<td align="center">HKEY_CURRENT_USER</td>
<td align="center">存储当前用户设置的信息。</td>
</tr>
<tr>
<td align="center">HKEY_LOCAL_MACHINE</td>
<td align="center">包括安装在计算机上的硬件和软件的信息。</td>
</tr>
<tr>
<td align="center">HKEY_USERS</td>
<td align="center">包含使用计算机的用户的信息。</td>
</tr>
<tr>
<td align="center">HKEY_CURRENT_CONFIG</td>
<td align="center">这个分支包含计算机当前的硬件配置信息。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>WIN10</category>
      </categories>
      <tags>
        <tag>注册表</tag>
      </tags>
  </entry>
  <entry>
    <title>测试</title>
    <url>/xiaobawang/post/9daba997.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1cd4d1df09cfe7474d8571128a78f1264e6ffeff7e71508cf7b8ebe13a65de4b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>作为日记加密</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/xiaobawang/post/0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: UEFI模式启动windows操作系统</span><br><span class="line">date: 2021&#x2F;5&#x2F;19</span><br><span class="line">tags: WIN10</span><br><span class="line">categories: WIN10</span><br><span class="line">keywords: UEFI模式启动windows操作系统</span><br></pre></td></tr></table></figure>

<h1 id="UEFI模式启动windows操作系统"><a href="#UEFI模式启动windows操作系统" class="headerlink" title="UEFI模式启动windows操作系统"></a>UEFI模式启动windows操作系统</h1><h2 id="UEFI介绍"><a href="#UEFI介绍" class="headerlink" title="UEFI介绍"></a>UEFI介绍</h2><p><strong>统一可扩展固件接口</strong>（英语：Unified Extensible Firmware Interface，缩写<strong>UEFI</strong>）是一种<a href="https://baike.baidu.com/item/%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91">个人电脑</a>系统规格，用来定义<a href="https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F">操作系统</a>与系统<a href="https://baike.baidu.com/item/%E5%9B%BA%E4%BB%B6">固件</a>之间的<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2">软件界面</a>，作为<a href="https://baike.baidu.com/item/BIOS">BIOS</a>的替代方案。可扩展固件接口负责<a href="https://baike.baidu.com/item/%E5%8A%A0%E7%94%B5%E8%87%AA%E6%A3%80">加电自检</a>（POST）、联系操作系统以及提供连接操作系统与硬件的接口。</p>
<h2 id="UEFI模式启动顺序"><a href="#UEFI模式启动顺序" class="headerlink" title="UEFI模式启动顺序"></a>UEFI模式启动顺序</h2><h3 id="1-电脑开机，UEFI程序初始化，找到BIOS存储芯片设置的第一启动项硬件设备（固态硬盘，机械硬盘，u盘）"><a href="#1-电脑开机，UEFI程序初始化，找到BIOS存储芯片设置的第一启动项硬件设备（固态硬盘，机械硬盘，u盘）" class="headerlink" title="1. 电脑开机，UEFI程序初始化，找到BIOS存储芯片设置的第一启动项硬件设备（固态硬盘，机械硬盘，u盘）"></a>1. 电脑开机，UEFI程序初始化，找到BIOS存储芯片设置的第一启动项硬件设备（固态硬盘，机械硬盘，u盘）</h3><h3 id="2-找到该硬件设备下的EFI-系统分区（EFI-system-partition-简写ESP）下的efi文件"><a href="#2-找到该硬件设备下的EFI-系统分区（EFI-system-partition-简写ESP）下的efi文件" class="headerlink" title="2.找到该硬件设备下的EFI 系统分区（EFI system partition   简写ESP）下的efi文件"></a>2.找到该硬件设备下的EFI 系统分区（EFI system partition   简写ESP）下的efi文件</h3><h3 id="64位操作系统EFI-BOOT-bootx64-efi文件，32位操作系统是EFI-BOOT-bootia32-efi文件"><a href="#64位操作系统EFI-BOOT-bootx64-efi文件，32位操作系统是EFI-BOOT-bootia32-efi文件" class="headerlink" title="64位操作系统EFI\BOOT\bootx64.efi文件，32位操作系统是EFI\BOOT\bootia32.efi文件"></a>64位操作系统EFI\BOOT\bootx64.efi文件，32位操作系统是EFI\BOOT\bootia32.efi文件</h3><p>这里对==分区，磁盘，驱动器，卷==这四个概念进行讲解一下，==分区，磁盘，驱动器，卷==  四个名词是同一个意思，都表示我的电脑中的一个磁盘<img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827163843.png" alt="image-20200805204451432"></p>
<p>但人们往往会把上面这个图标错误的理解为这是一个物理上面的硬盘，其实这是一个错误的概念，一个物理硬盘可以把总的存储空间划分成很多个分区进行这样的显示，某些特定的分区起到特定的功能，我们在一个硬盘中安装系统并且要让电脑能使用UEFI启动方式启动这个系统，只需要两个分区，一个是ESP分区（进行系统的引导），另外一个是主分区（操作系统存放的地方）  </p>
<p>总结：把物理硬盘总的全部存储空间进行分区，每个分区有不同的文件系统类型</p>
<p>下图便是一个物理硬盘划分的多个分区（有些分区即磁盘是可见的（可以这我的电脑中显示），有的分区被系统保护了起来没有分配盘符，需要特定的工具进行设置后我们才能看到）</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827163849.png" alt="image-20200805204940045"></p>
<h4 id="下图便是ESP系统分区下bootx64-efi"><a href="#下图便是ESP系统分区下bootx64-efi" class="headerlink" title="下图便是ESP系统分区下bootx64.efi"></a>下图便是ESP系统分区下bootx64.efi</h4><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/yusenyi123/pictures1/master/imgs/20200827163858.png" alt="image-20200805203831740"></p>
<h3 id="3-bootx64-efi优先寻找相同目录下的BCD文件，如果没有再去寻找efi-microsoft-boot-BCD文件"><a href="#3-bootx64-efi优先寻找相同目录下的BCD文件，如果没有再去寻找efi-microsoft-boot-BCD文件" class="headerlink" title="3.bootx64.efi优先寻找相同目录下的BCD文件，如果没有再去寻找efi/microsoft/boot/BCD文件"></a>3.bootx64.efi优先寻找相同目录下的BCD文件，如果没有再去寻找efi/microsoft/boot/BCD文件</h3><p>BCD文件中存放着启动项（即操作系统在哪个硬盘，在硬盘的哪个分区），可以在BCD文件中设置多个启动项这样就可以引导多个操作系统</p>
]]></content>
  </entry>
  <entry>
    <title>Linux操作系统发展报告</title>
    <url>/xiaobawang/post/3d98042.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Linux操作系统发展报告"><a href="#Linux操作系统发展报告" class="headerlink" title="Linux操作系统发展报告"></a>Linux操作系统发展报告</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>Linux操作系统的诞生，Linux 的发展，Linux的特性决定其迅猛发展，Linux的应用领域与发展前景</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p><strong>Linux</strong>是一种<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E5%8F%8A%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6">自由和开放源码</a>的<a href="https://zh.wikipedia.org/wiki/%E7%B1%BBUnix%E7%B3%BB%E7%BB%9F">类UNIX</a><a href="https://zh.wikipedia.org/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1">操作系统</a>。该操作系统的<a href="https://zh.wikipedia.org/wiki/%E5%86%85%E6%A0%B8">内核</a>由<a href="https://zh.wikipedia.org/wiki/%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%89%98%E7%93%A6%E5%85%B9">林纳斯·托瓦兹</a>在1991年10月5日首次发布，在加上<a href="https://zh.wikipedia.org/wiki/%E4%BD%BF%E7%94%A8%E8%80%85%E7%A9%BA%E9%96%93">用户空间</a>的<a href="https://zh.wikipedia.org/wiki/%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F">应用程序</a>之后，成为Linux操作系统。Linux也是<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6">自由软件</a>和<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6">开放源代码软件</a>发展中最著名的例子。只要遵循<a href="https://zh.wikipedia.org/wiki/GNU%E9%80%9A%E7%94%A8%E5%85%AC%E5%85%B1%E8%AE%B8%E5%8F%AF%E8%AF%81">GNU 通用公共许可证</a>（GPL），任何个人和机构都可以自由地使用Linux的所有底层<a href="https://zh.wikipedia.org/wiki/%E6%BA%90%E4%BB%A3%E7%A0%81">源代码</a>，也可以自由地修改和再发布。大多数Linux系统还包括像提供<a href="https://zh.wikipedia.org/wiki/GUI">GUI</a>的<a href="https://zh.wikipedia.org/wiki/X_Window">X Window</a>之类的程序。除了一部分专家之外，大多数人都是直接使用<a href="https://zh.wikipedia.org/wiki/Linux%E7%99%BC%E8%A1%8C%E7%89%88">Linux 发行版</a>，而不是自己选择每一样组件或自行设置。</p>
<p><strong>Linux</strong>严格来说是单指操作系统的内核，因操作系统中包含了许多<a href="https://zh.wikipedia.org/wiki/GUI">用户图形接口</a>和其他实用工具。如今Linux常用来指基于Linux的完整操作系统，内核则改以<a href="https://zh.wikipedia.org/wiki/Linux%E5%86%85%E6%A0%B8">Linux内核</a>称之。由于这些支持用户空间的系统工具和库主要由<a href="https://zh.wikipedia.org/wiki/%E7%90%86%E6%9F%A5%E5%BE%B7%C2%B7%E6%96%AF%E6%89%98%E6%9B%BC">理查德·斯托曼</a>于1983年发起的<a href="https://zh.wikipedia.org/wiki/GNU%E8%A8%88%E5%8A%83">GNU计划</a>提供，<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6%E5%9F%BA%E9%87%91%E4%BC%9A">自由软件基金会</a>提议将其组合系统命名为<strong>GNU/Linux</strong>，但Linux不属于<a href="https://zh.wikipedia.org/wiki/GNU%E8%A8%88%E5%8A%83">GNU计划</a>，这个名称并没有得到社区的一致认同。</p>
<h2 id="技术发展"><a href="#技术发展" class="headerlink" title="技术发展"></a>技术发展</h2><h3 id="1-Linux操作系统的诞生-1"><a href="#1-Linux操作系统的诞生-1" class="headerlink" title="1.Linux操作系统的诞生[^1]"></a>1.Linux操作系统的诞生[^1]</h3><p>在1981年到1991年十年间，微软公司的MS-DOS系统一直主宰操作系统的市场，其价格十分昂贵，另一个操作系统UNIX的经销商为了高利润，也把价格抬得很高。曾经一段时间，市面上一直没有廉价的操作系统，而且UNIX的源代码一直被小心地守卫着不公开，许多程序和爱好者想要研究却无从下手。正在此时，出现了MINIX操作系统，并有一本详细的书本描述它的设计实现原理。由于AST的书写的非常详细，并且叙述有条有理，几乎全世界的计算机爱好者都在看这本书以理解操作系统的工作原理。其中也包括Linux系统的创始者Linus Benedict Torvalds。但是MINIX只是很简单的操作系统，功能有限不是很实用。到1991 年，GNU 计划已经开发出了许多工具软件。最受期盼的Gnu C 编译器已经出现，但还没有开发出免费的GNU 操作系统。即使是MINIX 也开始有了版权，需要购买才能得到源代码。而GNU 的操作系统HURD 一直在开发之中，但并不能在几年内完成。对于Linus 来说，已经不能等待了。从1991 年4 月份起，他开始酝酿并着手编制自己的操作系统。1991 年 9 月，Linus发布了 Linux 0.01。来自各地的力量开始在 Linux 附近聚集，大家下载、测试代码，并将反馈和改进的代码发回，Linus则根据反馈进一步改进系统。很快，linux的版本就不停迭代。</p>
<h3 id="2-Linux-的发展-2"><a href="#2-Linux-的发展-2" class="headerlink" title="2.Linux 的发展[^2]"></a>2.Linux 的发展[^2]</h3><h6 id="Linux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：UNIX-操作系统、MINIX-操作系统、GNU计划、POSIX-标准和Internet-网络-3-。"><a href="#Linux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：UNIX-操作系统、MINIX-操作系统、GNU计划、POSIX-标准和Internet-网络-3-。" class="headerlink" title="Linux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：UNIX 操作系统、MINIX 操作系统、GNU计划、POSIX 标准和Internet 网络[^3]。"></a>Linux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：UNIX 操作系统、MINIX 操作系统、GNU计划、POSIX 标准和Internet 网络[^3]。</h6><p>　　1981 年IBM公司推出微型计算机IBM PC。</p>
<p>　　1991年，GNU计划已经开发出了许多工具软件，最受期盼的GNU C编译器已经出现，GNU的操作系统核心HURD一直处于实验阶段，没有任何可用性，实质上也没能开发出完整的GNU操作系统，但是GNU奠定了Linux用户基础和开发环境。</p>
<p>　　1991年初，林纳斯·托瓦兹开始在一台386sx兼容微机上学习minix操作系统。1991年4月，林纳斯·托瓦兹开始酝酿并着手编制自己的操作系统。</p>
<p>　　1991 年4 月13 日在comp.os.minix 上发布说自己已经成功地将bash 移植到了minix 上，而且已经爱不释手、不能离开这个shell软件了。</p>
<p>　　1991年7月3日，第一个与Linux有关的消息是在comp.os.minix上发布的（当然此时还不存在Linux这个名称，当时林纳斯·托瓦兹的脑子里想的可能是FREAX，FREAX的英文含义是怪诞的、怪物、异想天开等）。</p>
<p>　　1991年的10月5日，林纳斯·托瓦兹在comp.os.minix新闻组上发布消息，正式向外宣布Linux内核的诞生（Freeminix-like kernel sources for 386-AT）。</p>
<p>　　1993年，大约有100余名程序员参与了Linux内核代码编写/修改工作，其中核心组由5人组成，此时Linux 0.99的代码大约有十万行，用户大约有10万左右。</p>
<p>　　1994年3月，Linux1.0发布，代码量17万行，当时是按照完全自由免费的协议发布，随后正式采用GPL协议。</p>
<p>　　1995年1月，Bob Young创办了RedHat（小红帽），以GNU/Linux为核心，集成了400多个源代码开放的程序模块，搞出了一种冠以品牌的Linux，即RedHat Linux,称为Linux”发行版”，在市场上出售。这在经营模式上是一种创举。</p>
<p>　　1996年6月，Linux 2.0内核发布，此内核有大约40万行代码，并可以支持多个处理器。此时的Linux 已经进入了实用阶段，全球大约有350万人使用。</p>
<p>　　1998年2月，以Eric Raymond为首的一批年轻的”老牛羚骨干分子”终于认识到GNU/Linux体系的产业化道路的本质，并非是什么自由哲学，而是市场竞争的驱动，创办了”Open Source Intiative”（开放源代码促进会）”复兴”的大旗，在互联网世界里展开了一场历史性的Linux产业化运动。</p>
<p>　　2001年1月，Linux 2.4发布，它进一步地提升了SMP系统的扩展性，同时它也集成了很多用于支持桌面系统的特性：USB，PC卡（PCMCIA）的支持，内置的即插即用，等等功能。</p>
<p>　　2003年12月，Linux 2.6版内核发布，相对于2.4版内核2.6在对系统的支持都有很大的变化。</p>
<p>　　2004年的第1月，SuSE嫁到了Novell，SCO继续顶着骂名四处强行“化缘”， Asianux， MandrakeSoft也在五年中首次宣布季度赢利。3月，SGI宣布成功实现了Linux操作系统支持256个Itanium 2处理器</p>
<h2 id="应用情况-4"><a href="#应用情况-4" class="headerlink" title="应用情况[^4]"></a>应用情况[^4]</h2><p>今天各种场合都有使用各种Linux发行版，从嵌入式设备到超级电脑（Super Computer），并且在服务器领域确定了地位，通常服务器使用<a href="https://zh.wikipedia.org/wiki/LAMP">LAMP</a>组合。基于其低廉成本与高度可设置性，Linux常常被应用于<a href="https://zh.wikipedia.org/wiki/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F">嵌入式系统</a>，例如<a href="https://zh.wikipedia.org/wiki/%E6%95%B8%E4%BD%8D%E8%A6%96%E8%A8%8A%E8%BD%89%E6%8F%9B%E7%9B%92">机顶盒</a>、<a href="https://zh.wikipedia.org/wiki/%E7%A7%BB%E5%8A%A8%E7%94%B5%E8%AF%9D">移动电话</a>及<a href="https://zh.wikipedia.org/wiki/%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87">移动设备</a>等。在移动电话上，基于Linux的<a href="https://zh.wikipedia.org/wiki/Android">Android</a>已经成为<a href="https://zh.wikipedia.org/wiki/IOS">IOS</a>的主要竞争者；而在移动设备上，则成为<a href="https://zh.wikipedia.org/wiki/Windows_Embedded_Compact">Windows CE</a>与<a href="https://zh.wikipedia.org/wiki/Palm_OS">Palm OS</a>之外另一个选择。目前流行的<a href="https://zh.wikipedia.org/wiki/TiVo">TiVo</a>数字摄影机使用了经过定制后的Linux。此外，有不少硬件式的<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E5%A2%99">网络防火墙</a>及<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8">路由器</a>，例如部分<a href="https://zh.wikipedia.org/wiki/Linksys">LinkSys</a>的产品，其内部都是使用Linux来驱动、并采用了操作系统提供的防火墙及路由功能。</p>
<h3 id="桌面系统"><a href="#桌面系统" class="headerlink" title="桌面系统"></a>桌面系统</h3><p>Linux桌面软件栈中可见的构件包括<a href="https://zh.wikipedia.org/w/index.php?title=%E6%98%BE%E7%A4%BA%E6%9C%8D%E5%8A%A1%E5%99%A8&action=edit&redlink=1">显示服务器</a>、<a href="https://zh.wikipedia.org/w/index.php?title=%E9%83%A8%E4%BB%B6%E5%BC%95%E6%93%8E&action=edit&redlink=1">部件引擎</a>、和一些更加广为流传的<a href="https://zh.wikipedia.org/wiki/%E9%83%A8%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%AE%B1">部件工具箱</a>。还有些部件对最终用户不可见，包括<a href="https://zh.wikipedia.org/wiki/D-Bus">D-Bus</a>和<a href="https://zh.wikipedia.org/wiki/PulseAudio">PulseAudio</a>。</p>
<p>大多数广泛使用的<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6">自由软件</a>都有Windows平台版本和相应的Linux版本，例如<a href="https://zh.wikipedia.org/wiki/LibreOffice">LibreOffice</a>、<a href="https://zh.wikipedia.org/wiki/Mozilla_Firefox">Mozilla Firefox</a>、<a href="https://zh.wikipedia.org/wiki/Apache_OpenOffice">Apache OpenOffice</a>、<a href="https://zh.wikipedia.org/wiki/Pidgin">Pidgin</a>、<a href="https://zh.wikipedia.org/wiki/VLC">VLC</a>、<a href="https://zh.wikipedia.org/wiki/GIMP">GIMP</a>；部分流行的<a href="https://zh.wikipedia.org/wiki/%E4%B8%93%E6%9C%89%E8%BD%AF%E4%BB%B6">专有软件</a>也有相应的Linux版本，如<a href="https://zh.wikipedia.org/wiki/Adobe_Flash_Player">Adobe Flash Player</a>、<a href="https://zh.wikipedia.org/wiki/Adobe_Reader">Adobe Reader</a>、<a href="https://zh.wikipedia.org/wiki/Google_Earth">Google Earth</a>、<a href="https://zh.wikipedia.org/wiki/Nero_Burning_ROM">Nero Burning ROM</a>、<a href="https://zh.wikipedia.org/wiki/Opera%E9%9B%BB%E8%85%A6%E7%80%8F%E8%A6%BD%E5%99%A8">Opera</a>、<a href="https://zh.wikipedia.org/wiki/Maple">Maple</a>、<a href="https://zh.wikipedia.org/wiki/MATLAB">MATLAB</a>、<a href="https://zh.wikipedia.org/wiki/Skype">Skype</a>、<a href="https://zh.wikipedia.org/wiki/Maya">Maya</a>、<a href="https://zh.wikipedia.org/wiki/SPSS">SPSS</a>、<a href="https://zh.wikipedia.org/wiki/Google_Chrome">Google Chrome</a>。</p>
<p>目前仍有较多能在Windows或Mac OS上运行的应用软件没有Linux的版本，不过在Linux平台上通常可以找到类似功能的应用软件。Linux使用的增多也使得Windows开源软件(Open Source)向Linux移植，比如<a href="https://zh.wikipedia.org/wiki/Filezilla">Filezilla</a>。Linux下也有相当多不能在<a href="https://zh.wikipedia.org/wiki/Windows">Windows</a>平台下运行的软件，主要是依靠<a href="https://zh.wikipedia.org/wiki/X_Window%E7%B3%BB%E7%B5%B1">X窗口系统</a>和其他Windows无法利用的资源，或者是因为稳定性等其他方面的考虑并不准备支持Windows。</p>
<p>另外，相当多的Windows应用程序可以通过<a href="https://zh.wikipedia.org/wiki/Wine">Wine</a>和一些基于Wine的项目如<a href="https://zh.wikipedia.org/wiki/CrossOver">CrossOver</a>正常运行和工作。如<a href="https://zh.wikipedia.org/wiki/Microsoft_Office">Microsoft Office</a>、<a href="https://zh.wikipedia.org/wiki/Adobe_Photoshop">Adobe Photoshop</a>、<a href="https://zh.wikipedia.org/wiki/%E6%9A%B4%E9%9B%AA%E5%A8%9B%E6%A8%82">暴雪娱乐</a>的游戏、<a href="https://zh.wikipedia.org/wiki/Picasa">Picasa</a>其中对于Photoshop的Crossover（Wine）兼容性工作有Disney、DreamWorks、Pixar投资支持，等。<a href="https://zh.wikipedia.org/wiki/Google">Google</a>大力参与Wine项目改进，Picasa的GNU/Linux版本也是经Wine测试的Windows平台编译版本。</p>
<h3 id="服务器、主机和超级计算机"><a href="#服务器、主机和超级计算机" class="headerlink" title="服务器、主机和超级计算机"></a>服务器、主机和超级计算机</h3><p><a href="https://zh.wikipedia.org/wiki/Linux%E5%8F%91%E8%A1%8C%E7%89%88">Linux发行版</a>一直被用来作为服务器的操作系统，并且已经在该领域中占据重要地位。根据2006年9月<a href="https://zh.wikipedia.org/w/index.php?title=Netcraft&action=edit&redlink=1">Netcraft</a>的报告显示，十个最大型的网络托管公司有八个公司在其Web服务器运行Linux发行版。</p>
<p>Linux发行版是构成<a href="https://zh.wikipedia.org/wiki/LAMP">LAMP</a>（Linux操作系统，Apache，MySQL，Perl / PHP / Python）的重要部分，LAMP是一个常见的网站托管平台，在开发者中已经得到普及。</p>
<p>Linux发行版也经常使用作为超级计算机的操作系统，2010年11月公布的超级计算机前500强，有459个（91.8％）运行Linux发行版。曾经是世界上最强大的超级计算机——IBM的红杉（<a href="https://zh.wikipedia.org/wiki/IBM_Sequoia">IBM Sequoia</a>），已于2011年交付<a href="https://zh.wikipedia.org/wiki/%E5%8B%9E%E5%80%AB%E6%96%AF%E5%88%A9%E7%A6%8F%E6%91%A9%E7%88%BE%E5%9C%8B%E5%AE%B6%E5%AF%A6%E9%A9%97%E5%AE%A4">劳伦斯利福摩尔国家实验室</a>，并于2012年6月开始运作，也是选择Linux作为操作系统。</p>
<h3 id="智能移动设备"><a href="#智能移动设备" class="headerlink" title="智能移动设备"></a>智能移动设备</h3><p><a href="https://zh.wikipedia.org/wiki/Android">Android</a>是建基于Linux的操作系统，在<a href="https://zh.wikipedia.org/wiki/%E6%99%BA%E6%85%A7%E5%9E%8B%E6%89%8B%E6%A9%9F">智能手机</a>上相当热门。</p>
<p>在<a href="https://zh.wikipedia.org/wiki/%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA">智能手机</a>、<a href="https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%9D%BF%E9%9B%BB%E8%85%A6">平板电脑</a>等移动设备方面，Linux也得到重要发展，基于Linux内核的<a href="https://zh.wikipedia.org/wiki/Android">Android</a>操作系统已经超越<a href="https://zh.wikipedia.org/wiki/Apple">Apple</a>的<a href="https://zh.wikipedia.org/wiki/IOS">iOS</a>操作系统，成为当今全球最流行的智能手机操作系统。在2010年第三季度，销售全球的全部智能手机中使用<a href="https://zh.wikipedia.org/wiki/Android">Android</a>的占据25.5%（所有的基于Linux的手机操作系统在这段时间为27.6%）。</p>
<p>从2007年起，手机和<a href="https://zh.wikipedia.org/wiki/%E6%8E%8C%E4%B8%8A%E7%94%B5%E8%84%91">掌上电脑</a>上运行基于Linux的操作系统变得更加普遍，例如：<a href="https://zh.wikipedia.org/wiki/%E8%AF%BA%E5%9F%BA%E4%BA%9A_N810">诺基亚 N810</a>、<a href="https://zh.wikipedia.org/wiki/OpenMoko">OpenMoko</a>的Neo1973、摩托罗拉的ROKR E8。<a href="https://zh.wikipedia.org/wiki/Palm">Palm</a>（后来被<a href="https://zh.wikipedia.org/wiki/%E6%83%A0%E6%99%AE">HP</a>公司收购）推出了一个新的基于Linux的<a href="https://zh.wikipedia.org/wiki/WebOS">webOS</a>操作系统，并使用在新生产的Palm Pre智能手机上。</p>
<p><a href="https://zh.wikipedia.org/wiki/MeeGo">MeeGo</a>是诺基亚和英特尔于2010年2月联合推出的基于Linux的操作系统，诺基亚也推出了使用MeeGo操作系统的N9手机。2011年9月28日，继诺基亚宣布放弃开发MeeGo之后，英特尔也正式宣布将MeeGo与LiMo合并成为新的系统<a href="https://zh.wikipedia.org/wiki/Tizen">Tizen</a>。<a href="https://zh.wikipedia.org/wiki/Jolla">Jolla</a> Mobile公司成立并推出了由MeeGo发展而来的<a href="https://zh.wikipedia.org/wiki/Sailfish">Sailfish</a>操作系统。2012年，<a href="https://zh.wikipedia.org/wiki/Mozilla%E5%9F%BA%E9%87%91%E6%9C%83">Mozilla</a>推出基于Linux内核的<a href="https://zh.wikipedia.org/wiki/Firefox_OS">Firefox OS</a>操作系统。</p>
<h3 id="嵌入式设备-5"><a href="#嵌入式设备-5" class="headerlink" title="嵌入式设备[^5]"></a>嵌入式设备[^5]</h3><p><a href="https://zh.wikipedia.org/wiki/Tesla_Model_S">Tesla Model S</a>的基于<a href="https://zh.wikipedia.org/wiki/Ubuntu">Ubuntu</a>的车载<a href="https://zh.wikipedia.org/wiki/%E8%B5%84%E8%AE%AF%E5%A8%B1%E4%B9%90">资讯娱乐</a>系统</p>
<p>Linux的低成本、强大的定制功能以及良好的移植性能，使得Linux在嵌入式系统方面也得到广泛应用。流行的TiVo数字视频录像机还采用了定制的Linux，思科在网络<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a>和<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8">路由器</a>也使用了定制的Linux。Korg OASYS、Korg的KRONOS、雅马哈的YAMAHA MOTIF XS/Motif XF音乐工作站、雅马哈的S90XS/S70XS、雅马哈MOX6/MOX8次合成器、雅马哈MOTIF-RACK XS音源模块，以及Roland RD-700GX数码钢琴均运行Linux。Linux也用于舞台灯光控制系统，如WholeHogIII控制台。</p>
<p>路由器中的开源项目openwrt可以被描述为一个嵌入式的 Linux 发行版</p>
<h2 id="个人思考"><a href="#个人思考" class="headerlink" title="个人思考"></a>个人思考</h2><p>Linux最初是作为支持<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E7%89%B9%E5%B0%94">英特尔</a><a href="https://zh.wikipedia.org/wiki/X86">x86</a>架构的个人电脑的一个自由操作系统。目前Linux已经被移植到更多的计算机<a href="https://zh.wikipedia.org/wiki/%E7%A1%AC%E4%BB%B6">硬件</a>平台，远远超出其他任何操作系统。Linux可以运行在<a href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8">服务器</a>和其他大型平台之上，如<a href="https://zh.wikipedia.org/wiki/%E5%A4%A7%E5%9E%8B%E8%AE%A1%E7%AE%97%E6%9C%BA">大型计算机</a>和<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E7%BA%A7%E8%AE%A1%E7%AE%97%E6%9C%BA">超级计算机</a>。世界上500个最快的超级计算机已100％运行Linux发行版或变种[<a href="https://zh.wikipedia.org/wiki/Linux#cite_note-Top500_OS_list-9">9]</a>。Linux也广泛应用在<a href="https://zh.wikipedia.org/wiki/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F">嵌入式系统</a>上，如<a href="https://zh.wikipedia.org/wiki/%E6%89%8B%E6%9C%BA">手机</a>（Mobile Phone）、<a href="https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%9D%BF%E9%9B%BB%E8%85%A6">平板电脑</a>（Tablet）、<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8">路由器</a>（Router）、<a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E8%A7%86">电视</a>（TV）和<a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E5%AD%90%E6%B8%B8%E6%88%8F%E6%9C%BA">电子游戏机</a>等。在<a href="https://zh.wikipedia.org/wiki/%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87">移动设备</a>上广泛使用的<a href="https://zh.wikipedia.org/wiki/Android">Android</a>操作系统就是创建在Linux内核之上。</p>
<p>通常情况下，Linux被打包成供个人计算机和服务器使用的Linux发行版，一些流行的主流Linux发布版，包括<a href="https://zh.wikipedia.org/wiki/Debian">Debian</a>（及其派生版本<a href="https://zh.wikipedia.org/wiki/Ubuntu">Ubuntu</a>、<a href="https://zh.wikipedia.org/wiki/Linux_Mint">Linux Mint</a>）、<a href="https://zh.wikipedia.org/wiki/Fedora">Fedora</a>（及其相关版本<a href="https://zh.wikipedia.org/wiki/Red_Hat_Enterprise_Linux">Red Hat Enterprise Linux</a>、<a href="https://zh.wikipedia.org/wiki/CentOS">CentOS</a>）和<a href="https://zh.wikipedia.org/wiki/OpenSUSE">openSUSE</a>等。Linux发行版包含Linux内核和支撑内核的实用<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F">程序</a>和库，通常还带有大量可以满足各类需求的应用程序。个人计算机使用的Linux发行版通常包含<a href="https://zh.wikipedia.org/wiki/X_Window">X Window</a>和一个相应的桌面环境，如<a href="https://zh.wikipedia.org/wiki/GNOME">GNOME</a>或<a href="https://zh.wikipedia.org/wiki/KDE">KDE</a>。桌面Linux操作系统常用的<a href="https://zh.wikipedia.org/wiki/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">应用程序</a>，包括<a href="https://zh.wikipedia.org/wiki/Firefox">Firefox</a>网页浏览器、<a href="https://zh.wikipedia.org/wiki/LibreOffice">LibreOffice</a>办公软件、<a href="https://zh.wikipedia.org/wiki/GIMP">GIMP</a>图像处理工具等。由于Linux是自由软件，任何人都可以创建一个符合自己需求的Linux发行版。</p>
<h3 id="正面"><a href="#正面" class="headerlink" title="正面"></a>正面</h3><ul>
<li>开放源代码的Linux可以让知识延续下去，新兴的软件公司可以从开放源代码上快速、低价的创建专业能力，丰富市场的竞争，防止独霸软件巨兽的存在。</li>
<li>个人使用很少有著作权问题，绝大多数都是免费使用，几乎无所谓盗版问题。</li>
<li>新的<a href="https://zh.wikipedia.org/wiki/Linux%E7%99%BC%E8%A1%8C%E7%89%88">Linux发行版</a>大多数软件都有服务器的服务，只要点击就可以自动下载、安装经过认证的软件，不需要到市面购买、安装。</li>
<li>Linux学习的投资有效时间较长。旧版软件、系统都还是存在，有源代码可以派生、分支，维护周期普遍比<a href="https://zh.wikipedia.org/wiki/Windows">Windows</a>长很多。就算被放弃，还是可以凭借源代码派生。新的软件更新发展多样化，容易养成用户习惯掌握原理，而不是养成操作习惯。</li>
<li>强大的<a href="https://zh.wikipedia.org/wiki/Shell">Shell</a>及<a href="https://zh.wikipedia.org/wiki/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80">脚本</a>支持，容易组合出符合需求的环境或创造自动程序。</li>
<li>默认安全设置相对于目前主流的<a href="https://zh.wikipedia.org/wiki/Windows">Windows</a><a href="https://zh.wikipedia.org/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1">操作系统</a>安全很多。Windows操作系统为了非专业用户降低了默认安全性的设置，导致系统容易受到木马、病毒的侵害。<a href="https://zh.wikipedia.org/wiki/%E7%9B%97%E7%89%88">盗版</a>的Windows更糟糕，可能随盗版操作系统捆绑<a href="https://zh.wikipedia.org/wiki/%E7%89%B9%E6%B4%9B%E4%BC%8A%E6%9C%A8%E9%A9%AC_(%E7%94%B5%E8%84%91)">木马</a>、<a href="https://zh.wikipedia.org/wiki/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6">恶意程序</a>，部分默认<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E7%BA%A7%E7%94%A8%E6%88%B7">超级用户</a>（Administrator）登录、关闭安全更新等问题导致安全性更差[^6]。</li>
</ul>
<h3 id="负面"><a href="#负面" class="headerlink" title="负面"></a>负面</h3><ul>
<li><a href="https://zh.wikipedia.org/wiki/BSD">BSD</a>的开发人员曾经批评过Linux内核开发人员过于重视新功能的添加而不是踏踏实实的把代码写好、整理好。</li>
<li><a href="https://zh.wikipedia.org/wiki/Minix">Minix</a>爱好者认为<a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%A0%B8%E5%BF%83">微内核</a>是将来技术发展的方向，Linux在技术上是落伍陈旧的。（参见<a href="https://zh.wikipedia.org/wiki/%E5%A1%94%E8%83%BD%E9%AE%91%E5%A7%86-%E6%89%98%E7%93%A6%E8%8C%B2%E8%BE%AF%E8%AB%96">塔能鲍姆-林纳斯辩论</a>）</li>
<li>软硬件支持性较差。大部分的软、硬件厂商没有或者不会优先开发Linux平台的版本，或者Linux平台的版本功能较少，致使可用的应用程序、硬件周边支持性相较于<a href="https://zh.wikipedia.org/wiki/Windows">Windows</a>、<a href="https://zh.wikipedia.org/wiki/Mac_OS">Mac</a>平台差。</li>
<li>相当多的发行版（超过200个以上），使程序开发者无法针对所有发行版做测试，使用Linux平台的应用软件安装在非主流发行版可能遭遇预料之外的问题或甚至于无法使用。</li>
<li>Linux系统及相关应用软件主要是由<a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E5%AE%A2">黑客</a>等<a href="https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB">程序员</a>及其它Linux爱好者共同合作开发出来的，所以缺少了<a href="https://zh.wikipedia.org/wiki/%E5%95%86%E6%A5%AD%E8%BB%9F%E9%AB%94">商业软件</a>基于商业利益而调整操作界面使之更适合不同用户的行为。对Linux使用方式的不习惯，以及不同软件操作方式缺乏一致性使得用户产生Linux系统难以使用的感受。</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[^1]: 柳东原Linux操作系统简史[D]杭州 浙江大学2009<br>[^2]: 魏红 曾中平Red Hat Linux实用宝典[M]北京：中国铁道出版社2008<br>[^3]: 于巍. <a href="http://tow.cnki.net/kcms/detail/detail.aspx?filename=DZRU201809016&dbcode=CRJT_CJFD&dbname=CRJT_CJFDTOTAL&v=">基于Linux的网络计算机服务器的设计与实现</a>[J]. 电子技术与软件工程. 2018 (09)<br>[^4]: 刘忆智，余柏山，李天峰.等编著.《Linux从入门到精通》.清华大学出版社<br>[^5]: 郭峰. <a href="http://tow.cnki.net/kcms/detail/detail.aspx?filename=SZTJ202006146&dbcode=CRJT_CJFD&dbname=CJFDLAST2020&v=">嵌入式Linux技术及其应用</a>[J]. 数字通信世界. 2020 (06)<br>[^6]: 高晓连.Linux服务器存在的安全问题[J].信息与电脑 (理论版) , 2018 (02) .</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>基于磁流式差速器设计</title>
    <url>/xiaobawang/post/8e6f052f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="基于磁流式差速器设计"><a href="#基于磁流式差速器设计" class="headerlink" title="基于磁流式差速器设计"></a>基于磁流式差速器设计</h1><p><a href="#_Toc71393924">1.概述    1</a></p>
<blockquote>
<p>  <a href="#_Toc71393925">1.1差速器的介绍    1</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393926">1.2磁流式差速器和磁流变液智能材料的介绍    2</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393927">1.2.1 磁流式差速器    2</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393928">1.2.2 磁流变液智能材料    3</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393929">1.3国内与国外磁流式差速器发展状况    3</a></p>
</blockquote>
<p><a href="#_Toc71393930">2.差速器的工作原理    5</a></p>
<blockquote>
<p>  <a href="#_Toc71393931">2.1差速器的工作原理    5</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393932">2.2 差速器扭矩分配方案    5</a></p>
</blockquote>
<p><a href="#_Toc71393933">3．磁流变差速器    6</a></p>
<blockquote>
<p>  <a href="#_Toc71393934">3.1磁流变阻尼器    6</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393935">3.1.1回型式磁流变阻尼器    6</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393936">3.1.2多片式磁流变阻尼器    7</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393937">3.1.3两种磁流变阻尼器的特点    7</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393938">3.2磁流变差速器结构    8</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393939">3.3磁流式差速器工作原理    9</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393940">3.4磁流式差速器的结构设计    10</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393941">3.4.1锁紧系数的调整方法    10</a></p>
</blockquote>
<blockquote>
<p>  <a href="#_Toc71393942">3.4.2磁流变阻尼器的结构尺寸设计    10</a></p>
</blockquote>
<p><a href="#_Toc71393943">结论    14</a></p>
<p><a href="#_Toc71393944">参考文献    15</a></p>
<p><strong>摘 要</strong></p>
<p>磁流式差速器是在一般差速器的基础上增加防滑措施来实现不滑动的一面车轮得到较大的扭矩，合理的分配车轮两侧所需要的扭矩，磁流式差速器较大的提升了车辆的运动性能和平稳性。文中阐述了磁流式差速器的设计过程，通过简单的计算及验证，得到了车辆在直行或者转弯都和一般的差速器工作方式相同，当车辆行驶在过程中或者陷入泥泞，其中一个车轮遇到打滑的状况，此时，磁流式差速器的磁流阻尼装置开始动作(阻尼器处于锁止状态),阻尼装置会将大多数的动力传送给不滑动的一面车轮，处理了的打滑状态。本文提出了磁流式差速器的工作运行的原理，并且提供了磁流阻尼部分的结构设计方法，而且还通过计算验证了方案的可行的。</p>
<p><strong>关键词</strong>：阻尼器；扭矩；摩擦；新型差速器</p>
<p><strong>Abstract</strong></p>
<p>Magnetic flow differential is on the basis of the general differential to<br>increase anti-slip measures to achieve non-sliding wheels to get a larger<br>torque, reasonable distribution of the torque required on both sides of the<br>wheel, magnetic flow differential greatly improve the vehicle’s motion<br>performance and smoothness. This paper expounds the design process of magnetic<br>flow differential, through simple calculation and verification, get the vehicle<br>in the straight or turn are the same as the general differential working method,<br>when the vehicle is driving in the process or into the mud, one of the wheels<br>encountered a slippery situation, at this time, the magnetic flow damping device<br>of the magnetic flow differential starts to move (locking device is locked<br>state), damping device will transfer most of the power to the non-sliding side<br>of the wheel, handling the slippery state. This paper puts forward the working<br>principle of magnetic flow differential, and provides the structural design<br>method of magnetic flow damping part, and also verifies the feasibility of the<br>scheme by calculation. components.</p>
<p><strong>Keywords:</strong> damper; torque; friction; new differential</p>
<p><strong>基于磁流变的差速器的设计</strong></p>
<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h1><h2 id="1-1差速器的介绍"><a href="#1-1差速器的介绍" class="headerlink" title="1.1差速器的介绍"></a>1.1差速器的介绍</h2><p>（1）构成</p>
<p>由行星齿轮、轮架等关键构件组成一般的差速器。动力由发动机和相关设备通过对于的轴传输，传递到差速器的齿轮，轮架因此而运行，行星轮开始运行后，两边的半轴装置马上动作，相应车轮会立刻运行。需得满足以下条件后差速器方能运行：左右两边的半轴的转动速度需要和轮架的运行速度一样，当直行的时候，左右两侧转速相同，遇到弯道时，失去平衡状态，外侧轮子变快，内侧轮子变慢。</p>
<p>（2）原理</p>
<p>差速器对左右两轮转速的调整是自然而然形成的，“最小能耗原理”，说的就是地球上的物体会有朝向能量损失小的情况发展趋势，因此这样调整。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/608ebe3d4b07fb3a6a35f4becd561c1d.png" alt="三维效果"></p>
<p>图1差速器维效果图</p>
<p>当车辆转弯的时候车轮会朝最小的耗能状态通过，左右车轮的转速会根据转矩来改变。拐弯时，车轮内侧会表现特殊的滑拖情形，此刻车轮内侧也会出现滑转的情形，两边车轮会出现相反作用力，由于“最小能耗原理”，两轮会产生转速差，三个部分间的平衡会被打破，且通过半轴传输到相对应的齿轮中，使行星轮自传，这样就使得两边车轮有了不同的转动速度。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/c8252a61c17c693152f8259653cbf761.png"></p>
<p>图2差速器立体结构图</p>
<p>（3）作用</p>
<p>汽车通过弯道时，内外轮子所转过的半径不一样，外轮转过的半径要比内轮转过的半径要大，所以说当转弯的时候外轮的速度要大于内轮的速度。差速器就是为了更好的分配转弯时两边车轮转动速度的不同，这是差速器的最初始的功用，改进之后的差速器，基本都是为了提升汽车的性能。</p>
<p>（4）功能</p>
<p>车辆在通过弯道的时候两边的轮子的转过痕迹是圆弧，汽车在向左转弯时，所运动的轨迹在左边，同时，右边车轮的轨迹比左侧的大，要使行驶足够稳定，就需要两边车轮转动的速度不一样。从而使左右车轮有速度差，就就是差速器的基本特点。</p>
<h2 id="1-2磁流式差速器和磁流变液智能材料的介绍"><a href="#1-2磁流式差速器和磁流变液智能材料的介绍" class="headerlink" title="1.2磁流式差速器和磁流变液智能材料的介绍"></a>1.2磁流式差速器和磁流变液智能材料的介绍</h2><h3 id="1-2-1-磁流式差速器"><a href="#1-2-1-磁流式差速器" class="headerlink" title="1.2.1 磁流式差速器"></a>1.2.1 磁流式差速器</h3><p>通过对一般差速器进行改进就设计了此类装置。磁流变差速器和普通差速器的不同点在于，普通差速器只能平均地分配传动轴的扭矩给车轮，这种新型差速器可以按需要分配扭矩，从而减小车辆动力的消耗，增加通过不确定性路面的可能，提高汽车的适用性，稳定性。其中一侧车轮不需要转矩时会将发动机所输出的转矩全部传递到需要的车轮上，而不造成能量的浪费，通过恰当的扭矩分配可以通过不确定的路面，会使行驶的通过性和稳定性更加好，将会提高汽车的稳定性和车辆的操纵性，完全可以替代普通差速器。</p>
<h3 id="1-2-2-磁流变液智能材料"><a href="#1-2-2-磁流变液智能材料" class="headerlink" title="1.2.2 磁流变液智能材料"></a>1.2.2 磁流变液智能材料</h3><p>磁流变液材料有两种特性：液体和固体，是一种悬浮液且铁基粒子悬浮在其中。当遇到外部磁场时，会有液体变为固体。由于磁流变液材料的屈服强度可以人为控制，所以在土木工程、航空航天领域、汽车等方面应用广泛，主要用于减振吸能和磁流变抛光等方面。</p>
<p>磁流变液的相关特性</p>
<p>根据其相关特性这种材料在工程应用中有很大的应用价值，屈服应力的变化随着外界磁场的变化使磁流变的程度而变化；如果磁流变液体有很好的磁效应，会使其产品的约束会更少，磁流变阻尼器在设计过程中，通过少量的磁液材料就能满足磁流变阻尼器的小型化，外加磁场的强度就会更小，从而减少能量的消耗。但是，在实际中这种材料许多限制，主要表现在磁感应效果方面，比如无磁场情况下的粘度、材料的成本等因素；因此我们需要考虑很多因素设计最优方案；不一样的使用环境也会使磁流变液材料的参数与指标：屈服强度、零场黏度、工作温度以及其耐腐蚀性等等发生变化；以下将对磁流变液的主要技术指标进行分析，以便在实际设计和制造磁流变液器件中正确选择最材料。</p>
<p>这种材料的稳定性，主要体现在团聚结块程度、沉降速度等等。对于这种材料来说里面的粒子主要为可磁化的粒子，这些粒子主要由铁的氧化物和铁的合金组成，但这种材料的密度较大，可是粒子的大小却在微米级别，因此这种材料很容易受到重力的影响如沉降，在静止时，主要成分会沉入到下面，这会使磁流变材料的均匀性、流动性都是变差。此外，由于分布在磁流变载液之中的粒子较小，通常在，较高的表面能会发生团聚现象，可能导致团结为快，材料的均匀性会受到严重影响。</p>
<p>主要需要考虑材料的安全性，由材料的主要组成成分来看，具有磁性的粒子主要有：铁氧体粉，铁粉、铁合金粉和铁粉，承载液体主要有：乙二醇、硅油、水等等，为了提高磁流变性能同时还会添加相应的添加剂。通常情况下，载液如果有涉及汞就必须注意，防止汞的泄露和挥发。</p>
<h2 id="1-3国内与国外磁流式差速器发展状况"><a href="#1-3国内与国外磁流式差速器发展状况" class="headerlink" title="1.3国内与国外磁流式差速器发展状况"></a>1.3国内与国外磁流式差速器发展状况</h2><p>磁流式差速器源于赛车运动，为了提高车辆在高速情况下急拐弯的稳定性所创造的，为了在不同路面上提升稳定性，操作性和抓地力。国外一些机构做了很多的统计，每五年左右差速器方面会有较多的专利出现，从1976-1980有36项发明专利，1981-1985有26项发明专利，1986-1990为80项发明专利，1991-1995发明专利为103项，直到1996-2001到达了111个发明专利。车辆行业在外国发展的比较早，并且在技术上也由相当的优势。由于国外相关技术发展较早，他们在差速器设备领域内有丰富的经验，因此他们的创新技术很完整，例如设计制造了主动控制式设备、转矩感应式设备等等。相较与汽车的性能，此种类型的差速器体现了十分重要的实用价值，不但提高了汽车的操控的稳定性，而且在行车安全方面具有重要的助力。</p>
<p>磁流式差速器产品已经有了相应的应用实现了规模性的生产，70年代初期，英国的一些汽车公司就开发出安装在全轮驱动的汽车上前后传动轴之间的黏性限滑差速器，得到了实际应用。在70年代克莱斯勒汽车公司在其试验车上安装了限滑差速器同时实现了广泛地生产,德国作为汽车行业发展的强国在80年代后期由大众汽车和戴姆勒汽车共同开发制造出了黏性式限滑差速器，使得汽车的性能得到很好的提高，进入到20世纪后期的90年代，应用机械的发展和电子计算机的飞速成长，大型汽车公司对汽车限滑差速器方面的思考也逐渐广泛，这一领域内专利也多了起来，现在伴着新材料技术的快速进步，磁流变液材料技术，这种新型智能材料技术将会和机械密切联系，随着汽车的发展，科学技术的进步，限滑差速器技术也日渐提升，外国的一个公司在磁流变差速器方面也取得了较大的进步，磁流变阻尼器的关键部件，减振器的使用也已经较为完善，主要应用在：凯迪拉克等高端车型。国内在汽车行业到目前已经有了一定的发展，国内汽车产量年年攀升，汽车行业也显露出了欣欣向荣的良好局面，虽然汽车产量在日益蓬勃发展，但是自主品牌的汽车在品质和市场接受程度上与相关合资品牌汽车还是存在相当差距，这就是国内汽车的整体局势。在汽车零部件行业中，国内的情况仍然存在这样的情况，相比于国外的汽车零部件企业有关部门的统计数据显示，目前国内的汽车零部件主要集中在技术密集程度低、附加值低，多为以下附件，如万向节，悬架，同时在手动变速器、发动机等方面，这些产品在我国国内还处于落后水平，生产还构不成一定的规模。我国在限滑差速器这一方面的制造生产还较为落后，其特点主要有研发投入少、产量大、生产企业众多等特点，一些比较高档的限滑差速器还需要进口。</p>
<h1 id="2-差速器的工作原理"><a href="#2-差速器的工作原理" class="headerlink" title="2.差速器的工作原理"></a>2.差速器的工作原理</h1><h2 id="2-1差速器的工作原理"><a href="#2-1差速器的工作原理" class="headerlink" title="2.1差速器的工作原理"></a>2.1差速器的工作原理</h2><p>从结构上观察，差速器主要被分为两边的齿轮部分、两部分齿轮架构。它的功能有功能，车辆遇到高低不平的路面时或者在拐弯的时候，左右车轮产生转速差，两个车轮转速相同并且都是纯滚动。差速器就是对两个车轮转速的不同加以调整，进而使车辆保持整体的稳定。下图3给出了差速器的运行机制。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/6a76c4945e2bad2a9b44a51fb9ad2c22.png"></p>
<p>图3差速器结构示意图</p>
<h2 id="2-2-差速器扭矩分配方案"><a href="#2-2-差速器扭矩分配方案" class="headerlink" title="2.2 差速器扭矩分配方案"></a>2.2 差速器扭矩分配方案</h2><p>在汽车直行时，车辆的动力由传动轴通过齿轮部分传递到环齿轮，此时车辆的行进方向与动力保持相关，环齿轮带动相应齿轮运行，现在两边车轮和行星齿轮时充分啮合的，相应齿轮驱动侧齿轮保持运行，与行星齿轮相连接的齿轮和两侧半轴相连接，因此，车俩会向前行驶。车辆在直行过程中，每个车轮所受到的阻力是相同的，所以行星齿轮在直行的情况下不会自转。当车辆转弯的时候，两边的车轮会产生阻力差，因此在相应的侧齿轮里会产生不同阻力，此时行星齿轮会以自传的方式来改变两侧的不同阻力，受到阻力大的变小，受到阻力小的增加，使得两边的轮子有不同的转速，方便汽车转弯。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/72d7d394a043686156fe0a746fa6decc.png"></p>
<p>图4转弯车轮状态图</p>
<p>(1)左右驱动车轮不存在差速状况</p>
<p>转矩由从变速器传递过来，从相关联的齿轮轴和齿轮在到半轴齿轮等部分，这种结构酷似等臂杠杆，此时半轴齿轮的中尺寸相同，因此，相应的齿轮部分没有自转时，左右两侧车轮的半轴部分会被平均分配转矩。所以说总转矩会被平均的分成两部分，左侧和右侧各占一半。</p>
<p>(2)左右驱动车轮有差速状况</p>
<p>当转矩比S偏大时，此时转矩一边侧半轴的转矩和相干的半轴转矩,两者间构成的数值比为转矩比S,有:S=（一般取S=1.3），</p>
<h1 id="3-磁流变差速器"><a href="#3-磁流变差速器" class="headerlink" title="3.磁流变差速器"></a>3.磁流变差速器</h1><h2 id="3-1磁流变阻尼器"><a href="#3-1磁流变阻尼器" class="headerlink" title="3.1磁流变阻尼器"></a>3.1磁流变阻尼器</h2><p>阻尼是可以使震动的物体或者摩擦产生衰减或阻碍的作用，那些产生运动阻力的“特殊”构件，在结构系统上的会消耗运动能量的部件，通常被称为阻尼器，而阻尼器只是一个普通的构件，在不同的使用环境或者不同的工作环境之中会产生不同的阻尼性能，缓冲器：主要用在防震方面，在速度较低的时候可以移动，在加速度或者速度很大并且超过限定值时产生锁死，达到刚性支撑，以达到安全可靠的缓冲作用。震器：主要用在减震。</p>
<h3 id="3-1-1回型式磁流变阻尼器"><a href="#3-1-1回型式磁流变阻尼器" class="headerlink" title="3.1.1回型式磁流变阻尼器"></a>3.1.1回型式磁流变阻尼器</h3><p>回型式磁流变阻尼器的结构如下图：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/4fd12045197da6e45d48fe0d0be2464f.png"></p>
<p>图5回型式截面图</p>
<p>该结构中，A、B 两回型板之间通过 C 深沟球轴承连接，A、B<br>板之间就可以相互自由旋转，它们之间充满了适量的磁流变液材料，通过改变励磁磁场的大小来使得磁流变液产生不同的屈服应力，屈服应力大小的改变就可以使旋转阻尼力的发生改变。</p>
<h3 id="3-1-2多片式磁流变阻尼器"><a href="#3-1-2多片式磁流变阻尼器" class="headerlink" title="3.1.2多片式磁流变阻尼器"></a>3.1.2多片式磁流变阻尼器</h3><p>多片式磁流变阻尼器在功能效果上与回型式阻尼器相同，但是其结构存在差异，通常来说，与普通硅油式黏性联轴器的结构大致相同，如图所示。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/fe78c2f15377a9001a7f0b13ebd654f0.png"></p>
<p>图6多片式结构模型</p>
<p>多片式结构中在一般工况下，靠阻尼器内外壳之间的转速差对该模型内部的磁流变材料进行摩擦剪切，从而产生相应的阻尼力矩。</p>
<h3 id="3-1-3两种磁流变阻尼器的特点"><a href="#3-1-3两种磁流变阻尼器的特点" class="headerlink" title="3.1.3两种磁流变阻尼器的特点"></a>3.1.3两种磁流变阻尼器的特点</h3><p>以上两种磁流变阻尼器的结构都是通过剪切磁流变材料产生阻尼力，由阻尼力而产生相应的阻尼力矩，相比于摩擦力矩，磁流变产生的阻尼力矩有更多的优点：</p>
<p>（1）能够极大的减小摩擦，延长产品的寿命。</p>
<p>（2）旋转阻尼力矩的不同可以通过适当调整外加激励磁场的强度来改变。</p>
<p>可磁流变液旋转阻尼器也存在其弊端，当在长时间工作之后，会使磁流变材料的温度升高而使磁流变材料性能受到影响，所以磁流变液的载液必须满足能承受高温的要求。下面分别介绍两种阻尼器的缺点。</p>
<p>（1）回型式磁流变阻尼器</p>
<p>为了获得更大的阻尼力矩，通常采用更大的径向尺寸，应用在汽车差速器上会增大差速器的径向尺寸，较大的差速器尺寸对汽车通过性是不利的。同时，由于磁流变的工作原理所致，在工作的过程中也会产生相应的热量，其内部压力也会明显增大，在回型旋转阻尼器内部轴向会有更大的压力，这样对阻尼器的防泄漏和正常工作都是不利的，所以回型旋转阻尼器在结构上的特点，需要我们更好的去解决其密封和发热的问题，应用在车用差速器上还不能很好地实现。</p>
<p>（2）多片式磁流变阻尼器</p>
<p>对于多片式旋转阻尼器，在工作的过程中，随着温度升高会造成其内部温度升高，从而就造成了磁流变液的体积膨胀，体积的膨胀会造成阻尼器内部的压力过高，这时磁流变的旋转叶片在磁流变液压力的作用会发生相互摩擦，所以其内摩擦力矩会增加，磁流变液的剪切率有所降低，就会使得磁流变阻尼器的内部温度有所下降，这对阻尼器内部的磁流变液的寿命起到了一定的保护作用，整个过程与粘性联轴器的“驼峰现象”有一定的类似。在结构尺寸上来讲，多片旋转阻尼器的轴向尺寸可以较大，径向尺寸可以变得较小，这样更加利于提高汽车的离地间隙，提高汽车的通过性。</p>
<p>综上所述，为了将磁流变液应用在汽车差速器上，结合工作环境和相应的特性要求，多片式旋转阻尼器更适合于汽车差速器的应用。</p>
<h2 id="3-2磁流变差速器结构"><a href="#3-2磁流变差速器结构" class="headerlink" title="3.2磁流变差速器结构"></a>3.2磁流变差速器结构</h2><p>磁流变后的差速器结构图</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/4e795e4881c0c034b3307a33acc5e346.png"></p>
<p>图7新型磁流变差速器结构图</p>
<p>1-差速器壳左盖 2-差速器壳连接螺钉 3-差速器壳 4-左半轴齿轮 5-差速器行星齿轮<br>6-磁流变液阻尼器壳 7-励磁线圈 8-磁流变阻尼器外板 9-磁流变阻尼器内板<br>10-阻尼器右盖 11-J 型密封垫 12-J 型橡胶密封圈 13-J 型密封盖 14-J 型橡胶密封圈<br>15-半轴齿轮黄铜衬套 16-行星齿轮轴</p>
<p>如图，由于差速器壳外还需安装主减速器的大齿圈，所以差速器与驱动车桥必须通过圆锥滚子轴承装配。在差速器壳里面，行星齿轮（5）与行星齿<br>轮轴（16）通过黄铜衬套和黄铜衬垫装配，半轴齿轮（15）通过黄铜衬套与差速器壳（3）装配，同时半轴齿轮还要加工出内花键与半轴装配。磁流变阻尼器<br>壳（6）与差速器壳（3）通过螺栓连接，阻尼器与差速器壳之间通过 J<br>型密封隔开，这样就解决了磁流变液材料泄露的问题</p>
<h2 id="3-3磁流式差速器工作原理"><a href="#3-3磁流式差速器工作原理" class="headerlink" title="3.3磁流式差速器工作原理"></a>3.3磁流式差速器工作原理</h2><p>磁流变差速器，在结构上与普通差速器之间增加了额外的磁流变阻尼器，这样当差速器发生打滑的时候其摩擦力矩就可以分成两部分：一部分是通过半轴齿轮和行星齿轮与差速器壳之间的库伦摩擦，另一部分就可以为磁流变阻尼器之间相对转动而产生的阻力力矩，由于库伦摩擦和磁流变液的剪切表现出来的都是耗散力，所以差速器摩擦力矩可以有以下表示：</p>
<p>（1）</p>
<p>汽车在普通的马路上直行时，车轮的角速度相同，车辆两边车轮无相对运动，左右半轴齿轮的转速相等，同时与主减速器的转速相同即：</p>
<p>（2）</p>
<p>由于左右两侧车轮没有相对转动，所以差速器没有发生打滑，差速器内部的行星齿轮没有自转,即，仅仅做角速度大小与差速器壳相等的转动。这样的话，与半轴径向固定的磁流变阻尼器外板与磁流变阻尼器内板直接就不会发生剪切，这样实现了与普通差速器相同的功能。</p>
<p>当其中在转弯的时候，由于车身发生转向的缘故，会产生相应的转向力矩，来自路面的转向力会使驱动轮左右两侧受到的力大小不同，这样就会作用到左右半轴上，由于左右两侧受到的力大小不等，因此就在行星齿轮上面形成了一个使其旋转的力矩,该力矩就会使行星齿轮由静止发生转动，转动的过程中左右半轴齿轮和行星齿轮都会与差速器壳上的黄铜衬套发生摩擦这样就构成了，同时由于差速器右侧的半轴与磁流变阻尼器在径向是固定装配的，由于行星齿轮发生转动时候，左右半轴齿轮与差速器壳之间的速度大小各不相等，所以这样阻尼器内外板之间就会发生相应的剪切，就会产生阻尼力矩，当稳定的时候就可以与来自路面的力矩与摩擦力矩和阻尼力矩平衡。</p>
<p>对于一般情况下的正常转弯行驶，磁流变差速器就可以有以上的工作情况，<br>但是当汽车行驶在泥泞打滑的路面行驶的时候，会存在不同路面的附着系数大小不同，这样就会造成左右侧车轮受到的驱动力大小不等，所以就会使汽车差速器打滑，这样的打滑对汽车的通过性是不利的。对于这样的情况下，由于左右车轮的附着系数不一样，为了更好地利用附着系数大的一侧车轮的附着力，就必须提高差速器的摩擦阻力力矩来获得较高的转矩比，这时就可以让励磁线圈通电，来改变磁流变液的物理特性。</p>
<h2 id="3-4磁流式差速器的结构设计"><a href="#3-4磁流式差速器的结构设计" class="headerlink" title="3.4磁流式差速器的结构设计"></a>3.4磁流式差速器的结构设计</h2><h3 id="3-4-1锁紧系数的调整方法"><a href="#3-4-1锁紧系数的调整方法" class="headerlink" title="3.4.1锁紧系数的调整方法"></a>3.4.1锁紧系数的调整方法</h3><p>磁流变差速器不同于普通汽车差速器的之处在于它能够实现不同工况下有不同的摩擦力矩，实现摩擦阻尼力矩的变化，特别是在差速器防滑这一点比普通差速器性能更好，普通圆锥行星齿轮差速器为了获得相应的摩擦力矩，通常普通差速器靠左右半轴齿轮与其装配的黄铜衬套的摩擦和行星齿轮与差速器壳之间的摩擦来构成差速器的摩擦力矩防滑系数即锁紧系数一般在转矩分配系数一般这样的差速器在兼顾汽车操作性和通过性的时候是可以满足的。</p>
<p>查阅资料得出磁流变差速器内部的摩擦力矩的计算表达式：</p>
<blockquote>
<p>  (3)</p>
</blockquote>
<p>锁紧系数的表达式：</p>
<p>(4)</p>
<p>普通差速器的锁紧系数和转矩分配系数都是受摩擦力矩的限制而不能变化的，但是磁流变差速器的摩擦力矩可以由半轴齿轮的摩擦及磁流变阻尼器的阻尼力矩构成，磁流变液材料会使磁流变阻尼器改变磁场强度，从而改变材料的特性，这能够改变磁流变阻尼器的阻尼力矩，相应的就改变了锁紧系数，这样与普通机械式锁止差速器的区别在于磁流变差速器的锁紧系数可以在一定范围内通过改变磁场强度来变化，这样就成为了一种可变锁紧系数的差速器。</p>
<h3 id="3-4-2磁流变阻尼器的结构尺寸设计"><a href="#3-4-2磁流变阻尼器的结构尺寸设计" class="headerlink" title="3.4.2磁流变阻尼器的结构尺寸设计"></a>3.4.2磁流变阻尼器的结构尺寸设计</h3><p>磁流变阻尼器的内摩擦片的结构图如下：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/a74bf0de4b7bcb73dc1742c9131e0a15.png"></p>
<p>图8阻尼器内摩擦盘结构图</p>
<p>因为内摩擦盘与外摩擦盘之间充满了磁流变液材料，所以圆盘左右两面都会与磁流变材料发生摩擦。由磁流变差速器原理图可以看出，径向定位A面主要承担着由两个摩擦面与磁流变之间产生的摩擦力矩。所以初步选取摩擦片与半轴之间采取平键连接，根据相关文献《机械设计手册》，由于原先选取的差速器样机的轴颈大小为=20，我们选取<br>B 型平键，其尺寸大小和相关参数如下表所示：</p>
<p>（表1）B型键的相关参数</p>
<table>
<thead>
<tr>
<th>平键类型</th>
<th>B</th>
<th>H</th>
<th>L</th>
<th>许用应力</th>
</tr>
</thead>
<tbody><tr>
<td>B</td>
<td>6</td>
<td>6</td>
<td>43</td>
<td>120Mpa</td>
</tr>
</tbody></table>
<p>根据上面里面的结构图可以确定键长L=43，根据差速器的工作情况选取轻微冲击时许用应力选取键、轴、毂三者中许用应力的最小值。因为摩擦片材料初步选取<br>20钢，所以其许用应力=120Mpa，取磁流变阻尼器在工作极限时传递的总的矩大小为<br>840NM，经过相应计算后得到的结果其应力大小大于许用应力，所以不能许用B型平键作为传动，所以采用花键连接的连接方式。</p>
<p>根据相关标准选取小径大小为d=23，花键规格为6x23x26x6的A型花键作为初选型号，由这样的型号标准，对其进行强度校核，校核过程及结果如下：</p>
<p>按公式 进行校核，计算转矩</p>
<p>是每个齿载荷分配不均匀系数，取0.8；</p>
<p>Z是花键的齿数，数值取6；</p>
<p>L是键齿的工作长度，暂定大小L =80；</p>
<p>H是花键齿侧的高度，,C为倒角，所以h的大小为 1.1；</p>
<p>为花键平均半径，为12.25；</p>
<p>代入公式计算</p>
<p>由于磁流变阻尼器工作环境良好，同时花键表面经过齿面处理后其许用应力<br>取200Mpa，磁流变阻尼器内摩擦片同样也采用20CrMnTi的合金钢材料，所以这样的设计是可以满足极限情况下的摩擦转矩的扭转条件的，其结构尺寸模型可见下图</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/0ace95c10a72b1edf0cb084e2d5a4ff8.png"></p>
<p>图9内摩擦板结构尺寸模型</p>
<p>对于磁流变阻尼器外摩擦片的设计可以依据内摩擦片结构进行设计，首先选其材料为20CrMnTi的合金材料，磁流变阻尼器的外摩擦片与阻尼器外壳镶嵌安装其结构如图</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/HDS9528/image@main/PC/%E6%96%87%E7%AB%A0/bc543dcfaf8ff24807082506c2e09ddc.png"></p>
<p>图10阻尼器外摩擦片结构图</p>
<p>当差速器工作时即内外盘之间存在剪切，外盘也会受到相应的与磁流变材料发生摩擦产生的力矩，由上述所得到的计算转矩，所以单个外摩擦片受到的摩擦力矩为，大小为<br>180NM,对外摩擦片周向定位进行校核，仍然按照以上公式校核，其过程结果如下：</p>
<p>(5)</p>
<p>(6)</p>
<p>经过计算后，其应力大小满足相应的许用应力，因此该设计是可行的。</p>
<p><strong>结论</strong></p>
<p>本文对磁流变差速器进行了研究。了解了普通差速器的发展历程以及不足之处，在深入的学习了差速器实现差速的工作原理和扭矩的分配情况之后，提出了磁流变差速器的简单构想，参考了国内与国外磁流式差速器的发展情况。查阅了磁流变液智能材料的相关特性和差速器的结构。计划在传动轴上加装磁流变阻尼器，从而使汽车在现有功能不变的基础上实现不打滑的设想。在此基础上引入了两种磁流式阻尼器，回型式磁流变阻尼器和多片式磁流变阻尼器，了解了两种磁流变阻尼器的都是通过剪切磁流变材料产生阻尼力，由阻尼力而产生相应的阻尼力矩。之所以选择阻尼力矩而不选择摩擦力矩，主要是因为阻尼力矩能够极大的减小摩擦，延长产品的寿命。考虑到两种磁流变阻尼器的结构特点及工作环境选用了多片式磁流变阻尼器，继而设计了磁流变差速器的结构并且阐述了其工作原理，通过计算锁紧系数和转矩分配系数实现了可变锁紧系数的差速器。现场观察了汽车差速器在汽车上的的结构之后，查阅了机械设计手册之后设计了磁流变阻尼器的结构尺寸。经过简单计算确定此方案是可行的。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol>
<li><p>盛德号 封素敏 李洪 王志 . 摩擦片式防滑差速器转矩特性对汽车操纵稳定性的影响研<br> [J].汽车技术 ,2012,04:29-32.</p>
</li>
<li><p>盛德号 王志.硅油式防滑差速器特性对汽车操纵性能的影响研究 [J]. 机械传动<br> ,2012,08:96-100.</p>
</li>
<li><p> 毛啸滇.防滑差速器的应用研究 [D]. 合肥工业大学.2006.</p>
</li>
<li><p> 范仲伟.制动介入式防滑差速系统控制策略研究 [ D].武汉理工大学.2008.</p>
</li>
<li><p> 韩伟.基于限滑差速器的汽车性能仿真与试验研究 [ D].吉林大学.2013.</p>
</li>
<li><p> 盛阳.半开放式差速器的原理及结构优势的探讨[J].时代汽车,2021(03):142-144.</p>
</li>
<li><p> 武楠楠.新型差速器结构分析和动态仿真的研究[D].太原科技大学,2013.</p>
</li>
<li><p> 吴明. 自适应机械锁式防滑差速器的仿真与研究[D].湖南大学,2014.</p>
</li>
<li><p> 王秋平. 汽车差速器的建模与强度分析[D].东北大学,2014.</p>
</li>
<li><p>王晓怡. 车用直齿圆柱齿轮轮间差速器设计与性能分析[D].辽宁工业大学,2015.</p>
</li>
<li><p>韩兆东. 托森型差速器的设计与性能分析[D].辽宁工业大学,2015.</p>
</li>
<li><p>赵宁,孙向轩,蔺彦虎,郭志强.直齿圆柱齿轮差速器运动学与动力学分析仿真[J].计算机仿真,2012,29(08):344-348.</p>
</li>
<li><p>陈作炳,柳刚,程海斌,汤帅.磁流变限滑差速器摩擦片组的性能分析[J].汽车工程师,2016(04):31-34.</p>
</li>
<li><p>柳刚. 磁流变限滑差速器的研究与开发[D].武汉理工大学,2016.</p>
</li>
<li><p>陈明. 自适应离心式机械摩擦阻尼传动系统设计[D]. 机械传动, 2012.</p>
</li>
<li><p>孙娜娜. 矿用磁流变阻尼器的设计与研究[D]. 中国矿业大学, 2018.</p>
</li>
<li><p>叶碧锋 张倩. 核电厂阻尼器的选型及应用[D]. 中国核电工程有限公司郑州分公司,<br>2010.</p>
</li>
<li><p>程海斌. 磁流变液的稳定性调控及其在重大工程中应用[D]. 武汉理工大学, 2012.</p>
</li>
<li><p>周峰. 磁流变液的制备及其稳定性研究[D]. 上海工程技术大学, 2016.</p>
</li>
<li><p>胡国良 张佳伟. 磁流变阻尼器结构优化设计研究现状[D]. 机床与液压, 2019.</p>
</li>
</ol>
<p><strong>致谢</strong></p>
<p>我要感谢高老师对我的教导。从选题、构思、总体方案设计、寻找相关资料、写作到最后稿，高老师给予了我细致的指导和热情的帮助。当我在写论文的过程中遇到问题时，高老师耐心地对我进行了解释和指导，对我的需求做出了更好的反应。高老师卓越的工作作风和坚实的理论基础使我受益匪浅。</p>
<p>此外，我还要感谢我的朋友和同学们在准备论文方面的大力支持和帮助，这给我带来了很大的启发。我还要感谢参考文献中的作者。通过他们的研究文章，我对这个研究课题有了一个很好的起点。</p>
<p>最后，谢谢你的辛勤工作。我衷心感谢我的家人、朋友和同学们的鼓励和支持，使我能够顺利完成这篇论文。祝老师身体健康，工作顺利。</p>
]]></content>
      <categories>
        <category>课程设计</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>我的hexo博客美化之路</title>
    <url>/xiaobawang/post/21a7606d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="公告板图片"><a href="#公告板图片" class="headerlink" title="公告板图片"></a>公告板图片</h1><ol>
<li>效果图：</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/GIF123.gif"></p>
<ol start="2">
<li>在主题配置文件**_config.ym**中搜索card_announcement，使用img标签引用图片</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">card_announcement:</span>       <span class="comment">#侧边栏公告</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">content:</span> <span class="string">&lt;center&gt;欢迎来到我的博客！&lt;/center&gt;</span> <span class="string">&lt;center&gt;&lt;img</span> <span class="string">src=&quot;/img/图片合集/GIF.gif&quot;&gt;&lt;/center&gt;</span>      <span class="comment">#&lt;center&gt;居中显示&lt;/center&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="页脚美化"><a href="#页脚美化" class="headerlink" title="页脚美化"></a>页脚美化</h1><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421192646852.png"></p>
<ol>
<li>JS代码：(在source文件夹js文件夹下自定义一个js文件拷贝下面代码并粘贴)</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;.framework-info&#x27;</span>).html(<span class="string">&#x27;本站已运行&lt;SPAN id=span_dt_dt style=&quot;color: #fff;&quot;&gt;&lt;/SPAN&gt;&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_date_time</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="string">&quot;show_date_time()&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">    BirthDay=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&quot;5/2/2020 0:0:0&quot;</span>);</span><br><span class="line">    today=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    timeold=(today.getTime()-BirthDay.getTime());</span><br><span class="line">    sectimeold=timeold/<span class="number">1000</span></span><br><span class="line">    secondsold=<span class="built_in">Math</span>.floor(sectimeold);</span><br><span class="line">    msPerDay=<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span></span><br><span class="line">    e_daysold=timeold/msPerDay</span><br><span class="line">    daysold=<span class="built_in">Math</span>.floor(e_daysold);</span><br><span class="line">    e_hrsold=(e_daysold-daysold)*<span class="number">24</span>;</span><br><span class="line">    hrsold=<span class="built_in">Math</span>.floor(e_hrsold);</span><br><span class="line">    e_minsold=(e_hrsold-hrsold)*<span class="number">60</span>;</span><br><span class="line">    minsold=<span class="built_in">Math</span>.floor((e_hrsold-hrsold)*<span class="number">60</span>);</span><br><span class="line">    seconds=<span class="built_in">Math</span>.floor((e_minsold-minsold)*<span class="number">60</span>);</span><br><span class="line">    span_dt_dt.innerHTML=<span class="string">&#x27; &lt;font style=color:#2d85f0&gt;&#x27;</span>+daysold+<span class="string">&#x27;&lt;/font&gt; 天 &lt;font style=color:#f4433c&gt;&#x27;</span>+hrsold+<span class="string">&#x27;&lt;/font&gt; 时 &lt;font style=color:#ffbc32&gt;&#x27;</span>+minsold+<span class="string">&#x27;&lt;/font&gt; 分 &lt;font style=color:#0aa858&gt;&#x27;</span>+seconds+<span class="string">&#x27;&lt;/font&gt; 秒&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    show_date_time();</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>把代码中的new Date()修改成自己网站搭建的时间（月/日/年 时:分:秒）</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421193217718.png"></p>
<p>打开主题配置文件**_config.yml**引入JS</p>
<ol>
<li>定位inject属性</li>
<li>其中head用于引入css，bottom用于引入js</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421193443396.png"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/zidingyi.js&quot;&gt;&lt;/script&gt;</span>         <span class="comment">#zidingyi.jss 是你的创建的文件的文件名</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>引入css和js有两种方式，分别是相对路径引入和外链引入。相对路径就是把文件放在主题文件夹的source目录的css文件夹和js文件夹下，外链就是使用文件的外链地址。</li>
</ol>
<h1 id="头像背景"><a href="#头像背景" class="headerlink" title="头像背景"></a>头像背景</h1><ol>
<li>效果图：(彩带)</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421201942379.png"></p>
<ol start="2">
<li>CSS代码：（在source文件夹css文件夹下自定义一个css文件拷贝下面代码并粘贴我的为custom.css）</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 彩带 *&#x2F;</span><br><span class="line">.card-info-avatar:hover &#123;</span><br><span class="line">  background: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;rigodlee&#x2F;BLOGCDN&#x2F;img&#x2F;H3342af90d24b4d62b9bbfec9688ccc25M.gif);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 花 *&#x2F;</span><br><span class="line">&#x2F;* .card-info-avatar:hover &#123;</span><br><span class="line">  background: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;rigodlee&#x2F;BLOGCDN&#x2F;img&#x2F;20200530181856.gif);</span><br><span class="line">&#125; *&#x2F;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>打开主题配置文件**_config.yml<strong>引入</strong>css**<ol>
<li> 定位inject属性</li>
<li>其中head用于引入css，bottom用于引入js</li>
</ol>
</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422090907215.png"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span>   <span class="comment">#自定义样式</span></span><br></pre></td></tr></table></figure>

<p>注意格式！！！</p>
<h1 id="每页单独配置背景图"><a href="#每页单独配置背景图" class="headerlink" title="每页单独配置背景图"></a>每页单独配置背景图</h1><ol>
<li>修改 <code>[Blog]\themes\butterfly\layout\includes\layout.pug</code></li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421213841377.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  if theme.background</span><br><span class="line">-   #web_bg</span><br><span class="line">+   if page.background</span><br><span class="line">+     #web_bg(style&#x3D;&#96;background:&#96;+ page.background + &#96;;background-attachment: local;background-position: center;background-size: cover;background-repeat: no-repeat;&#96;)</span><br><span class="line">+   else</span><br><span class="line">+     #web_bg</span><br></pre></td></tr></table></figure>

<p>注意格式！！！！</p>
<ol start="2">
<li>这里还要把<code>#web_bg</code> 加到 <code>pjax</code> 选择器中。修改 <code>[Blogroot]\themes\butterfly\layout\includes\third-party\pjax.pug</code></li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421214310740.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  script(src&#x3D;url_for(theme.CDN.pjax))</span><br><span class="line">  script.</span><br><span class="line">    let pjaxSelectors &#x3D; [</span><br><span class="line">      &#39;title&#39;,</span><br><span class="line">      &#39;#config-diff&#39;,</span><br><span class="line">      &#39;#body-wrap&#39;,</span><br><span class="line">      &#39;#rightside-config-hide&#39;,</span><br><span class="line">      &#39;#rightside-config-show&#39;,</span><br><span class="line">+     &#39;#web_bg&#39;,</span><br><span class="line">      &#39;.js-pjax&#39;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>如此即可在每个页面的 <code>markdown</code> 文件的 <code>front-matter</code> 中使用 <code>background</code> 配置项单独配置页面背景了，不写或留空则使用主题配置文件中的默认背景。</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 测试</span><br><span class="line">author: 黑皇</span><br><span class="line">tags: []</span><br><span class="line">categories: []</span><br><span class="line"></span><br><span class="line">aplayer: true</span><br><span class="line"></span><br><span class="line">background: url(https://gitee.com/ABCHDS/drawing-bed/raw/master/img/20210421163407.png)</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210421214605840.png"></p>
<h1 id="页脚振翅蝴蝶动效"><a href="#页脚振翅蝴蝶动效" class="headerlink" title="页脚振翅蝴蝶动效"></a>页脚振翅蝴蝶动效</h1><ol>
<li>本站页脚的振翅蝴蝶使用了 <code>iconfont</code> 的 <code>symbol</code> 引入方案，引入了彩色蝴蝶图标。因此使用本改动需要先学习： <code>Hexo 引入阿里矢量图标库</code></li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422094800738.png"></p>
<ol start="2">
<li>引入相应的图标资源，修改主题配置<code>_config.yml</code>，在 <code>inject</code> 配置项添加图标库 js。此处为我的图标库链接，掌握<code>Hexo 引入阿里矢量图标库</code>后可以改成自己的。</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422093659897.png"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span>   <span class="comment">#自定义样式</span></span><br><span class="line">      <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  <span class="comment">#音乐播放器</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;5311512128&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-mini=&quot;true&quot;</span> <span class="string">data-listFolded=&quot;false&quot;</span> <span class="string">data-order=&quot;random&quot;</span> <span class="string">data-preload=&quot;auto&quot;</span> <span class="string">data-autoplay=&quot;true&quot;</span> <span class="string">data-mutex=&quot;true&quot;</span> <span class="string">muted&gt;&lt;/div&gt;</span> <span class="comment">#音乐播放器</span></span><br><span class="line">  <span class="comment"># 阿里矢量图标</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;//at.alicdn.com/t/font_2489793_93pojqf8myc.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="comment">#页脚网站运行时间</span></span><br><span class="line">  <span class="comment">#- &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="comment">#- &lt;script src=&quot;/js/zidingyi.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>新建 <code>[Blog]\themes\butterfly\source\css\custom.css</code>, 在里面添加图标默认样式和振翅蝴蝶动画。（css前边已经引入了就不在赘述）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>; <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">/* 页脚蝴蝶振翅动画 */</span></span><br><span class="line"><span class="selector-class">.copyright</span> svg&#123;</span><br><span class="line">  <span class="attribute">animation</span>:butterfly <span class="number">1s</span> linear infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> butterfly &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> #将图标名字改为你的我的是butterfly</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>替换 <code>[Blog]\themes\butterfly\layout\includes\footer.pug</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#footer-wrap</span><br><span class="line">  if theme.footer.owner.enable</span><br><span class="line">    - var now &#x3D; new Date()</span><br><span class="line">    - var nowYear &#x3D; now.getFullYear()</span><br><span class="line">    if theme.footer.owner.since &amp;&amp; theme.footer.owner.since !&#x3D; nowYear</span><br><span class="line">      .copyright</span><br><span class="line">          span!&#x3D; &#96;&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125;&#96;</span><br><span class="line">          svg(style&#x3D;&quot;width:1.5em; height:1.5em&quot; aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">            use(xlink:href&#x3D;&quot;#Butterfly&quot;)</span><br><span class="line">          span!&#x3D; &#96;$&#123;config.author&#125;&#96;</span><br><span class="line">    else</span><br><span class="line">      .copyright</span><br><span class="line">        span!&#x3D; &#96;&amp;copy;$&#123;nowYear&#125;&#96;</span><br><span class="line">        svg(style&#x3D;&quot;width:2em; height:1em&quot; aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">          use(xlink:href&#x3D;&quot;#Butterfly&quot;)</span><br><span class="line">        span!&#x3D; &#96;$&#123;config.author&#125;&#96;</span><br><span class="line"></span><br><span class="line">  if theme.footer.copyright</span><br><span class="line">    .framework-info</span><br><span class="line">      span&#x3D; _p(&#39;footer.framework&#39;) + &#39; &#39;</span><br><span class="line">      a(href&#x3D;&#39;https:&#x2F;&#x2F;hexo.io&#39;)&#x3D; &#39;Hexo&#39;</span><br><span class="line">      span.footer-separator |</span><br><span class="line">      span&#x3D; _p(&#39;footer.theme&#39;) + &#39; &#39;</span><br><span class="line">      a(href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly&#39;)&#x3D; &#39;Butterfly&#39;</span><br><span class="line">  if theme.footer.custom_text</span><br><span class="line">    .footer_custom_text!&#x3D;&#96;$&#123;theme.footer.custom_text&#125;&#96;</span><br></pre></td></tr></table></figure>

<center>注意图标名换成你自己的，注意格式！！！</center>

<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>无需修改 butterfly 主题源文件即可实现主题功能的魔改。<br>通过 npm 进行安装和使用。</p>
<h3 id="hexo-electric-clock-电子时钟插件"><a href="#hexo-electric-clock-电子时钟插件" class="headerlink" title="hexo-electric-clock 电子时钟插件"></a>hexo-electric-clock 电子时钟插件</h3><ol>
<li>效果如下：</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422150049526.png"></p>
<ol start="2">
<li>NPM 插件安装的部署方法(在博客根目录下执行)：</li>
</ol>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm i hexo-electric-clock --save</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>注意，一定要加 <code>--save</code>，不然本地预览的时候可能不会显示！！！</p>
</li>
<li><p>新增网站根目录_config 配置项</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">electric_clock:</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span>        <span class="comment">#插件的叠放顺序，数字越大，叠放约靠前。</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>       <span class="comment">#是否开启插件</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span>   <span class="comment">#all 代表全局开启。如 / 代表主页。</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">temple_html:</span> <span class="string">&#x27;&lt;div class=&quot;card-widget card-clock&quot;&gt;&lt;div class=&quot;card-glass&quot;&gt;&lt;div class=&quot;card-background&quot;&gt;&lt;div class=&quot;card-content&quot;&gt;&lt;div id=&quot;hexo_electric_clock&quot;&gt;&lt;img id=&quot;card-clock-loading&quot; src=&quot;https://cdn.jsdelivr.net/gh/Zfour/Butterfly-clock/clock/images/weather/loading.gif&quot; style=&quot;height: 120px; width: 100%;&quot; data-ll-status=&quot;loading&quot; class=&quot;entered loading&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br></pre></td></tr></table></figure>

<center>最后记得hexo三连，否则看不到效果哦！！！</center>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<h3 id="hexo-githubcalendar-插件"><a href="#hexo-githubcalendar-插件" class="headerlink" title="hexo-githubcalendar 插件"></a>hexo-githubcalendar 插件</h3><p>效果展示：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422163222258.png"></p>
<h4 id="NPM-插件安装的部署方法："><a href="#NPM-插件安装的部署方法：" class="headerlink" title="NPM 插件安装的部署方法："></a>NPM 插件安装的部署方法：</h4><p>在博客根目录下执行</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure>

<p>注意，一定要加<code>--save</code>，不然本地预览的时候可能不会显示！！！</p>
<h4 id="新增网站根目录-config-配置项"><a href="#新增网站根目录-config-配置项" class="headerlink" title="新增网站根目录_config 配置项"></a>新增网站根目录_config 配置项</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422163958161.png"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">githubcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>         <span class="comment">#是否开启插件</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span>      <span class="comment">#如 / 代表主页。/me/代表自我介绍页等等</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">abchds</span>                 <span class="comment">#你的 github 或者 gitee 用户名</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">githubcalendar_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height:auto;padding:10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  <span class="attr">pc_minheight:</span> <span class="string">280px</span>                   <span class="comment">#电脑端插件的最小高度，减少加载带来的视觉偏移</span></span><br><span class="line">  <span class="attr">mobile_minheight:</span> <span class="string">0px</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot;</span></span><br><span class="line">  <span class="comment">#api: https://python-github-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://python-gitee-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="attr">calendar_js:</span> <span class="string">https://cdn.jsdelivr.net/gh/Zfour/hexo-github-calendar@1.21/hexo_githubcalendar.js</span></span><br><span class="line">  <span class="attr">plus_style:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<center>最后记得hexo三连，否则看不到效果哦！！！</center>

<h3 id="butterfly-主题文章双栏布局插件"><a href="#butterfly-主题文章双栏布局插件" class="headerlink" title="butterfly 主题文章双栏布局插件"></a>butterfly 主题文章双栏布局插件</h3><p>效果展示：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422165611927.png"></p>
<h4 id="NPM-插件安装的部署方法"><a href="#NPM-插件安装的部署方法" class="headerlink" title="NPM 插件安装的部署方法"></a>NPM 插件安装的部署方法</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure>

<h4 id="新增网站根目录-config-配置项-1"><a href="#新增网站根目录-config-配置项-1" class="headerlink" title="新增网站根目录_config 配置项"></a>新增网站根目录_config 配置项</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">butterfly_article_double_row:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>即可发现已经成功部署。</p>
<p>hexo-history-calendar 历史上的今天插件</p>
<p>效果展示：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422182741588.png"></p>
<h4 id="NPM-插件安装的部署方法：-1"><a href="#NPM-插件安装的部署方法：-1" class="headerlink" title="NPM 插件安装的部署方法："></a>NPM 插件安装的部署方法：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-history-calendar --save</span><br></pre></td></tr></table></figure>

<h4 id="新增网站根目录-config-配置项-2"><a href="#新增网站根目录-config-配置项-2" class="headerlink" title="新增网站根目录_config 配置项"></a>新增网站根目录_config 配置项</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422183003101.png"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">history_calendar:</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">4</span>                <span class="comment">#插件的叠放顺序，数字越大，叠放约靠前。</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>            <span class="comment">#是否开启插件</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span>        <span class="comment">#all 代表全局开启。如 / 代表主页。</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">temple_html:</span> <span class="string">&#x27;&lt;div class=&quot;card-widget card-history&quot;&gt;&lt;div class=&quot;card-content&quot;&gt;&lt;div class=&quot;item-headline&quot;&gt;&lt;i class=&quot;fas fa-clock fa-spin&quot;&gt;&lt;/i&gt;&lt;span&gt;那年今日&lt;/span&gt;&lt;/div&gt;&lt;div id=&quot;history-baidu&quot; style=&quot;height: 100px;overflow: hidden&quot;&gt;&lt;div class=&quot;history_swiper-container&quot; id=&quot;history-container&quot; style=&quot;width: 100%;height: 100%&quot;&gt;&lt;div class=&quot;swiper-wrapper&quot; id=&quot;history_container_wrapper&quot; style=&quot;height:20px&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="butterfly随机背景最简单的写法"><a href="#butterfly随机背景最简单的写法" class="headerlink" title="butterfly随机背景最简单的写法"></a>butterfly随机背景最简单的写法</h3><ol>
<li>找到 Butterfly 主题配置文件的 inject:处</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210422192817983.png"></p>
<ol start="2">
<li>在 bottom 处插入以下代码。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- &lt;script&gt; let backimg &#x3D;[&quot;url(&#x2F;img&#x2F;首页背景&#x2F;1.JPG)&quot;,&quot;url(&#x2F;img&#x2F;首页背景&#x2F;2.jpg)&quot;,&quot;url(&#x2F;img&#x2F;首页背景&#x2F;3.jpg)&quot;,&quot;url(&#x2F;img&#x2F;首页背景&#x2F;4.jpg)&quot;];let index &#x3D;Math.ceil(Math.random() * (backimg.length-1))-1;document.getElementById(&quot;web_bg&quot;).style.backgroundImage &#x3D; backimg[index]&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>数组里替换自己想要的图片链接，图片地址可用外链也可用本地。</li>
</ol>
<h3 id="Hexo-哔哩哔哩番剧页面插件"><a href="#Hexo-哔哩哔哩番剧页面插件" class="headerlink" title="Hexo 哔哩哔哩番剧页面插件"></a>Hexo 哔哩哔哩番剧页面插件</h3><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure>

<h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bangumi:</span><br><span class="line">  enable: true     #enable: 是否启用</span><br><span class="line">  path:              #path: 番剧页面路径，默认bangumis&#x2F;index.html</span><br><span class="line">  vmid:        #哔哩哔哩番剧页面的UID</span><br><span class="line">  title: &#39;追番列表&#39;</span><br><span class="line">  quote: &#39;生命不息，追番不止！&#39;  #写在页面开头的一段话,支持 html 语法</span><br><span class="line">  show: 1   # 初始显示页面：0: 想看,1: 在看,2: 看过，默认为1</span><br><span class="line">  loading:  #图片加载完成前的 loading 图片</span><br><span class="line">  metaColor:  #meta 部分(简介上方)字体颜色</span><br><span class="line">  color:    #简介字体颜色</span><br><span class="line">  webp:      #番剧封面使用webp格式(此格式在safari浏览器下不显示，但是图片大小可以缩小 100 倍左右), 默认true</span><br><span class="line">  progress: #获取番剧数据时是否显示进度条，默认true</span><br></pre></td></tr></table></figure>

<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>1在hexo generate或hexo deploy之前使用hexo bangumi -u命令更新番剧数据！ </p>
<p>2删除数据命令:hexo bangumi -d</p>
<p><em><strong>需要将追番列表设置为公开！</strong></em></p>
<h3 id="页脚背景"><a href="#页脚背景" class="headerlink" title="页脚背景"></a>页脚背景</h3><p>打开\themes\Butterfly\source\css_layout\footer.styl文件把background: $light-blue注释掉即可或者换成你想要的颜色</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424215759386.png"></p>
<p>red示例</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424215843451.png"></p>
<p>或者在css文件夹custom.css文件里添加（假设前边都做了）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 页脚透明 *&#x2F;</span><br><span class="line"></span><br><span class="line">#footer &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="博主昵称颜色"><a href="#博主昵称颜色" class="headerlink" title="博主昵称颜色"></a>博主昵称颜色</h3><p>在css文件夹custom.css文件里添加（颜色自己查修改）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 博主昵称颜色 *&#x2F;</span><br><span class="line">.author-info__name &#123;</span><br><span class="line">  color: #ff7242;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424220738832.png"></p>
<h3 id="顶部导航栏颜色"><a href="#顶部导航栏颜色" class="headerlink" title="顶部导航栏颜色"></a>顶部导航栏颜色</h3><p>在css文件夹custom.css文件里添加（颜色自己查修改）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 顶部导航栏 *&#x2F;</span><br><span class="line">#nav a &#123;</span><br><span class="line">  color: #3f2685;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424221413267.png"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424221538163.png"></p>
<h3 id="页脚超链接，页脚字体颜色"><a href="#页脚超链接，页脚字体颜色" class="headerlink" title="页脚超链接，页脚字体颜色"></a>页脚超链接，页脚字体颜色</h3><p>在css文件夹custom.css文件里添加（颜色自己查修改）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*页脚a标签字体颜色*&#x2F;</span><br><span class="line">#footer-wrap a &#123;</span><br><span class="line">  color: #e91159;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424221656141.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*页脚自定义字段字体颜色*&#x2F;</span><br><span class="line">&#x2F;* 也就是配置文件里的footer_custom_text *&#x2F;</span><br><span class="line">.footer_custom_text &#123;</span><br><span class="line">    color: #00c4b6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424221907318.png"></p>
<h3 id="手机端显示"><a href="#手机端显示" class="headerlink" title="手机端显示"></a>手机端显示</h3><p>在css文件夹custom.css文件里添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*移动端优化：去除归档、标签、最新文章、公告、、只保留网站统计*&#x2F;</span><br><span class="line"></span><br><span class="line">@media screen and (max-width: 800px) &#123;</span><br><span class="line">    #aside_content div:not(:last-child) &#123;</span><br><span class="line">        display: none;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h3><p>在css文件夹custom.css文件里添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 鼠标图标 *&#x2F;</span><br><span class="line">body &#123;</span><br><span class="line">  cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;Jkll8I.png), auto;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*按钮*&#x2F;</span><br><span class="line">button:hover &#123;</span><br><span class="line">  cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line">#rightside&gt;div&gt;button,</span><br><span class="line">#rightside&gt;div&gt;a &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin-bottom: 2px;</span><br><span class="line">  width: 30px;</span><br><span class="line">  height: 30px;</span><br><span class="line">  color: var(--btn-color);</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 打赏 *&#x2F;</span><br><span class="line">.post-reward .reward-button &#123;</span><br><span class="line">  cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 文章标签 *&#x2F;</span><br><span class="line">.layout_post .tag_share .post-meta__tags &#123;</span><br><span class="line">  cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h3><p>在css文件夹custom.css文件里添加（颜色自己修改）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 滚动条 *&#x2F;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  width: 10px;</span><br><span class="line">  height: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  background-color: #e58a8a;</span><br><span class="line">  background-image: -webkit-linear-gradient( 45deg, rgba(255, 255, 255, 0.4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.4) 75%, transparent 75%, transparent);</span><br><span class="line">  border-radius: 2em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">  background-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  background-color: #e58a8a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*右边滚动条、底部滚动条、div内滚动条*&#x2F;</span><br><span class="line">&#x2F;* 滚动条宽度 *&#x2F;</span><br><span class="line">::-webkit-scrollbar&#123;width:1px;&#125;</span><br><span class="line">&#x2F;* 滚动条轨道颜色 *&#x2F;</span><br><span class="line">::-webkit-scrollbar-track&#123;background-color: #000;&#125;</span><br><span class="line">&#x2F;* 滚动条颜色 *&#x2F;</span><br><span class="line">::-webkit-scrollbar-thumb&#123;background-color: #000;&#125;</span><br><span class="line">&#x2F;* 鼠标移动到滚动条上后显示的颜色 *&#x2F;</span><br><span class="line">::-webkit-scrollbar-thumb:hover &#123;background-color: #000&#125;</span><br><span class="line">&#x2F;* 点击时滚动条的颜色 *&#x2F;</span><br><span class="line">::-webkit-scrollbar-thumb:active &#123;background-color: #000&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210424222640847.png"></p>
<h3 id="打字效果渐变"><a href="#打字效果渐变" class="headerlink" title="打字效果渐变"></a>打字效果渐变</h3><p>在css文件夹custom.css文件里添加（颜色自己修改）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 打字效果渐变 *&#x2F;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-moz-keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#subtitle &#123;</span><br><span class="line">    background: linear-gradient(-45deg, #ee7752, #ce3e75, #23a6d5, #23d5ab);</span><br><span class="line">    background-size: 400% 400%;</span><br><span class="line">    -webkit-animation: Gradient 10s ease infinite;</span><br><span class="line">    -moz-animation: Gradient 10s ease infinite;</span><br><span class="line">    animation: Gradient 10s ease infinite;</span><br><span class="line">    -o-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-background-clip: text;</span><br><span class="line">    -webkit-text-fill-color: transparent;</span><br><span class="line">    border-top-left-radius: 10px;</span><br><span class="line">    border-top-right-radius: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#subtitle:before &#123;</span><br><span class="line">    background-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><p>(假设前边已经引入js)</p>
<h3 id="手机客户端导航栏默认隐藏"><a href="#手机客户端导航栏默认隐藏" class="headerlink" title="手机客户端导航栏默认隐藏"></a>手机客户端导航栏默认隐藏</h3><p>在js文件夹ABC.JS文件里添加(<code>themes\Butterfly-Master\source\js\ABC.js</code>(js文件名自定义))</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 手机客户端导航栏默认隐藏 *&#x2F;</span><br><span class="line">var mobile_sidebar_menus &#x3D; document.getElementById(&quot;mobile-sidebar-menus&quot;);</span><br><span class="line">var menus_item_child &#x3D; mobile_sidebar_menus.getElementsByClassName(&quot;menus_item_child&quot;);</span><br><span class="line">var menus_expand &#x3D; mobile_sidebar_menus.getElementsByClassName(&quot;expand&quot;);</span><br><span class="line">for (var i &#x3D; 0; i &lt; menus_item_child.length; i++) &#123;</span><br><span class="line">    menus_item_child[i].style.display &#x3D; &quot;none&quot;;</span><br><span class="line">    menus_expand[i].className +&#x3D; &quot; closed&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="卖萌标题"><a href="#卖萌标题" class="headerlink" title="卖萌标题"></a>卖萌标题</h3><p>在js文件夹ABC.JS文件里添加(<code>themes\Butterfly-Master\source\js\ABC.js</code>(js文件名自定义))</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 可爱的Title</span><br><span class="line">var OriginTitle &#x3D; document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">document.addEventListener(&#39;visibilitychange&#39;, function() &#123;</span><br><span class="line">    if (document.hidden) &#123;</span><br><span class="line">        $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;img&#x2F;favicon.ico&quot;);</span><br><span class="line">        document.title &#x3D; &#39;(つェ⊂) 我藏好了哦~~&#39;;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;img&#x2F;favicon.ico&quot;);</span><br><span class="line">        document.title &#x3D; &#39;(*´∇｀*) 被你发现啦~~&#39; + OriginTitle;</span><br><span class="line">        titleTime &#x3D; setTimeout(function() &#123;</span><br><span class="line">            document.title &#x3D; OriginTitle;</span><br><span class="line">        &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="气泡"><a href="#气泡" class="headerlink" title="气泡"></a>气泡</h3><p>在js文件夹ABC.JS文件里添加(<code>themes\Butterfly-Master\source\js\ABC.js</code>(js文件名自定义))</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 气泡</span><br><span class="line">function qipao() &#123;</span><br><span class="line">    $(&#39;#page-header&#39;).circleMagic(&#123;</span><br><span class="line">        radius: 10,</span><br><span class="line">        density: .2,</span><br><span class="line">        color: &#39;rgba(255,255,255,.4)&#39;,</span><br><span class="line">        clearOffset: 0.99</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;! function(p) &#123;</span><br><span class="line">    p.fn.circleMagic &#x3D; function(t) &#123;</span><br><span class="line">        var o, a, n, r, e &#x3D; !0,</span><br><span class="line">            i &#x3D; [],</span><br><span class="line">            d &#x3D; p.extend(&#123; color: &quot;rgba(255,0,0,.5)&quot;, radius: 10, density: .3, clearOffset: .2 &#125;, t),</span><br><span class="line">            l &#x3D; this[0];</span><br><span class="line"></span><br><span class="line">        function c() &#123; e &#x3D; !(document.body.scrollTop &gt; a) &#125;</span><br><span class="line"></span><br><span class="line">        function s() &#123; o &#x3D; l.clientWidth, a &#x3D; l.clientHeight, l.height &#x3D; a + &quot;px&quot;, n.width &#x3D; o, n.height &#x3D; a &#125;</span><br><span class="line"></span><br><span class="line">        function h() &#123;</span><br><span class="line">            if (e)</span><br><span class="line">                for (var t in r.clearRect(0, 0, o, a), i) i[t].draw();</span><br><span class="line">            requestAnimationFrame(h)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function f() &#123;</span><br><span class="line">            var t &#x3D; this;</span><br><span class="line"></span><br><span class="line">            function e() &#123; t.pos.x &#x3D; Math.random() * o, t.pos.y &#x3D; a + 100 * Math.random(), t.alpha &#x3D; .1 + Math.random() * d.clearOffset, t.scale &#x3D; .1 + .3 * Math.random(), t.speed &#x3D; Math.random(), &quot;random&quot; &#x3D;&#x3D;&#x3D; d.color ? t.color &#x3D; &quot;rgba(&quot; + Math.floor(255 * Math.random()) + &quot;, &quot; + Math.floor(0 * Math.random()) + &quot;, &quot; + Math.floor(0 * Math.random()) + &quot;, &quot; + Math.random().toPrecision(2) + &quot;)&quot; : t.color &#x3D; d.color &#125;</span><br><span class="line">            t.pos &#x3D; &#123;&#125;, e(), this.draw &#x3D; function() &#123; t.alpha &lt;&#x3D; 0 &amp;&amp; e(), t.pos.y -&#x3D; t.speed, t.alpha -&#x3D; 5e-4, r.beginPath(), r.arc(t.pos.x, t.pos.y, t.scale * d.radius, 0, 2 * Math.PI, !1), r.fillStyle &#x3D; t.color, r.fill(), r.closePath() &#125;</span><br><span class="line">        &#125;! function() &#123;</span><br><span class="line">            o &#x3D; l.offsetWidth, a &#x3D; l.offsetHeight,</span><br><span class="line">                function() &#123;</span><br><span class="line">                    var t &#x3D; document.createElement(&quot;canvas&quot;);</span><br><span class="line">                    t.id &#x3D; &quot;canvas&quot;, t.style.top &#x3D; 0, t.style.zIndex &#x3D; 0, t.style.position &#x3D; &quot;absolute&quot;, l.appendChild(t), t.parentElement.style.overflow &#x3D; &quot;hidden&quot;</span><br><span class="line">                &#125;(), (n &#x3D; document.getElementById(&quot;canvas&quot;)).width &#x3D; o, n.height &#x3D; a, r &#x3D; n.getContext(&quot;2d&quot;);</span><br><span class="line">            for (var t &#x3D; 0; t &lt; o * d.density; t++) &#123;</span><br><span class="line">                var e &#x3D; new f;</span><br><span class="line">                i.push(e)</span><br><span class="line">            &#125;</span><br><span class="line">            h()</span><br><span class="line">        &#125;(), window.addEventListener(&quot;scroll&quot;, c, !1), window.addEventListener(&quot;resize&quot;, s, !1)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(jQuery);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用气泡方法</span><br><span class="line">qipao();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="文章生成永久url连接"><a href="#文章生成永久url连接" class="headerlink" title="文章生成永久url连接"></a>文章生成永久url连接</h3><p>1、首先安装插件（在博客根目录下打开）</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210425080716680.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<p>2、然后改配置(_config.yml)</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/ABCHDS/drawing-bed/raw/master/img/image-20210425080855251.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 改动的地方</span><br><span class="line">url: </span><br><span class="line">root: &#x2F;</span><br><span class="line">#permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink: post&#x2F;:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  # 算法：crc16(default) and crc32</span><br><span class="line">  rep: hex    # 进制：dec(default) and hex</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span><br><span class="line">crc16 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;ABCHDS.gitee.io&#x2F;posts&#x2F;12e5.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;ABCHDS.gitee.io&#x2F;posts&#x2F;78585.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;ABCHDS.gitee.io&#x2F;posts&#x2F;8df45468.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;ABCHDS.gitee.io&#x2F;posts&#x2F;1258428496.html</span><br></pre></td></tr></table></figure>

<h3 id="加密插件"><a href="#加密插件" class="headerlink" title="加密插件"></a>加密插件</h3><p><a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">地址)</a></p>
<h3 id="Botui-Talk-Robot-侧边栏机器人对话框"><a href="#Botui-Talk-Robot-侧边栏机器人对话框" class="headerlink" title="Botui Talk Robot(侧边栏机器人对话框)"></a>Botui Talk Robot(侧边栏机器人对话框)</h3><p>在 <code>~\[blogroot]\themes\butterfly\layout\includes\widget\</code> 目录下新建 <code>card_botui.pug</code>，注意对齐格式。可以自定义修改按钮显示的内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.card-widget.card-botui</span><br><span class="line">  .card-content(style&#x3D;&#39;height:320px;&#39;)</span><br><span class="line">    .item-headline</span><br><span class="line">      i.fas.fa-comments</span><br><span class="line">      span&#x3D; _p(&#39;aside.card_botui&#39;)</span><br><span class="line">    #hello-akilar.botui-app-container(style&#x3D;&#39;width:100%;padding:0.5px&#39;)</span><br><span class="line">      bot-ui</span><br><span class="line">        .facemain</span><br><span class="line">          figure</span><br><span class="line">            div</span><br><span class="line">              span.face 要来和我聊聊么？</span><br><span class="line">              span.face</span><br><span class="line">                a(href&#x3D;&#39;javascript:void(0);&#39; onclick&#x3D;&#39;botui_init()&#39;) 欢迎光临糖果屋</span><br></pre></td></tr></table></figure>

<p>替换 <code>~\[blogroot]\themes\butterfly\layout\includes\widget\index.pug</code>，注意对齐格式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\#aside-content.aside-content</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;- post</span><br><span class="line"></span><br><span class="line"> if is_post()</span><br><span class="line"></span><br><span class="line">  if showToc &amp;&amp; theme.toc.style_simple</span><br><span class="line"></span><br><span class="line">   .sticky_layout</span><br><span class="line"></span><br><span class="line">​    include .&#x2F;card_post_toc.pug</span><br><span class="line"></span><br><span class="line">  else</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_author&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_announcement&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   .sticky_layout</span><br><span class="line"></span><br><span class="line">​    if showToc</span><br><span class="line"></span><br><span class="line">​     include .&#x2F;card_post_toc.pug</span><br><span class="line"></span><br><span class="line">​    if theme.aside.card_botui.enable</span><br><span class="line"></span><br><span class="line">​     !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_botui&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">​    !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_recent_post&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">​    !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_ad&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line"> else</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;- page</span><br><span class="line"></span><br><span class="line">  !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_author&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">  !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_announcement&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">  .sticky_layout</span><br><span class="line"></span><br><span class="line">   if theme.aside.card_botui.enable</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_botui&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_recent_post&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_ad&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_newest_comment&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_categories&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_tags&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_archives&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_webinfo&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">   !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_self&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br></pre></td></tr></table></figure>

<p>也可替换</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    #aside_content.aside_content</span><br><span class="line">    &#x2F;&#x2F;- post</span><br><span class="line">    if is_post()</span><br><span class="line">      if showToc &amp;&amp; theme.toc.style_simple</span><br><span class="line">        .sticky_layout</span><br><span class="line">          include .&#x2F;card_post_toc.pug</span><br><span class="line">      else</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_author&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_announcement&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        .sticky_layout</span><br><span class="line">          if showToc</span><br><span class="line">            include .&#x2F;card_post_toc.pug</span><br><span class="line">+         if theme.aside.card_botui.enable</span><br><span class="line">+           !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_botui&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">          !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_recent_post&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">          !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_ad&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">    else</span><br><span class="line">      &#x2F;&#x2F;- page</span><br><span class="line">      !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_author&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_announcement&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      .sticky_layout</span><br><span class="line">+       if theme.aside.card_botui.enable</span><br><span class="line">+       !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_botui&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_recent_post&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_ad&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_newest_comment&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_categories&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_tags&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_archives&#39;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_webinfo&#39;, &#123;&#125;, &#123;cache: true&#125;)  </span><br></pre></td></tr></table></figure>

<p>在 <code>~\[blogroot]\themes\butterfly\source\css\</code> 目录下新建 <code>card_botui.css</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import url(https:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Open+Sans);</span><br><span class="line">.botui-container&#123;</span><br><span class="line">  font-size:14px;</span><br><span class="line">  background-color:#fff;</span><br><span class="line">  font-family:&quot;Open Sans&quot;,sans-serif</span><br><span class="line">&#125;</span><br><span class="line">.botui-messages-container&#123;</span><br><span class="line">  padding:10px 20px</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-container&#123;</span><br><span class="line">  padding:10px 20px</span><br><span class="line">&#125;</span><br><span class="line">.botui-message&#123;</span><br><span class="line">  min-height:30px</span><br><span class="line">&#125;</span><br><span class="line">.botui-message-content&#123;</span><br><span class="line">  padding:7px 13px;</span><br><span class="line">  border-radius:15px;</span><br><span class="line">  color:#595a5a;</span><br><span class="line">  background-color:#ebebeb</span><br><span class="line">&#125;</span><br><span class="line">.botui-message-content.human&#123;</span><br><span class="line">  color:#f7f8f8;</span><br><span class="line">  background-color:#919292</span><br><span class="line">&#125;</span><br><span class="line">.botui-message-content.text&#123;</span><br><span class="line">  line-height:1.3</span><br><span class="line">&#125;</span><br><span class="line">.botui-message-content.loading&#123;</span><br><span class="line">  background-color:rgba(206,206,206,.5);</span><br><span class="line">  line-height:1.3;</span><br><span class="line">  text-align:center</span><br><span class="line">&#125;</span><br><span class="line">.botui-message-content.embed&#123;</span><br><span class="line">  padding:5px;</span><br><span class="line">  border-radius:5px</span><br><span class="line">&#125;</span><br><span class="line">.botui-message-content-link&#123;</span><br><span class="line">  color:#919292</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-text-input&#123;</span><br><span class="line">  border:0;</span><br><span class="line">  outline:0;</span><br><span class="line">  border-radius:0;</span><br><span class="line">  padding:5px 7px;</span><br><span class="line">  font-family:&quot;Open Sans&quot;,sans-serif;</span><br><span class="line">  background-color:transparent;</span><br><span class="line">  color:#595a5a;</span><br><span class="line">  border-bottom:1px solid #919292</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-text-submit&#123;</span><br><span class="line">  color:#fff;</span><br><span class="line">  width:30px;</span><br><span class="line">  padding:5px;</span><br><span class="line">  height:30px;</span><br><span class="line">  line-height:1;</span><br><span class="line">  border-radius:50%;</span><br><span class="line">  border:1px solid #919292;</span><br><span class="line">  background:#777979</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-buttons-button&#123;</span><br><span class="line">  border:0;</span><br><span class="line">  color:#fff;</span><br><span class="line">  line-height:1;</span><br><span class="line">  cursor:pointer;</span><br><span class="line">  font-size:14px;</span><br><span class="line">  font-weight:500;</span><br><span class="line">  padding:7px 15px;</span><br><span class="line">  border-radius:4px;</span><br><span class="line">  font-family:&quot;Open Sans&quot;,sans-serif;</span><br><span class="line">  background:#777979;</span><br><span class="line">  box-shadow:2px 3px 4px 0 rgba(0,0,0,.25)</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-text-select&#123;</span><br><span class="line">  border:0;</span><br><span class="line">  outline:0;</span><br><span class="line">  border-radius:0;</span><br><span class="line">  padding:5px 7px;</span><br><span class="line">  font-family:&quot;Open Sans&quot;,sans-serif;</span><br><span class="line">  background-color:transparent;</span><br><span class="line">  color:#595a5a;</span><br><span class="line">  border-bottom:1px solid #919292</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-text-searchselect&#123;</span><br><span class="line">  border:0;</span><br><span class="line">  outline:0;</span><br><span class="line">  border-radius:0;</span><br><span class="line">  padding:5px 7px;</span><br><span class="line">  font-family:&quot;Open Sans&quot;,sans-serif;</span><br><span class="line">  background-color:transparent;</span><br><span class="line">  color:#595a5a;</span><br><span class="line">  border-bottom:1px solid #919292</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-text-searchselect .dropdown-toggle&#123;</span><br><span class="line">  border:none!important</span><br><span class="line">&#125;</span><br><span class="line">.botui-actions-text-searchselect .selected-tag&#123;</span><br><span class="line">  background-color:transparent!important;</span><br><span class="line">  border:0!important</span><br><span class="line">&#125;</span><br><span class="line">.slide-fade-enter-active&#123;</span><br><span class="line">  transition:all .3s ease</span><br><span class="line">&#125;</span><br><span class="line">.slide-fade-enter,.slide-fade-leave-to&#123;</span><br><span class="line">  opacity:0;</span><br><span class="line">  transform:translateX(-10px)</span><br><span class="line">&#125;</span><br><span class="line">.dot&#123;</span><br><span class="line">  width:.5rem;</span><br><span class="line">  height:.5rem;</span><br><span class="line">  border-radius:.5rem;</span><br><span class="line">  display:inline-block;</span><br><span class="line">  background-color:#919292</span><br><span class="line">&#125;</span><br><span class="line">.dot:nth-last-child(1)&#123;</span><br><span class="line">  margin-left:.3rem;</span><br><span class="line">  animation:loading .6s .3s linear infinite</span><br><span class="line">&#125;</span><br><span class="line">.dot:nth-last-child(2)&#123;</span><br><span class="line">  margin-left:.3rem;</span><br><span class="line">  animation:loading .6s .2s linear infinite</span><br><span class="line">&#125;</span><br><span class="line">.dot:nth-last-child(3)&#123;</span><br><span class="line">  animation:loading .6s .1s linear infinite</span><br><span class="line">&#125;</span><br><span class="line">@keyframes loading&#123;</span><br><span class="line">  0%&#123;transform:translate(0,0);</span><br><span class="line">    background-color:#ababab</span><br><span class="line">    &#125;</span><br><span class="line">  25%&#123;transform:translate(0,-3px)</span><br><span class="line">    &#125;</span><br><span class="line">  50%&#123;transform:translate(0,0);</span><br><span class="line">    background-color:#ababab</span><br><span class="line">    &#125;</span><br><span class="line">  75%&#123;transform:translate(0,3px)</span><br><span class="line">    &#125;</span><br><span class="line">  100%&#123;transform:translate(0,0)&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line"> * botui 0.3.9</span><br><span class="line"> * A JS library to build the UI for your bot</span><br><span class="line"> * https:&#x2F;&#x2F;botui.org</span><br><span class="line"> *</span><br><span class="line"> * Copyright 2019, Moin Uddin</span><br><span class="line"> * Released under the MIT license.</span><br><span class="line">*&#x2F;</span><br><span class="line">a.botui-message-content-link:focus &#123;</span><br><span class="line">  outline: thin dotted</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a.botui-message-content-link:focus:active, a.botui-message-content-link:focus:hover &#123;</span><br><span class="line">  outline: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">form.botui-actions-text &#123;</span><br><span class="line">  margin: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button.botui-actions-buttons-button, input.botui-actions-text-input &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  font-size: 100%;</span><br><span class="line">  line-height: normal;</span><br><span class="line">  vertical-align: baseline</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button.botui-actions-buttons-button::-moz-focus-inner, input.botui-actions-text-input::-moz-focus-inner &#123;</span><br><span class="line">  border: 0;</span><br><span class="line">  padding: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button.botui-actions-buttons-button &#123;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  -webkit-appearance: button</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-app-container &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  line-height: 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-container &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line">  overflow-x: hidden</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message &#123;</span><br><span class="line">  margin-top: 10px;</span><br><span class="line">  margin-bottom:10px</span><br><span class="line">  min-height: 20px</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message:after &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  content: &quot;&quot;;</span><br><span class="line">  clear: both</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message-content &#123;</span><br><span class="line">  width: auto;</span><br><span class="line">  max-width: 85%;</span><br><span class="line">  display: inline-block</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message-content.human &#123;</span><br><span class="line">  float: right</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message-content iframe &#123;</span><br><span class="line">  width: 100%</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message-content-image &#123;</span><br><span class="line">  margin: 2px 0;</span><br><span class="line">  display: block;</span><br><span class="line">  max-width: 200px;</span><br><span class="line">  max-height: 200px</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui-message-content-link &#123;</span><br><span class="line">  text-decoration: underline</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.profil &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  border-radius: 50%</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.profil.human &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  margin-left: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.profil.agent &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  margin-right: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.profil&gt;img &#123;</span><br><span class="line">  width: 26px;</span><br><span class="line">  height: 26px;</span><br><span class="line">  border: 1px solid #e8e8e8</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.profil&gt;img.agent &#123;</span><br><span class="line">  content: url(http:&#x2F;&#x2F;decodemoji.com&#x2F;img&#x2F;logos&#x2F;blue_moji_hat.svg);</span><br><span class="line">  border-radius:50%</span><br><span class="line">&#125;</span><br><span class="line">button.botui-actions-buttons-button&#123;</span><br><span class="line">  margin-top:10px;</span><br><span class="line">  margin-bottom:10px</span><br><span class="line">&#125;</span><br><span class="line">button.botui-actions-buttons-button:not(:last-child)&#123;</span><br><span class="line">  margin-right:10px</span><br><span class="line">&#125;</span><br><span class="line">@media (min-width:400px)&#123;</span><br><span class="line">  .botui-actions-text-submit&#123;</span><br><span class="line">    display:none</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.botui.botui-container::-webkit-scrollbar &#123;</span><br><span class="line">  width: 0 !important;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 按钮动效 *&#x2F;</span><br><span class="line">.facemain &#123; font-size: 100%; 	padding: 0; margin: 0;&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* Reset *&#x2F;</span><br><span class="line">.facemain *,</span><br><span class="line">.facemain *:after,</span><br><span class="line">.facemain *:before &#123;</span><br><span class="line">	-webkit-box-sizing: border-box;</span><br><span class="line">	-moz-box-sizing: border-box;</span><br><span class="line">	box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* Clearfix hack by Nicolas Gallagher: http:&#x2F;&#x2F;nicolasgallagher.com&#x2F;micro-clearfix-hack&#x2F; *&#x2F;</span><br><span class="line">.clearfix:before,</span><br><span class="line">.clearfix:after &#123;</span><br><span class="line">	content: &quot; &quot;;</span><br><span class="line">	display: table;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.clearfix:after &#123;</span><br><span class="line">	clear: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.facemain&#123;</span><br><span class="line">  height: 250px;</span><br><span class="line">  width:300px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  border-radius: 10px;</span><br><span class="line">  vertical-align:middle;</span><br><span class="line">  display:table-cell;</span><br><span class="line">	background: #494A5F;</span><br><span class="line">	color: #D5D6E2;</span><br><span class="line">	font-weight: 500;</span><br><span class="line">	font-size: 1.05em;</span><br><span class="line">	font-family: &quot;Microsoft YaHei&quot;,&quot;Segoe UI&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial,sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">.facemain a&#123; color: rgba(255, 255, 255, 0.6);outline: none;text-decoration: none;-webkit-transition: 0.2s;transition: 0.2s;&#125;</span><br><span class="line">.facemain a:hover,a:focus&#123;color:#74777b;text-decoration: none;&#125;</span><br><span class="line"></span><br><span class="line">.facemain figure &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 60px;</span><br><span class="line">  margin: 50px auto;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  perspective: 500px;</span><br><span class="line">  -webkit-perspective: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.facemain figure div &#123;</span><br><span class="line">  height: 100%;</span><br><span class="line">  transform-style: preserve-3d;</span><br><span class="line">  -webkit-transform-style: preserve-3d;</span><br><span class="line">  transition: 0.25s;</span><br><span class="line">  -webkit-transition: 0.25s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.facemain figure:hover div &#123;</span><br><span class="line">  transform: rotateX(-90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.facemain span.face &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  position: absolute;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  border: 5px solid #fff;</span><br><span class="line">  font-family: &#39;Source Sans Pro&#39;,sans-serif;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  font-size: 17pt;</span><br><span class="line">  text-align: center;</span><br><span class="line">  text-transform: uppercase;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.facemain span.face:nth-child(1) &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  transform: translate3d(0, 0, 30px);</span><br><span class="line">  -webkit-transform: translate3d(0, 0, 30px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.facemain span.face:nth-child(2) &#123;</span><br><span class="line">  color: #094b2c;</span><br><span class="line">  background: #fff;</span><br><span class="line">  transform: rotateX(90deg) translate3d(0, 0, 30px);</span><br><span class="line">  -webkit-transform: rotateX(90deg) translate3d(0, 0, 30px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 <code>~\[blogroot]\themes\butterfly\source\js\</code> 目录下新建 <code>botui.js</code> 和 <code>botui_init.js</code>,</p>
<p>botui.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*function bot_ui_ini() &#123;</span><br><span class="line">    var botui &#x3D; new botUI(&quot;hello-mashiro&quot;)</span><br><span class="line">    botui.message.add(&#123;</span><br><span class="line">        delay: 800,</span><br><span class="line">        content: &quot;hi, there&quot;</span><br><span class="line">    &#125;).then(function () &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">            delay: 1100,</span><br><span class="line">            content: &quot;这里是小霸王&quot;</span><br><span class="line">        &#125;).then(function () &#123;</span><br><span class="line">            botui.message.add(&#123;</span><br><span class="line">                delay: 1100,</span><br><span class="line">                content: &quot;一个懒家伙&quot;</span><br><span class="line">            &#125;).then(function()&#123;</span><br><span class="line">                botui.action.button(&#123;</span><br><span class="line">                    delay: 1600,</span><br><span class="line">                    action: [&#123;</span><br><span class="line">                        text: &quot;然后呢？&quot;,</span><br><span class="line">                        value: &quot;sure&quot;</span><br><span class="line">                    &#125;,&#123;</span><br><span class="line">                        text: &quot;少废话！&quot;,</span><br><span class="line">                        value: &quot;skip&quot;</span><br><span class="line">                    &#125; ]</span><br><span class="line">                &#125;).then(function (a) &#123;</span><br><span class="line">                    &quot;sure&quot; &#x3D;&#x3D; a.value &amp;&amp; sure();</span><br><span class="line">                    &quot;skip&quot; &#x3D;&#x3D; a.value &amp;&amp; end()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line"> * botui 0.3.9</span><br><span class="line"> * A JS library to build the UI for your bot</span><br><span class="line"> * https:&#x2F;&#x2F;botui.org</span><br><span class="line"> *</span><br><span class="line"> * Copyright 2019, Moin Uddin</span><br><span class="line"> * Released under the MIT license.</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">(function (root, factory) &#123;</span><br><span class="line">    &quot;use strict&quot;;</span><br><span class="line">    if (typeof define &#x3D;&#x3D;&#x3D; &#39;function&#39; &amp;&amp; define.amd) &#123;</span><br><span class="line">      define([], function () &#123;</span><br><span class="line">        return (root.BotUI &#x3D; factory(root));</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      root.BotUI &#x3D; factory(root);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;(typeof window !&#x3D;&#x3D; &#39;undefined&#39; ? window : this, function (root, undefined) &#123;</span><br><span class="line">    &quot;use strict&quot;;</span><br><span class="line">  </span><br><span class="line">    var BotUI &#x3D; (function (id, opts) &#123;</span><br><span class="line">  </span><br><span class="line">      opts &#x3D; opts || &#123;&#125;;</span><br><span class="line">  </span><br><span class="line">      if(!id) &#123;</span><br><span class="line">        throw Error(&#39;BotUI: Container id is required as first argument.&#39;);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      if(!document.getElementById(id)) &#123;</span><br><span class="line">        throw Error(&#39;BotUI: Element with id #&#39; + id + &#39; does not exist.&#39;);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      if(!root.Vue &amp;&amp; !opts.vue) &#123;</span><br><span class="line">        throw Error(&#39;BotUI: Vue is required but not found.&#39;);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      var _botApp, &#x2F;&#x2F; current vue instance.</span><br><span class="line">      _options &#x3D; &#123;</span><br><span class="line">        debug: false,</span><br><span class="line">        fontawesome: true,</span><br><span class="line">        searchselect: true</span><br><span class="line">      &#125;,</span><br><span class="line">      _container, &#x2F;&#x2F; the outermost Element. Needed to scroll to bottom, for now.</span><br><span class="line">      _interface &#x3D; &#123;&#125;, &#x2F;&#x2F; methods returned by a BotUI() instance.</span><br><span class="line">      _actionResolve,</span><br><span class="line">      _markDownRegex &#x3D; &#123;</span><br><span class="line">        icon: &#x2F;!\(([^\)]+)\)&#x2F;igm, &#x2F;&#x2F; !(icon)</span><br><span class="line">        image: &#x2F;!\[(.*?)\]\((.*?)\)&#x2F;igm, &#x2F;&#x2F; ![aleternate text](src)</span><br><span class="line">        link: &#x2F;\[([^\[]+)\]\(([^\)]+)\)(\^?)&#x2F;igm &#x2F;&#x2F; [text](link) ^ can be added at end to set the target as &#39;blank&#39;</span><br><span class="line">      &#125;,</span><br><span class="line">      _fontAwesome &#x3D; &#39;https:&#x2F;&#x2F;use.fontawesome.com&#x2F;ea731dcb6f.js&#39;,</span><br><span class="line">      _esPromisePollyfill &#x3D; &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;es6-promise&#x2F;4.1.0&#x2F;es6-promise.min.js&#39;, &#x2F;&#x2F; mostly for IE</span><br><span class="line">      _searchselect &#x3D;  &quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue-select@2.4.0&#x2F;dist&#x2F;vue-select.js&quot;;</span><br><span class="line">  </span><br><span class="line">      root.Vue &#x3D; root.Vue || opts.vue;</span><br><span class="line">  </span><br><span class="line">      &#x2F;&#x2F; merge opts passed to constructor with _options</span><br><span class="line">      for (var prop in _options) &#123;</span><br><span class="line">        if (opts.hasOwnProperty(prop)) &#123;</span><br><span class="line">          _options[prop] &#x3D; opts[prop];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      if(!root.Promise &amp;&amp; typeof Promise &#x3D;&#x3D;&#x3D; &quot;undefined&quot; &amp;&amp; !opts.promise) &#123;</span><br><span class="line">        loadScript(_esPromisePollyfill);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function _linkReplacer(match, $1, $2, $3) &#123;</span><br><span class="line">        var _target &#x3D; $3 ? &#39;blank&#39; : &#39;&#39;; &#x2F;&#x2F; check if &#39;^&#39; sign is present with link syntax</span><br><span class="line">        return &quot;&lt;a class&#x3D;&#39;botui-message-content-link&#39; target&#x3D;&#39;&quot; + _target + &quot;&#39; href&#x3D;&#39;&quot; + $2 +&quot;&#39;&gt;&quot; + $1 + &quot;&lt;&#x2F;a&gt;&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function _parseMarkDown(text) &#123;</span><br><span class="line">        return text</span><br><span class="line">                   .replace(_markDownRegex.image, &quot;&lt;img class&#x3D;&#39;botui-message-content-image&#39; src&#x3D;&#39;$2&#39; alt&#x3D;&#39;$1&#39; &#x2F;&gt;&quot;)</span><br><span class="line">                   .replace(_markDownRegex.icon, &quot;&lt;i class&#x3D;&#39;botui-icon botui-message-content-icon fa fa-$1&#39;&gt;&lt;&#x2F;i&gt;&quot;)</span><br><span class="line">                   .replace(_markDownRegex.link, _linkReplacer);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function loadScript(src, cb) &#123;</span><br><span class="line">        var script &#x3D; document.createElement(&#39;script&#39;);</span><br><span class="line">            script.type &#x3D; &#39;text&#x2F;javascript&#39;;</span><br><span class="line">            script.src &#x3D; src;</span><br><span class="line">  </span><br><span class="line">            if(cb) &#123;</span><br><span class="line">              script.onload &#x3D; cb;</span><br><span class="line">            &#125;</span><br><span class="line">  </span><br><span class="line">        document.body.appendChild(script);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function _handleAction(text) &#123;</span><br><span class="line">        if(_instance.action.addMessage) &#123;</span><br><span class="line">          _interface.message.human(&#123;</span><br><span class="line">            delay: 100,</span><br><span class="line">            content: text</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        _instance.action.show &#x3D; !_instance.action.autoHide;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      var _botuiComponent &#x3D; &#123;</span><br><span class="line">        template: &#39;&lt;div class&#x3D;\&quot;botui botui-container\&quot; v-botui-container&gt;&lt;div class&#x3D;\&quot;botui-messages-container\&quot;&gt;&lt;div v-for&#x3D;\&quot;msg in messages\&quot; class&#x3D;\&quot;botui-message\&quot; :class&#x3D;\&quot;msg.cssClass\&quot; v-botui-scroll&gt;&lt;transition name&#x3D;\&quot;slide-fade\&quot;&gt;&lt;div v-if&#x3D;\&quot;msg.visible\&quot;&gt;&lt;div v-if&#x3D;\&quot;msg.photo &amp;&amp; !msg.loading\&quot; :class&#x3D;\&quot;[\&#39;profil\&#39;, \&#39;profile\&#39;, &#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt; &lt;img :src&#x3D;\&quot;msg.photo\&quot; :class&#x3D;\&quot;[&#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt;&lt;&#x2F;div&gt;&lt;div :class&#x3D;\&quot;[&#123;human: msg.human, \&#39;botui-message-content\&#39;: true&#125;, msg.type]\&quot;&gt;&lt;span v-if&#x3D;\&quot;msg.type &#x3D;&#x3D; \&#39;text\&#39;\&quot; v-text&#x3D;\&quot;msg.content\&quot; v-botui-markdown&gt;&lt;&#x2F;span&gt;&lt;span v-if&#x3D;\&quot;msg.type &#x3D;&#x3D; \&#39;html\&#39;\&quot; v-html&#x3D;\&quot;msg.content\&quot;&gt;&lt;&#x2F;span&gt; &lt;iframe v-if&#x3D;\&quot;msg.type &#x3D;&#x3D; \&#39;embed\&#39;\&quot; :src&#x3D;\&quot;msg.content\&quot; frameborder&#x3D;\&quot;0\&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;transition&gt;&lt;div v-if&#x3D;\&quot;msg.photo &amp;&amp; msg.loading &amp;&amp; !msg.human\&quot; :class&#x3D;\&quot;[\&#39;profil\&#39;, \&#39;profile\&#39;, &#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt; &lt;img :src&#x3D;\&quot;msg.photo\&quot; :class&#x3D;\&quot;[&#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt;&lt;&#x2F;div&gt;&lt;div v-if&#x3D;\&quot;msg.loading\&quot; class&#x3D;\&quot;botui-message-content loading\&quot;&gt;&lt;i class&#x3D;\&quot;dot\&quot;&gt;&lt;&#x2F;i&gt;&lt;i class&#x3D;\&quot;dot\&quot;&gt;&lt;&#x2F;i&gt;&lt;i class&#x3D;\&quot;dot\&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;\&quot;botui-actions-container\&quot;&gt;&lt;transition name&#x3D;\&quot;slide-fade\&quot;&gt;&lt;div v-if&#x3D;\&quot;action.show\&quot; v-botui-scroll&gt;&lt;form v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;text\&#39;\&quot; class&#x3D;\&quot;botui-actions-text\&quot; @submit.prevent&#x3D;\&quot;handle_action_text()\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-text-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;input type&#x3D;\&quot;text\&quot; ref&#x3D;\&quot;input\&quot; :type&#x3D;\&quot;action.text.sub_type\&quot; v-model&#x3D;\&quot;action.text.value\&quot; class&#x3D;\&quot;botui-actions-text-input\&quot; :placeholder&#x3D;\&quot;action.text.placeholder\&quot; :size&#x3D;\&quot;action.text.size\&quot; :value&#x3D;\&quot; action.text.value\&quot; :class&#x3D;\&quot;action.text.cssClass\&quot; required v-focus&#x2F;&gt; &lt;button type&#x3D;\&quot;submit\&quot; :class&#x3D;\&quot;&#123;\&#39;botui-actions-buttons-button\&#39;: !!action.text.button, \&#39;botui-actions-text-submit\&#39;: !action.text.button&#125;\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.button &amp;&amp; action.text.button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.button.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;span&gt;&#123;&#123;(action.text.button &amp;&amp; action.text.button.label) || \&#39;Go\&#39;&#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;&#x2F;form&gt;&lt;form v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;select\&#39;\&quot; class&#x3D;\&quot;botui-actions-select\&quot; @submit.prevent&#x3D;\&quot;handle_action_select()\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.select.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-select-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.select.icon\&quot;&gt;&lt;&#x2F;i&gt;&lt;v-select v-if&#x3D;\&quot;action.select.searchselect &amp;&amp; !action.select.multipleselect\&quot; v-model&#x3D;\&quot;action.select.value\&quot; :value&#x3D;\&quot;action.select.value\&quot; :placeholder&#x3D;\&quot;action.select.placeholder\&quot; class&#x3D;\&quot;botui-actions-text-searchselect\&quot; :label&#x3D;\&quot;action.select.label\&quot; :options&#x3D;\&quot;action.select.options\&quot;&gt;&lt;&#x2F;v-select&gt;&lt;v-select v-else-if&#x3D;\&quot;action.select.searchselect &amp;&amp; action.select.multipleselect\&quot; multiple v-model&#x3D;\&quot;action.select.value\&quot; :value&#x3D;\&quot;action.select.value\&quot; :placeholder&#x3D;\&quot;action.select.placeholder\&quot; class&#x3D;\&quot;botui-actions-text-searchselect\&quot; :label&#x3D;\&quot;action.select.label\&quot; :options&#x3D;\&quot;action.select.options\&quot;&gt;&lt;&#x2F;v-select&gt; &lt;select v-else v-model&#x3D;\&quot;action.select.value\&quot; class&#x3D;\&quot;botui-actions-text-select\&quot; :placeholder&#x3D;\&quot;action.select.placeholder\&quot; :size&#x3D;\&quot;action.select.size\&quot; :class&#x3D;\&quot;action.select.cssClass\&quot; required v-focus&gt;&lt;option v-for&#x3D;\&quot;option in action.select.options\&quot; :class&#x3D;\&quot;action.select.optionClass\&quot; v-bind:value&#x3D;\&quot;option.value\&quot; :disabled&#x3D;\&quot;(option.value &#x3D;&#x3D; \&#39;\&#39;)?true:false\&quot; :selected&#x3D;\&quot;(action.select.value &#x3D;&#x3D; option.value)?\&#39;selected\&#39;:\&#39;\&#39;\&quot;&gt; &#123;&#123; option.text &#125;&#125;&lt;&#x2F;option&gt;&lt;&#x2F;select&gt; &lt;button type&#x3D;\&quot;submit\&quot; :class&#x3D;\&quot;&#123;\&#39;botui-actions-buttons-button\&#39;: !!action.select.button, \&#39;botui-actions-select-submit\&#39;: !action.select.button&#125;\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.select.button &amp;&amp; action.select.button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.select.button.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;span&gt;&#123;&#123;(action.select.button &amp;&amp; action.select.button.label) || \&#39;Ok\&#39;&#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;&#x2F;form&gt;&lt;div v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;button\&#39;\&quot; class&#x3D;\&quot;botui-actions-buttons\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt; &lt;button type&#x3D;\&quot;button\&quot; :class&#x3D;\&quot;button.cssClass\&quot; class&#x3D;\&quot;botui-actions-buttons-button\&quot; v-botui-scroll v-for&#x3D;\&quot;button in action.button.buttons\&quot; @click&#x3D;\&quot;handle_action_button(button)\&quot;&gt;&lt;i v-if&#x3D;\&quot;button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + button.icon\&quot;&gt;&lt;&#x2F;i&gt; &#123;&#123;button.text&#125;&#125;&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;form v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;buttontext\&#39;\&quot; class&#x3D;\&quot;botui-actions-text\&quot; @submit.prevent&#x3D;\&quot;handle_action_text()\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-text-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;input type&#x3D;\&quot;text\&quot; ref&#x3D;\&quot;input\&quot; :type&#x3D;\&quot;action.text.sub_type\&quot; v-model&#x3D;\&quot;action.text.value\&quot; class&#x3D;\&quot;botui-actions-text-input\&quot; :placeholder&#x3D;\&quot;action.text.placeholder\&quot; :size&#x3D;\&quot;action.text.size\&quot; :value&#x3D;\&quot;action.text.value\&quot; :class&#x3D;\&quot;action.text.cssClass\&quot; required v-focus&#x2F;&gt; &lt;button type&#x3D;\&quot;submit\&quot; :class&#x3D;\&quot;&#123;\&#39;botui-actions-buttons-button\&#39;: !!action.text.button, \&#39;botui-actions-text-submit\&#39;: !action.text.button&#125;\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.button &amp;&amp; action.text.button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.button.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;span&gt;&#123;&#123;(action.text.button &amp;&amp; action.text.button.label) || \&#39;Go\&#39;&#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;div class&#x3D;\&quot;botui-actions-buttons\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt; &lt;button type&#x3D;\&quot;button\&quot; :class&#x3D;\&quot;button.cssClass\&quot; class&#x3D;\&quot;botui-actions-buttons-button\&quot; v-for&#x3D;\&quot;button in action.button.buttons\&quot; @click&#x3D;\&quot;handle_action_button(button)\&quot; autofocus&gt;&lt;i v-if&#x3D;\&quot;button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + button.icon\&quot;&gt;&lt;&#x2F;i&gt; &#123;&#123;button.text&#125;&#125;&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;&#x2F;form&gt;&lt;&#x2F;div&gt;&lt;&#x2F;transition&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&#39;, &#x2F;&#x2F; replaced by HTML template during build. see Gulpfile.js</span><br><span class="line">        data: function () &#123;</span><br><span class="line">          return &#123;</span><br><span class="line">            action: &#123;</span><br><span class="line">              text: &#123;</span><br><span class="line">                size: 30,</span><br><span class="line">                placeholder: &#39;Write here ..&#39;</span><br><span class="line">              &#125;,</span><br><span class="line">              button: &#123;&#125;,</span><br><span class="line">              show: false,</span><br><span class="line">              type: &#39;text&#39;,</span><br><span class="line">              autoHide: true,</span><br><span class="line">              addMessage: true</span><br><span class="line">            &#125;,</span><br><span class="line">            messages: []</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line">          isMobile: function () &#123;</span><br><span class="line">            return root.innerWidth &amp;&amp; root.innerWidth &lt;&#x3D; 768;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">          methods: &#123;</span><br><span class="line">              handle_action_button: function (button) &#123;</span><br><span class="line">            for (var i &#x3D; 0; i &lt; this.action.button.buttons.length; i++) &#123;</span><br><span class="line">              if(this.action.button.buttons[i].value &#x3D;&#x3D; button.value &amp;&amp; typeof(this.action.button.buttons[i].event) &#x3D;&#x3D; &#39;function&#39;) &#123;</span><br><span class="line">                this.action.button.buttons[i].event(button);</span><br><span class="line">                if (this.action.button.buttons[i].actionStop) return false;</span><br><span class="line">                break;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">  </span><br><span class="line">            _handleAction(button.text);</span><br><span class="line">  </span><br><span class="line">            var defaultActionObj &#x3D; &#123;</span><br><span class="line">              type: &#39;button&#39;,</span><br><span class="line">              text: button.text,</span><br><span class="line">              value: button.value</span><br><span class="line">            &#125;;</span><br><span class="line">  </span><br><span class="line">            for (var eachProperty in button) &#123;</span><br><span class="line">              if (button.hasOwnProperty(eachProperty)) &#123;</span><br><span class="line">                if (eachProperty !&#x3D;&#x3D; &#39;type&#39; &amp;&amp; eachProperty !&#x3D;&#x3D; &#39;text&#39; &amp;&amp; eachProperty !&#x3D;&#x3D; &#39;value&#39;) &#123;</span><br><span class="line">                  defaultActionObj[eachProperty] &#x3D; button[eachProperty];</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">  </span><br><span class="line">            _actionResolve(defaultActionObj);</span><br><span class="line">              &#125;,</span><br><span class="line">              handle_action_text: function () &#123;</span><br><span class="line">                  if(!this.action.text.value) return;</span><br><span class="line">            _handleAction(this.action.text.value);</span><br><span class="line">                  _actionResolve(&#123;</span><br><span class="line">              type: &#39;text&#39;,</span><br><span class="line">              value: this.action.text.value</span><br><span class="line">            &#125;);</span><br><span class="line">                  this.action.text.value &#x3D; &#39;&#39;;</span><br><span class="line">              &#125;,</span><br><span class="line">          handle_action_select: function () &#123;</span><br><span class="line">            if(this.action.select.searchselect &amp;&amp; !this.action.select.multipleselect) &#123;</span><br><span class="line">              if(!this.action.select.value.value) return;</span><br><span class="line">              _handleAction(this.action.select.value[this.action.select.label]);</span><br><span class="line">              _actionResolve(&#123;</span><br><span class="line">                type: &#39;text&#39;,</span><br><span class="line">                value: this.action.select.value.value,</span><br><span class="line">                text: this.action.select.value.text,</span><br><span class="line">                obj: this.action.select.value</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            if(this.action.select.searchselect &amp;&amp; this.action.select.multipleselect) &#123;</span><br><span class="line">              if(!this.action.select.value) return;</span><br><span class="line">              var values &#x3D; new Array();</span><br><span class="line">              var labels &#x3D; new Array();</span><br><span class="line">              for (var i &#x3D; 0; i &lt; this.action.select.value.length; i++) &#123;</span><br><span class="line">                values.push(this.action.select.value[i].value);</span><br><span class="line">                labels.push(this.action.select.value[i][this.action.select.label]);</span><br><span class="line">              &#125;</span><br><span class="line">              _handleAction(labels.join(&#39;, &#39;));</span><br><span class="line">              _actionResolve(&#123;</span><br><span class="line">                type: &#39;text&#39;,</span><br><span class="line">                value: values.join(&#39;, &#39;),</span><br><span class="line">                text: labels.join(&#39;, &#39;),</span><br><span class="line">                obj: this.action.select.value</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">              if(!this.action.select.value) return;</span><br><span class="line">              for (var i &#x3D; 0; i &lt; this.action.select.options.length; i++) &#123; &#x2F;&#x2F; Find select title</span><br><span class="line">                if (this.action.select.options[i].value &#x3D;&#x3D; this.action.select.value) &#123;</span><br><span class="line">                  _handleAction(this.action.select.options[i].text);</span><br><span class="line">                  _actionResolve(&#123;</span><br><span class="line">                    type: &#39;text&#39;,</span><br><span class="line">                    value: this.action.select.value,</span><br><span class="line">                    text: this.action.select.options[i].text</span><br><span class="line">                  &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      root.Vue.directive(&#39;botui-markdown&#39;, function (el, binding) &#123;</span><br><span class="line">        if(binding.value &#x3D;&#x3D; &#39;false&#39;) return; &#x2F;&#x2F; v-botui-markdown&#x3D;&quot;false&quot;</span><br><span class="line">        el.innerHTML &#x3D; _parseMarkDown(el.textContent);</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">      root.Vue.directive(&#39;botui-scroll&#39;, &#123;</span><br><span class="line">        inserted: function (el) &#123;</span><br><span class="line">          _container.scrollTop &#x3D; _container.scrollHeight;</span><br><span class="line">          &#x2F;&#x2F; 弹弹乐问题定位</span><br><span class="line">      el.scrollIntoView(&#123;behavior: &quot;smooth&quot;, block: &quot;center&quot;, inline: &quot;nearest&quot;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">      root.Vue.directive(&#39;focus&#39;, &#123;</span><br><span class="line">        inserted: function (el) &#123;</span><br><span class="line">          el.focus();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">      root.Vue.directive(&#39;botui-container&#39;, &#123;</span><br><span class="line">        inserted: function (el) &#123;</span><br><span class="line">          _container &#x3D; el;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">      _botApp &#x3D; new root.Vue(&#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">          &#39;bot-ui&#39;: _botuiComponent</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).$mount(&#39;#&#39; + id);</span><br><span class="line">  </span><br><span class="line">      var _instance &#x3D; _botApp.$children[0]; &#x2F;&#x2F; to access the component&#39;s data</span><br><span class="line">  </span><br><span class="line">      function _addMessage(_msg) &#123;</span><br><span class="line">  </span><br><span class="line">        if(!_msg.loading &amp;&amp; !_msg.content) &#123;</span><br><span class="line">          throw Error(&#39;BotUI: &quot;content&quot; is required in a non-loading message object.&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        _msg.type &#x3D; _msg.type || &#39;text&#39;;</span><br><span class="line">        _msg.visible &#x3D; (_msg.delay || _msg.loading) ? false : true;</span><br><span class="line">        var _index &#x3D; _instance.messages.push(_msg) - 1;</span><br><span class="line">  </span><br><span class="line">        return new Promise(function (resolve, reject) &#123;</span><br><span class="line">          setTimeout(function () &#123;</span><br><span class="line">            if(_msg.delay) &#123;</span><br><span class="line">              _msg.visible &#x3D; true;</span><br><span class="line">  </span><br><span class="line">              if(_msg.loading) &#123;</span><br><span class="line">                _msg.loading &#x3D; false;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(_index);</span><br><span class="line">          &#125;, _msg.delay || 0);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function _checkOpts(_opts) &#123;</span><br><span class="line">        if(typeof _opts &#x3D;&#x3D;&#x3D; &#39;string&#39;) &#123;</span><br><span class="line">          _opts &#x3D; &#123;</span><br><span class="line">            content: _opts</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        return _opts || &#123;&#125;;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      _interface.message &#x3D;  &#123;</span><br><span class="line">        add: function (addOpts) &#123;</span><br><span class="line">          return _addMessage( _checkOpts(addOpts) );</span><br><span class="line">        &#125;,</span><br><span class="line">        bot: function (addOpts) &#123;</span><br><span class="line">          addOpts &#x3D; _checkOpts(addOpts);</span><br><span class="line">          return _addMessage(addOpts);</span><br><span class="line">        &#125;,</span><br><span class="line">        human: function (addOpts) &#123;</span><br><span class="line">          addOpts &#x3D; _checkOpts(addOpts);</span><br><span class="line">          addOpts.human &#x3D; true;</span><br><span class="line">          return _addMessage(addOpts);</span><br><span class="line">        &#125;,</span><br><span class="line">        get: function (index) &#123;</span><br><span class="line">          return Promise.resolve(_instance.messages[index]);</span><br><span class="line">        &#125;,</span><br><span class="line">        remove: function (index) &#123;</span><br><span class="line">          _instance.messages.splice(index, 1);</span><br><span class="line">          return Promise.resolve();</span><br><span class="line">        &#125;,</span><br><span class="line">        update: function (index, msg) &#123; &#x2F;&#x2F; only content can be updated, not the message type.</span><br><span class="line">          var _msg &#x3D; _instance.messages[index];</span><br><span class="line">          _msg.content &#x3D; msg.content;</span><br><span class="line">          _msg.visible &#x3D; !msg.loading;</span><br><span class="line">          _msg.loading &#x3D; !!msg.loading;</span><br><span class="line">          return Promise.resolve(msg.content);</span><br><span class="line">        &#125;,</span><br><span class="line">        removeAll: function () &#123;</span><br><span class="line">          _instance.messages.splice(0, _instance.messages.length);</span><br><span class="line">          return Promise.resolve();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      function mergeAtoB(objA, objB) &#123;</span><br><span class="line">        for (var prop in objA) &#123;</span><br><span class="line">          if (!objB.hasOwnProperty(prop)) &#123;</span><br><span class="line">            objB[prop] &#x3D; objA[prop];</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function _checkAction(_opts) &#123;</span><br><span class="line">        if(!_opts.action &amp;&amp; !_opts.actionButton  &amp;&amp; !_opts.actionText) &#123;</span><br><span class="line">          throw Error(&#39;BotUI: &quot;action&quot; property is required.&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      function _showActions(_opts) &#123;</span><br><span class="line">  </span><br><span class="line">        _checkAction(_opts);</span><br><span class="line">  </span><br><span class="line">        mergeAtoB(&#123;</span><br><span class="line">          type: &#39;text&#39;,</span><br><span class="line">          cssClass: &#39;&#39;,</span><br><span class="line">          autoHide: true,</span><br><span class="line">          addMessage: true</span><br><span class="line">        &#125;, _opts);</span><br><span class="line">  </span><br><span class="line">        _instance.action.type &#x3D; _opts.type;</span><br><span class="line">        _instance.action.cssClass &#x3D; _opts.cssClass;</span><br><span class="line">        _instance.action.autoHide &#x3D; _opts.autoHide;</span><br><span class="line">        _instance.action.addMessage &#x3D; _opts.addMessage;</span><br><span class="line">  </span><br><span class="line">        return new Promise(function(resolve, reject) &#123;</span><br><span class="line">          _actionResolve &#x3D; resolve; &#x2F;&#x2F; resolved when action is performed, i.e: button clicked, text submitted, etc.</span><br><span class="line">          setTimeout(function () &#123;</span><br><span class="line">            _instance.action.show &#x3D; true;</span><br><span class="line">          &#125;, _opts.delay || 0);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      _interface.action &#x3D; &#123;</span><br><span class="line">        show: _showActions,</span><br><span class="line">        hide: function () &#123;</span><br><span class="line">          _instance.action.show &#x3D; false;</span><br><span class="line">          return Promise.resolve();</span><br><span class="line">        &#125;,</span><br><span class="line">        text: function (_opts) &#123;</span><br><span class="line">          _checkAction(_opts);</span><br><span class="line">          _instance.action.text &#x3D; _opts.action;</span><br><span class="line">          return _showActions(_opts);</span><br><span class="line">        &#125;,</span><br><span class="line">        button: function (_opts) &#123;</span><br><span class="line">          _checkAction(_opts);</span><br><span class="line">          _opts.type &#x3D; &#39;button&#39;;</span><br><span class="line">          _instance.action.button.buttons &#x3D; _opts.action;</span><br><span class="line">          return _showActions(_opts);</span><br><span class="line">        &#125;,</span><br><span class="line">        select: function (_opts) &#123;</span><br><span class="line">          _checkAction(_opts);</span><br><span class="line">          _opts.type &#x3D; &#39;select&#39;;</span><br><span class="line">          _opts.action.label &#x3D; _opts.action.label || &#39;text&#39;;</span><br><span class="line">          _opts.action.value &#x3D; _opts.action.value || &#39;&#39;;</span><br><span class="line">          _opts.action.searchselect &#x3D; typeof _opts.action.searchselect !&#x3D;&#x3D; &#39;undefined&#39; ? _opts.action.searchselect : _options.searchselect;</span><br><span class="line">          _opts.action.multipleselect &#x3D; _opts.action.multipleselect || false;</span><br><span class="line">          if (_opts.action.searchselect &amp;&amp; typeof(_opts.action.value) &#x3D;&#x3D; &#39;string&#39;) &#123;</span><br><span class="line">            if (!_opts.action.multipleselect) &#123;</span><br><span class="line">              for (var i &#x3D; 0; i &lt; _opts.action.options.length; i++) &#123; &#x2F;&#x2F; Find object</span><br><span class="line">                if (_opts.action.options[i].value &#x3D;&#x3D; _opts.action.value) &#123;</span><br><span class="line">                  _opts.action.value &#x3D; _opts.action.options[i]</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">              var vals &#x3D; _opts.action.value.split(&#39;,&#39;);</span><br><span class="line">              _opts.action.value &#x3D; new Array();</span><br><span class="line">              for (var i &#x3D; 0; i &lt; _opts.action.options.length; i++) &#123; &#x2F;&#x2F; Find object</span><br><span class="line">                for (var j &#x3D; 0; j &lt; vals.length; j++) &#123; &#x2F;&#x2F; Search values</span><br><span class="line">                  if (_opts.action.options[i].value &#x3D;&#x3D; vals[j]) &#123;</span><br><span class="line">                    _opts.action.value.push(_opts.action.options[i]);</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          if (!_opts.action.searchselect) &#123; _opts.action.options.unshift(&#123;value:&#39;&#39;,text : _opts.action.placeholder&#125;); &#125;</span><br><span class="line">          _instance.action.button &#x3D; _opts.action.button;</span><br><span class="line">          _instance.action.select &#x3D; _opts.action;</span><br><span class="line">          return _showActions(_opts);</span><br><span class="line">        &#125;,</span><br><span class="line">        buttontext: function (_opts) &#123;</span><br><span class="line">          _checkAction(_opts);</span><br><span class="line">          _opts.type &#x3D; &#39;buttontext&#39;;</span><br><span class="line">          _instance.action.button.buttons &#x3D; _opts.actionButton;</span><br><span class="line">          _instance.action.text &#x3D; _opts.actionText;</span><br><span class="line">          return _showActions(_opts);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      if(_options.fontawesome) &#123;</span><br><span class="line">        loadScript(_fontAwesome);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      if(_options.searchselect) &#123;</span><br><span class="line">        loadScript(_searchselect, function() &#123;</span><br><span class="line">          Vue.component(&#39;v-select&#39;, VueSelect.VueSelect);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      if(_options.debug) &#123;</span><br><span class="line">        _interface._botApp &#x3D; _botApp; &#x2F;&#x2F; current Vue instance</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      return _interface;</span><br><span class="line">    &#125;);</span><br><span class="line">  </span><br><span class="line">    return BotUI;</span><br><span class="line">  </span><br><span class="line">  &#125;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>botui_init.js</p>
<p>这个是整个项目的关键，聊天内容全部在这里进行设计，此处仅以我的项目作为示例，可以参阅 botui 的 github 仓库查阅使用文档，或者在我的项目上进行内容修改。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function botui_init() &#123;</span><br><span class="line">    var botui &#x3D; new BotUI(&quot;hello-akilar&quot;);</span><br><span class="line">    botui.message.add(&#123;</span><br><span class="line">      delay: 800,</span><br><span class="line">      content: &quot;Hi, 欢迎光临小霸王😊&quot;</span><br><span class="line">    &#125;).then(function() &#123;</span><br><span class="line">      botui.message.add(&#123;</span><br><span class="line">        delay: 1100,</span><br><span class="line">        content: &quot;我是小霸王😄&quot;</span><br><span class="line">      &#125;).then(function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 1100,</span><br><span class="line">          content: &quot;你也可以叫我黑皇😋&quot;</span><br><span class="line">        &#125;).then(function() &#123;</span><br><span class="line">          botui.action.button(&#123;</span><br><span class="line">            delay: 1600,</span><br><span class="line">            action: [&#123;</span><br><span class="line">              text: &quot;我想知道更多关于小霸王的故事!😃&quot;,</span><br><span class="line">              value: &quot;sure&quot;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &quot;好的，就这样吧，拜拜！🙄&quot;,</span><br><span class="line">              value: &quot;skip&quot;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;).then(function(a) &#123;</span><br><span class="line">            &quot;sure&quot; &#x3D;&#x3D; a.value &amp;&amp; sure();</span><br><span class="line">            &quot;skip&quot; &#x3D;&#x3D; a.value &amp;&amp; end()</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">    var sure &#x3D; function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 600,</span><br><span class="line">          content: &quot;🎉🎉🎉🎉🎉🎉&quot;</span><br><span class="line">        &#125;).then(function() &#123;</span><br><span class="line">          secondpart()</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      end &#x3D; function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 600,</span><br><span class="line">          content: &quot;w(ﾟДﾟ)w 不要走！再看看嘛！&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      secondpart &#x3D; function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 5000,</span><br><span class="line">          content: &quot;首先呢，很感谢您肯在这里驻足片刻❤️。小霸王是一个个人性质的博客，我会在这里发表各种各样的内容。&quot;</span><br><span class="line">        &#125;).then(function() &#123;</span><br><span class="line">          botui.message.add(&#123;</span><br><span class="line">            delay: 15000,</span><br><span class="line">            content: &quot;起这个名字是因为随便&quot;</span><br><span class="line">          &#125;).then(function() &#123;</span><br><span class="line">            botui.message.add(&#123;</span><br><span class="line">              delay: 5000,</span><br><span class="line">              content: &quot;分类也有一点我的恶趣味在。👀&quot;</span><br><span class="line">            &#125;).then(function() &#123;</span><br><span class="line">              botui.message.add(&#123;</span><br><span class="line">                delay: 8000,</span><br><span class="line">                content: &quot;都是瞎弄的🎉&quot;</span><br><span class="line">              &#125;).then(function() &#123;</span><br><span class="line">                botui.message.add(&#123;</span><br><span class="line">                  delay: 5000,</span><br><span class="line">                  content: &quot;相册，不要看，很羞耻的。😶&quot;</span><br><span class="line">                &#125;).then(function() &#123;</span><br><span class="line">                  botui.message.add(&#123;</span><br><span class="line">                    delay: 4000,</span><br><span class="line">                    content: &quot;内容酌情观看哦👻&quot;</span><br><span class="line">                  &#125;).then(function() &#123;</span><br><span class="line">                    botui.action.button(&#123;</span><br><span class="line">                      delay: 1100,</span><br><span class="line">                      action: [&#123;</span><br><span class="line">                        text: &quot;为什么叫小霸王呢？🤔&quot;,</span><br><span class="line">                        value: &quot;why-mashiro&quot;</span><br><span class="line">                      &#125;]</span><br><span class="line">                    &#125;).then(function(a) &#123;</span><br><span class="line">                      thirdpart()</span><br><span class="line">                    &#125;)</span><br><span class="line">                  &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      thirdpart &#x3D; function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 1e3,</span><br><span class="line">          content: &quot;不告诉你&quot;</span><br><span class="line">        &#125;).then(function() &#123;</span><br><span class="line">          botui.action.button(&#123;</span><br><span class="line">            delay: 1500,</span><br><span class="line">            action: [&#123;</span><br><span class="line">              text: &quot;😲，那英文名为什么叫黑皇呢？&quot;,</span><br><span class="line">              value: &quot;why-cat&quot;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;).then(function(a) &#123;</span><br><span class="line">            fourthpart()</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      fourthpart &#x3D; function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 3000,</span><br><span class="line">          content: &quot;小说看多了了 &quot;</span><br><span class="line">        &#125;).then(function() &#123;</span><br><span class="line">          botui.message.add(&#123;</span><br><span class="line">            delay: 3000,</span><br><span class="line">            content: &quot;灵感来自于太古神王~&quot;</span><br><span class="line">          &#125;).then(function() &#123;</span><br><span class="line">            botui.action.button(&#123;</span><br><span class="line">              delay: 1500,</span><br><span class="line">              action: [&#123;</span><br><span class="line">                text: &quot;方便透露一下真名吗？👀&quot;,</span><br><span class="line">                value: &quot;why-domain&quot;</span><br><span class="line">              &#125;]</span><br><span class="line">            &#125;).then(function(a) &#123;</span><br><span class="line">              fifthpart()</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      fifthpart &#x3D; function() &#123;</span><br><span class="line">        botui.message.add(&#123;</span><br><span class="line">          delay: 5000,</span><br><span class="line">          content: &quot;emmmm,流水幽吟绕耳边，煦风馨语抚心弦，挥臂欲揽冰钩月，银星斟酌醉人涎~&quot;</span><br><span class="line">        &#125;).then(function() &#123;</span><br><span class="line">          botui.message.add(&#123;</span><br><span class="line">            delay: 3000,</span><br><span class="line">            content: &quot;只是一介无名小卒而已^_^&quot;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>修改 <code>~\[blogroot]\_config.butterfly.yml</code>, 注意对齐格式。（大约在600-700行左右）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aside:</span><br><span class="line">  card_botui:</span><br><span class="line">    enable: true #侧栏机器人聊天窗口</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">引入js和css</span><br><span class="line"></span><br><span class="line">    inject:</span><br><span class="line">      head:</span><br><span class="line">        # 侧栏聊天窗口</span><br><span class="line">+       - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;css&#x2F;card_botui.css&quot; &#x2F;&gt;</span><br><span class="line">      bottom:</span><br><span class="line">+       # vue.js依赖</span><br><span class="line">+       - &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue@2.6.11&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">+       # 侧栏聊天窗</span><br><span class="line">+       - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;botui.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">+       - &lt;script data-pjax src&#x3D;&quot;&#x2F;js&#x2F;botui_init.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>在 <code>~\[blogroot]\themes\butterfly\languages\zh-CN.yml</code> 中添加相应译名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    aside:</span><br><span class="line">      articles: 文章</span><br><span class="line">      tags: 标签</span><br><span class="line">+     card_botui: 聊天窗</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo博客butterfly主题美化</category>
      </categories>
      <tags>
        <tag>美化</tag>
      </tags>
  </entry>
</search>
